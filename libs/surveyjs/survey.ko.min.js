/*!
 * surveyjs - Survey JavaScript library v0.10.2
 * (c) Andrew Telnov - http://surveyjs.org/
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */

!function (e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t(require("knockout")) : "function" == typeof define && define.amd ? define("Survey", ["knockout"], t) : "object" == typeof exports ? exports.Survey = t(require("knockout")) : e.Survey = t(e.ko)
}(this, function (e) {
    return function (e) {
        function t(i) {
            if (n[i])return n[i].exports;
            var o = n[i] = {exports: {}, id: i, loaded: !1};
            return e[i].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports
        }

        var n = {};
        return t.m = e, t.c = n, t.p = "", t(0)
    }([function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.__extends = t.SurveyTemplateText = t.SurveyWindow = t.QuestionText = t.QuestionRating = t.QuestionRadiogroup = t.QuestionMultipleText = t.QuestionMultipleTextImplementor = t.MultipleTextItem = t.QuestionMatrixDynamic = t.QuestionMatrixDynamicImplementor = t.QuestionMatrixDropdown = t.QuestionMatrix = t.MatrixRow = t.QuestionHtml = t.QuestionFile = t.QuestionDropdown = t.QuestionComment = t.QuestionCheckbox = t.QuestionCheckboxBaseImplementor = t.QuestionSelectBaseImplementor = t.QuestionImplementor = t.QuestionImplementorBase = t.Page = t.QuestionRow = t.Survey = t.defaultStandardCss = void 0;
        var i = n(1);
        Object.keys(i).forEach(function (e) {
            "default" !== e && "__esModule" !== e && Object.defineProperty(t, e, {
                enumerable: !0, get: function () {
                    return i[e]
                }
            })
        });
        var o = n(34);
        Object.defineProperty(t, "defaultStandardCss", {
            enumerable: !0, get: function () {
                return o.defaultStandardCss
            }
        });
        var r = n(35);
        Object.defineProperty(t, "Survey", {
            enumerable: !0, get: function () {
                return r.Survey
            }
        });
        var s = n(37);
        Object.defineProperty(t, "QuestionRow", {
            enumerable: !0, get: function () {
                return s.QuestionRow
            }
        }), Object.defineProperty(t, "Page", {
            enumerable: !0, get: function () {
                return s.Page
            }
        });
        var a = n(39);
        Object.defineProperty(t, "QuestionImplementorBase", {
            enumerable: !0, get: function () {
                return a.QuestionImplementorBase
            }
        });
        var u = n(40);
        Object.defineProperty(t, "QuestionImplementor", {
            enumerable: !0, get: function () {
                return u.QuestionImplementor
            }
        });
        var l = n(41);
        Object.defineProperty(t, "QuestionSelectBaseImplementor", {
            enumerable: !0, get: function () {
                return l.QuestionSelectBaseImplementor
            }
        }), Object.defineProperty(t, "QuestionCheckboxBaseImplementor", {
            enumerable: !0, get: function () {
                return l.QuestionCheckboxBaseImplementor
            }
        });
        var c = n(42);
        Object.defineProperty(t, "QuestionCheckbox", {
            enumerable: !0, get: function () {
                return c.QuestionCheckbox
            }
        });
        var h = n(43);
        Object.defineProperty(t, "QuestionComment", {
            enumerable: !0, get: function () {
                return h.QuestionComment
            }
        });
        var p = n(44);
        Object.defineProperty(t, "QuestionDropdown", {
            enumerable: !0, get: function () {
                return p.QuestionDropdown
            }
        });
        var d = n(45);
        Object.defineProperty(t, "QuestionFile", {
            enumerable: !0, get: function () {
                return d.QuestionFile
            }
        });
        var f = n(46);
        Object.defineProperty(t, "QuestionHtml", {
            enumerable: !0, get: function () {
                return f.QuestionHtml
            }
        });
        var m = n(47);
        Object.defineProperty(t, "MatrixRow", {
            enumerable: !0, get: function () {
                return m.MatrixRow
            }
        }), Object.defineProperty(t, "QuestionMatrix", {
            enumerable: !0, get: function () {
                return m.QuestionMatrix
            }
        });
        var g = n(48);
        Object.defineProperty(t, "QuestionMatrixDropdown", {
            enumerable: !0, get: function () {
                return g.QuestionMatrixDropdown
            }
        });
        var y = n(49);
        Object.defineProperty(t, "QuestionMatrixDynamicImplementor", {
            enumerable: !0, get: function () {
                return y.QuestionMatrixDynamicImplementor
            }
        }), Object.defineProperty(t, "QuestionMatrixDynamic", {
            enumerable: !0, get: function () {
                return y.QuestionMatrixDynamic
            }
        });
        var v = n(50);
        Object.defineProperty(t, "MultipleTextItem", {
            enumerable: !0, get: function () {
                return v.MultipleTextItem
            }
        }), Object.defineProperty(t, "QuestionMultipleTextImplementor", {
            enumerable: !0, get: function () {
                return v.QuestionMultipleTextImplementor
            }
        }), Object.defineProperty(t, "QuestionMultipleText", {
            enumerable: !0, get: function () {
                return v.QuestionMultipleText
            }
        });
        var b = n(51);
        Object.defineProperty(t, "QuestionRadiogroup", {
            enumerable: !0, get: function () {
                return b.QuestionRadiogroup
            }
        });
        var C = n(52);
        Object.defineProperty(t, "QuestionRating", {
            enumerable: !0, get: function () {
                return C.QuestionRating
            }
        });
        var w = n(53);
        Object.defineProperty(t, "QuestionText", {
            enumerable: !0, get: function () {
                return w.QuestionText
            }
        });
        var x = n(54);
        Object.defineProperty(t, "SurveyWindow", {
            enumerable: !0, get: function () {
                return x.SurveyWindow
            }
        });
        var V = n(56);
        Object.defineProperty(t, "SurveyTemplateText", {
            enumerable: !0, get: function () {
                return V.SurveyTemplateText
            }
        });
        var P = n(3);
        Object.defineProperty(t, "__extends", {
            enumerable: !0, get: function () {
                return P.__extends
            }
        }), n(57), n(66)
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0;
        var i        = n(2);
        Object.defineProperty(t, "AnswerCountValidator", {
            enumerable: !0, get: function () {
                return i.AnswerCountValidator
            }
        }), Object.defineProperty(t, "EmailValidator", {
            enumerable: !0, get: function () {
                return i.EmailValidator
            }
        }), Object.defineProperty(t, "NumericValidator", {
            enumerable: !0, get: function () {
                return i.NumericValidator
            }
        }), Object.defineProperty(t, "RegexValidator", {
            enumerable: !0, get: function () {
                return i.RegexValidator
            }
        }), Object.defineProperty(t, "SurveyValidator", {
            enumerable: !0, get: function () {
                return i.SurveyValidator
            }
        }), Object.defineProperty(t, "TextValidator", {
            enumerable: !0, get: function () {
                return i.TextValidator
            }
        }), Object.defineProperty(t, "ValidatorResult", {
            enumerable: !0, get: function () {
                return i.ValidatorResult
            }
        }), Object.defineProperty(t, "ValidatorRunner", {
            enumerable: !0, get: function () {
                return i.ValidatorRunner
            }
        });
        var o = n(4);
        Object.defineProperty(t, "Base", {
            enumerable: !0, get: function () {
                return o.Base
            }
        }), Object.defineProperty(t, "Event", {
            enumerable: !0, get: function () {
                return o.Event
            }
        }), Object.defineProperty(t, "ItemValue", {
            enumerable: !0, get: function () {
                return o.ItemValue
            }
        }), Object.defineProperty(t, "SurveyError", {
            enumerable: !0, get: function () {
                return o.SurveyError
            }
        });
        var r = n(8);
        Object.defineProperty(t, "ChoicesRestfull", {
            enumerable: !0, get: function () {
                return r.ChoicesRestfull
            }
        });
        var s = n(9);
        Object.defineProperty(t, "Condition", {
            enumerable: !0, get: function () {
                return s.Condition
            }
        }), Object.defineProperty(t, "ConditionNode", {
            enumerable: !0, get: function () {
                return s.ConditionNode
            }
        }), Object.defineProperty(t, "ConditionRunner", {
            enumerable: !0, get: function () {
                return s.ConditionRunner
            }
        });
        var a = n(10);
        Object.defineProperty(t, "ConditionsParser", {
            enumerable: !0, get: function () {
                return a.ConditionsParser
            }
        });
        var u = n(5);
        Object.defineProperty(t, "CustomError", {
            enumerable: !0, get: function () {
                return u.CustomError
            }
        }), Object.defineProperty(t, "ExceedSizeError", {
            enumerable: !0, get: function () {
                return u.ExceedSizeError
            }
        }), Object.defineProperty(t, "RequreNumericError", {
            enumerable: !0, get: function () {
                return u.RequreNumericError
            }
        });
        var l = n(7);
        Object.defineProperty(t, "JsonError", {
            enumerable: !0, get: function () {
                return l.JsonError
            }
        }), Object.defineProperty(t, "JsonIncorrectTypeError", {
            enumerable: !0, get: function () {
                return l.JsonIncorrectTypeError
            }
        }), Object.defineProperty(t, "JsonMetadata", {
            enumerable: !0, get: function () {
                return l.JsonMetadata
            }
        }), Object.defineProperty(t, "JsonMetadataClass", {
            enumerable: !0, get: function () {
                return l.JsonMetadataClass
            }
        }), Object.defineProperty(t, "JsonMissingTypeError", {
            enumerable: !0, get: function () {
                return l.JsonMissingTypeError
            }
        }), Object.defineProperty(t, "JsonMissingTypeErrorBase", {
            enumerable: !0, get: function () {
                return l.JsonMissingTypeErrorBase
            }
        }), Object.defineProperty(t, "JsonObject", {
            enumerable: !0, get: function () {
                return l.JsonObject
            }
        }), Object.defineProperty(t, "JsonObjectProperty", {
            enumerable: !0, get: function () {
                return l.JsonObjectProperty
            }
        }), Object.defineProperty(t, "JsonRequiredPropertyError", {
            enumerable: !0, get: function () {
                return l.JsonRequiredPropertyError
            }
        }), Object.defineProperty(t, "JsonUnknownPropertyError", {
            enumerable: !0, get: function () {
                return l.JsonUnknownPropertyError
            }
        });
        var c = n(11);
        Object.defineProperty(t, "MatrixDropdownCell", {
            enumerable: !0, get: function () {
                return c.MatrixDropdownCell
            }
        }), Object.defineProperty(t, "MatrixDropdownColumn", {
            enumerable: !0, get: function () {
                return c.MatrixDropdownColumn
            }
        }), Object.defineProperty(t, "MatrixDropdownRowModelBase", {
            enumerable: !0, get: function () {
                return c.MatrixDropdownRowModelBase
            }
        }), Object.defineProperty(t, "QuestionMatrixDropdownModelBase", {
            enumerable: !0, get: function () {
                return c.QuestionMatrixDropdownModelBase
            }
        });
        var h = n(17);
        Object.defineProperty(t, "MatrixDropdownRowModel", {
            enumerable: !0, get: function () {
                return h.MatrixDropdownRowModel
            }
        }), Object.defineProperty(t, "QuestionMatrixDropdownModel", {
            enumerable: !0, get: function () {
                return h.QuestionMatrixDropdownModel
            }
        });
        var p = n(18);
        Object.defineProperty(t, "MatrixDynamicRowModel", {
            enumerable: !0, get: function () {
                return p.MatrixDynamicRowModel
            }
        }), Object.defineProperty(t, "QuestionMatrixDynamicModel", {
            enumerable: !0, get: function () {
                return p.QuestionMatrixDynamicModel
            }
        });
        var d = n(19);
        Object.defineProperty(t, "MatrixRowModel", {
            enumerable: !0, get: function () {
                return d.MatrixRowModel
            }
        }), Object.defineProperty(t, "QuestionMatrixModel", {
            enumerable: !0, get: function () {
                return d.QuestionMatrixModel
            }
        });
        var f = n(20);
        Object.defineProperty(t, "MultipleTextItemModel", {
            enumerable: !0, get: function () {
                return f.MultipleTextItemModel
            }
        }), Object.defineProperty(t, "QuestionMultipleTextModel", {
            enumerable: !0, get: function () {
                return f.QuestionMultipleTextModel
            }
        });
        var m = n(21);
        Object.defineProperty(t, "PageModel", {
            enumerable: !0, get: function () {
                return m.PageModel
            }
        }), Object.defineProperty(t, "QuestionRowModel", {
            enumerable: !0, get: function () {
                return m.QuestionRowModel
            }
        });
        var g = n(12);
        Object.defineProperty(t, "Question", {
            enumerable: !0, get: function () {
                return g.Question
            }
        });
        var y = n(13);
        Object.defineProperty(t, "QuestionBase", {
            enumerable: !0, get: function () {
                return y.QuestionBase
            }
        });
        var v = n(15);
        Object.defineProperty(t, "QuestionCheckboxBase", {
            enumerable: !0, get: function () {
                return v.QuestionCheckboxBase
            }
        }), Object.defineProperty(t, "QuestionSelectBase", {
            enumerable: !0, get: function () {
                return v.QuestionSelectBase
            }
        });
        var b = n(22);
        Object.defineProperty(t, "QuestionCheckboxModel", {
            enumerable: !0, get: function () {
                return b.QuestionCheckboxModel
            }
        });
        var C = n(23);
        Object.defineProperty(t, "QuestionCommentModel", {
            enumerable: !0, get: function () {
                return C.QuestionCommentModel
            }
        });
        var w = n(24);
        Object.defineProperty(t, "QuestionDropdownModel", {
            enumerable: !0, get: function () {
                return w.QuestionDropdownModel
            }
        });
        var x = n(16);
        Object.defineProperty(t, "QuestionFactory", {
            enumerable: !0, get: function () {
                return x.QuestionFactory
            }
        });
        var V = n(25);
        Object.defineProperty(t, "QuestionFileModel", {
            enumerable: !0, get: function () {
                return V.QuestionFileModel
            }
        });
        var P = n(26);
        Object.defineProperty(t, "QuestionHtmlModel", {
            enumerable: !0, get: function () {
                return P.QuestionHtmlModel
            }
        });
        var k = n(27);
        Object.defineProperty(t, "QuestionRadiogroupModel", {
            enumerable: !0, get: function () {
                return k.QuestionRadiogroupModel
            }
        });
        var O = n(28);
        Object.defineProperty(t, "QuestionRatingModel", {
            enumerable: !0, get: function () {
                return O.QuestionRatingModel
            }
        });
        var T = n(29);
        Object.defineProperty(t, "QuestionTextModel", {
            enumerable: !0, get: function () {
                return T.QuestionTextModel
            }
        });
        var q = n(30);
        Object.defineProperty(t, "SurveyModel", {
            enumerable: !0, get: function () {
                return q.SurveyModel
            }
        });
        var S = n(32);
        Object.defineProperty(t, "SurveyTrigger", {
            enumerable: !0, get: function () {
                return S.SurveyTrigger
            }
        }), Object.defineProperty(t, "SurveyTriggerComplete", {
            enumerable: !0, get: function () {
                return S.SurveyTriggerComplete
            }
        }), Object.defineProperty(t, "SurveyTriggerSetValue", {
            enumerable: !0, get: function () {
                return S.SurveyTriggerSetValue
            }
        }), Object.defineProperty(t, "SurveyTriggerVisible", {
            enumerable: !0, get: function () {
                return S.SurveyTriggerVisible
            }
        }), Object.defineProperty(t, "Trigger", {
            enumerable: !0, get: function () {
                return S.Trigger
            }
        });
        var R = n(33);
        Object.defineProperty(t, "SurveyWindowModel", {
            enumerable: !0, get: function () {
                return R.SurveyWindowModel
            }
        });
        var M = n(14);
        Object.defineProperty(t, "TextPreProcessor", {
            enumerable: !0, get: function () {
                return M.TextPreProcessor
            }
        });
        var Q = n(31);
        Object.defineProperty(t, "dxSurveyService", {
            enumerable: !0, get: function () {
                return Q.dxSurveyService
            }
        });
        var j = n(6);
        Object.defineProperty(t, "surveyLocalization", {
            enumerable: !0, get: function () {
                return j.surveyLocalization
            }
        }), Object.defineProperty(t, "surveyStrings", {
            enumerable: !0, get: function () {
                return j.surveyStrings
            }
        })
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.EmailValidator = t.RegexValidator = t.AnswerCountValidator = t.TextValidator = t.NumericValidator = t.ValidatorRunner = t.SurveyValidator = t.ValidatorResult = void 0;
            var i = n(4), o = n(5), r = n(6), s = n(7), a = t.ValidatorResult = function () {
                function e(e, t) {
                    void 0 === t && (t = null), this.value = e, this.error = t
                }

                return e
            }(), u = t.SurveyValidator = function (t) {
                function n() {
                    t.call(this), this.text = ""
                }

                return e(n, t), n.prototype.getErrorText = function (e) {
                    return this.text ? this.text : this.getDefaultErrorText(e)
                }, n.prototype.getDefaultErrorText = function (e) {
                    return ""
                }, n.prototype.validate = function (e, t) {
                    return void 0 === t && (t = null), null
                }, n
            }(i.Base), l = (t.ValidatorRunner = function () {
                function e() {
                }

                return e.prototype.run = function (e) {
                    for (var t = 0; t < e.validators.length; t++) {
                        var n = e.validators[t].validate(e.value, e.getValidatorTitle());
                        if (null != n) {
                            if (n.error)return n.error;
                            n.value && (e.value = n.value)
                        }
                    }
                    return null
                }, e
            }(), t.NumericValidator = function (t) {
                function n(e, n) {
                    void 0 === e && (e = null), void 0 === n && (n = null), t.call(this), this.minValue = e, this.maxValue = n
                }

                return e(n, t), n.prototype.getType = function () {
                    return "numericvalidator"
                }, n.prototype.validate = function (e, t) {
                    if (void 0 === t && (t = null), !e || !this.isNumber(e))return new a(null, new o.RequreNumericError);
                    var n = new a(parseFloat(e));
                    return this.minValue && this.minValue > n.value ? (n.error = new o.CustomError(this.getErrorText(t)), n) : this.maxValue && this.maxValue < n.value ? (n.error = new o.CustomError(this.getErrorText(t)), n) : "number" == typeof e ? null : n
                }, n.prototype.getDefaultErrorText = function (e) {
                    var t = e ? e : "value";
                    return this.minValue && this.maxValue ? r.surveyLocalization.getString("numericMinMax").format(t, this.minValue, this.maxValue) : this.minValue ? r.surveyLocalization.getString("numericMin").format(t, this.minValue) : r.surveyLocalization.getString("numericMax").format(t, this.maxValue)
                }, n.prototype.isNumber = function (e) {
                    return !isNaN(parseFloat(e)) && isFinite(e)
                }, n
            }(u)), c = t.TextValidator = function (t) {
                function n(e) {
                    void 0 === e && (e = 0), t.call(this), this.minLength = e
                }

                return e(n, t), n.prototype.getType = function () {
                    return "textvalidator"
                }, n.prototype.validate = function (e, t) {
                    if (void 0 === t && (t = null), !(this.minLength <= 0))return e.length < this.minLength ? new a(null, new o.CustomError(this.getErrorText(t))) : null
                }, n.prototype.getDefaultErrorText = function (e) {
                    return r.surveyLocalization.getString("textMinLength").format(this.minLength)
                }, n
            }(u), h = t.AnswerCountValidator = function (t) {
                function n(e, n) {
                    void 0 === e && (e = null), void 0 === n && (n = null), t.call(this), this.minCount = e, this.maxCount = n
                }

                return e(n, t), n.prototype.getType = function () {
                    return "answercountvalidator"
                }, n.prototype.validate = function (e, t) {
                    if (void 0 === t && (t = null), null == e || e.constructor != Array)return null;
                    var n = e.length;
                    return this.minCount && n < this.minCount ? new a(null, new o.CustomError(this.getErrorText(r.surveyLocalization.getString("minSelectError").format(this.minCount)))) : this.maxCount && n > this.maxCount ? new a(null, new o.CustomError(this.getErrorText(r.surveyLocalization.getString("maxSelectError").format(this.maxCount)))) : null
                }, n.prototype.getDefaultErrorText = function (e) {
                    return e
                }, n
            }(u), p = t.RegexValidator = function (t) {
                function n(e) {
                    void 0 === e && (e = null), t.call(this), this.regex = e
                }

                return e(n, t), n.prototype.getType = function () {
                    return "regexvalidator"
                }, n.prototype.validate = function (e, t) {
                    if (void 0 === t && (t = null), !this.regex || !e)return null;
                    var n = new RegExp(this.regex);
                    return n.test(e) ? null : new a(e, new o.CustomError(this.getErrorText(t)))
                }, n
            }(u), d = t.EmailValidator = function (t) {
                function n() {
                    t.call(this), this.re = /^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i
                }

                return e(n, t), n.prototype.getType = function () {
                    return "emailvalidator"
                }, n.prototype.validate = function (e, t) {
                    return void 0 === t && (t = null), e ? this.re.test(e) ? null : new a(e, new o.CustomError(this.getErrorText(t))) : null
                }, n.prototype.getDefaultErrorText = function (e) {
                    return r.surveyLocalization.getString("invalidEmail")
                }, n
            }(u);
            s.JsonObject.metaData.addClass("surveyvalidator", ["text"]), s.JsonObject.metaData.addClass("numericvalidator", ["minValue:number", "maxValue:number"], function () {
                return new l
            }, "surveyvalidator"), s.JsonObject.metaData.addClass("textvalidator", ["minLength:number"], function () {
                return new c
            }, "surveyvalidator"), s.JsonObject.metaData.addClass("answercountvalidator", ["minCount:number", "maxCount:number"], function () {
                return new h
            }, "surveyvalidator"), s.JsonObject.metaData.addClass("regexvalidator", ["regex"], function () {
                return new p
            }, "surveyvalidator"), s.JsonObject.metaData.addClass("emailvalidator", [], function () {
                return new d
            }, "surveyvalidator")
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (n) {
            "use strict";
            function n(e, t) {
                function n() {
                    this.constructor = e
                }

                for (var i in t)t.hasOwnProperty(i) && (e[i] = t[i]);
                e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
            }

            t.__esModule = !0, t.__extends = n, "undefined" != typeof e && e.exports && (t = e.exports = n), t.__extends = n
        }).call(t, n(3))
    }, function (e, t) {
        "use strict";
        t.__esModule = !0;
        t.ItemValue = function () {
            function e(e, t) {
                void 0 === t && (t = null), this.text = t, this.value = e
            }

            return e.setData = function (t, n) {
                t.length = 0;
                for (var i = 0; i < n.length; i++) {
                    var o = n[i], r = new e(null);
                    if ("undefined" != typeof o.value) {
                        var s = null;
                        "undefined" != typeof o.getType && "itemvalue" == o.getType() && (o.itemValue = o.itemValue, r.itemText = o.itemText, s = e.itemValueProp), e.copyAttributes(o, r, s)
                    } else r.value = o;
                    t.push(r)
                }
            }, e.getData = function (e) {
                for (var t = new Array, n = 0; n < e.length; n++) {
                    var i = e[n];
                    i.hasText ? t.push({value: i.value, text: i.text}) : t.push(i.value)
                }
                return t
            }, e.getItemByValue = function (e, t) {
                for (var n = 0; n < e.length; n++)if (e[n].value == t)return e[n];
                return null
            }, e.copyAttributes = function (e, t, n) {
                for (var i in e)"function" != typeof e[i] && (n && n.indexOf(i) > -1 || (t[i] = e[i]))
            }, e.prototype.getType = function () {
                return "itemvalue"
            }, Object.defineProperty(e.prototype, "value", {
                get          : function () {
                    return this.itemValue
                }, set       : function (t) {
                    if (this.itemValue = t, this.itemValue) {
                        var n = this.itemValue.toString(), i = n.indexOf(e.Separator);
                        i > -1 && (this.itemValue = n.slice(0, i), this.text = n.slice(i + 1))
                    }
                }, enumerable: !0, configurable: !0
            }), Object.defineProperty(e.prototype, "hasText", {
                get          : function () {
                    return !!this.itemText
                }, enumerable: !0, configurable: !0
            }), Object.defineProperty(e.prototype, "text", {
                get          : function () {
                    return this.hasText ? this.itemText : this.value ? this.value.toString() : null
                }, set       : function (e) {
                    this.itemText = e
                }, enumerable: !0, configurable: !0
            }), e.Separator = "|", e.itemValueProp = ["text", "value", "hasText"], e
        }(), t.Base = function () {
            function e() {
            }

            return e.prototype.getType = function () {
                throw new Error("This method is abstract")
            }, e
        }(), t.SurveyError = function () {
            function e() {
            }

            return e.prototype.getText = function () {
                throw new Error("This method is abstract")
            }, e
        }(), t.SurveyPageId = "sq_page", t.SurveyElement = function () {
            function e() {
            }

            return e.ScrollElementToTop = function (e) {
                var t = document.getElementById(e);
                if (!t || !t.scrollIntoView)return !1;
                var n = t.getBoundingClientRect().top;
                return n < 0 && t.scrollIntoView(), n < 0
            }, e
        }(), t.Event = function () {
            function e() {
            }

            return Object.defineProperty(e.prototype, "isEmpty", {
                get          : function () {
                    return null == this.callbacks || 0 == this.callbacks.length
                }, enumerable: !0, configurable: !0
            }), e.prototype.fire = function (e, t) {
                if (null != this.callbacks)for (var n = 0; n < this.callbacks.length; n++) {
                    this.callbacks[n](e, t)
                }
            }, e.prototype.add = function (e) {
                null == this.callbacks && (this.callbacks = new Array), this.callbacks.push(e)
            }, e.prototype.remove = function (e) {
                if (null != this.callbacks) {
                    var t = this.callbacks.indexOf(e, 0);
                    void 0 != t && this.callbacks.splice(t, 1)
                }
            }, e
        }()
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.CustomError = t.ExceedSizeError = t.RequreNumericError = t.AnswerRequiredError = void 0;
            var i = n(6), o = n(4);
            t.AnswerRequiredError = function (t) {
                function n() {
                    t.call(this)
                }

                return e(n, t), n.prototype.getText = function () {
                    return i.surveyLocalization.getString("requiredError")
                }, n
            }(o.SurveyError), t.RequreNumericError = function (t) {
                function n() {
                    t.call(this)
                }

                return e(n, t), n.prototype.getText = function () {
                    return i.surveyLocalization.getString("numericError")
                }, n
            }(o.SurveyError), t.ExceedSizeError = function (t) {
                function n(e) {
                    t.call(this), this.maxSize = e
                }

                return e(n, t), n.prototype.getText = function () {
                    return i.surveyLocalization.getString("exceedMaxSize").format(this.getTextSize())
                }, n.prototype.getTextSize = function () {
                    var e = ["Bytes", "KB", "MB", "GB", "TB"], t = [0, 0, 2, 3, 3];
                    if (0 == this.maxSize)return "0 Byte";
                    var n = Math.floor(Math.log(this.maxSize) / Math.log(1024)), i = this.maxSize / Math.pow(1024, n);
                    return i.toFixed(t[n]) + " " + e[n]
                }, n
            }(o.SurveyError), t.CustomError = function (t) {
                function n(e) {
                    t.call(this), this.text = e
                }

                return e(n, t), n.prototype.getText = function () {
                    return this.text
                }, n
            }(o.SurveyError)
        }).call(t, n(3))
    }, function (e, t) {
        "use strict";
        t.__esModule = !0;
        var n        = t.surveyLocalization = {
            currentLocale: "", locales: {}, getString: function (e) {
                var t = this.currentLocale ? this.locales[this.currentLocale] : i;
                return t && t[e] || (t = i), t[e]
            }, getLocales: function () {
                var e = [];
                e.push("");
                for (var t in this.locales)e.push(t);
                return e.sort(), e
            }
        }, i = t.surveyStrings = {
            pagePrevText          : "Previous",
            pageNextText          : "Next",
            completeText          : "Complete",
            otherItemText         : "Other (describe)",
            progressText          : "Page {0} of {1}",
            emptySurvey           : "There is no any visible page or visible question in the survey.",
            completingSurvey      : "Thank You for completing the survey for the previous process! You can go ahead.",
            loadingSurvey         : "Survey is loading from the server...",
            optionsCaption        : "Choose...",
            requiredError         : "Please answer the question.",
            requiredInAllRowsError: "Please answer questions in all rows.",
            numericError          : "The value should be a numeric.",
            textMinLength         : "Please enter at least {0} symbols.",
            minRowCountError      : "Please fill at least {0} rows.",
            minSelectError        : "Please select at least {0} variants.",
            maxSelectError        : "Please select not more than {0} variants.",
            numericMinMax         : "The '{0}' should be equal or more than {1} and equal or less than {2}",
            numericMin            : "The '{0}' should be equal or more than {1}",
            numericMax            : "The '{0}' should be equal or less than {1}",
            invalidEmail          : "Please enter a valid e-mail.",
            urlRequestError       : "The request return error '{0}'. {1}",
            urlGetChoicesError    : "The request returns empty data or the 'path' property is incorrect",
            exceedMaxSize         : "The file size should not exceed {0}.",
            otherRequiredError    : "Please enter the others value.",
            uploadingFile         : "Your file is uploading. Please wait several seconds and try again.",
            addRow                : "Add Row",
            removeRow             : "Remove"
        };
        n.locales.en = i, String.prototype.format || (String.prototype.format = function () {
            var e = arguments;
            return this.replace(/{(\d+)}/g, function (t, n) {
                return "undefined" != typeof e[n] ? e[n] : t
            })
        })
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0;
            var n        = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                return typeof e
            } : function (e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, i         = t.JsonObjectProperty = function () {
                function e(e) {
                    this.name = e, this.typeValue = null, this.choicesValue = null, this.choicesfunc = null, this.className = null, this.classNamePart = null, this.baseClassName = null, this.defaultValue = null, this.onGetValue = null
                }

                return Object.defineProperty(e.prototype, "type", {
                    get          : function () {
                        return this.typeValue ? this.typeValue : "string"
                    }, set       : function (e) {
                        this.typeValue = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(e.prototype, "hasToUseGetValue", {
                    get          : function () {
                        return this.onGetValue
                    }, enumerable: !0, configurable: !0
                }), e.prototype.isDefaultValue = function (e) {
                    return this.defaultValue ? this.defaultValue == e : !e
                }, e.prototype.getValue = function (e) {
                    return this.onGetValue ? this.onGetValue(e) : null
                }, Object.defineProperty(e.prototype, "hasToUseSetValue", {
                    get          : function () {
                        return this.onSetValue
                    }, enumerable: !0, configurable: !0
                }), e.prototype.setValue = function (e, t, n) {
                    this.onSetValue && this.onSetValue(e, t, n)
                }, e.prototype.getObjType = function (e) {
                    return this.classNamePart ? e.replace(this.classNamePart, "") : e
                }, e.prototype.getClassName = function (e) {
                    return this.classNamePart && e.indexOf(this.classNamePart) < 0 ? e + this.classNamePart : e
                }, Object.defineProperty(e.prototype, "choices", {
                    get          : function () {
                        return null != this.choicesValue ? this.choicesValue : null != this.choicesfunc ? this.choicesfunc() : null
                    }, enumerable: !0, configurable: !0
                }), e.prototype.setChoices = function (e, t) {
                    this.choicesValue = e, this.choicesfunc = t
                }, e
            }(), o = t.JsonMetadataClass = function () {
                function e(e, t, n, i) {
                    void 0 === n && (n = null), void 0 === i && (i = null), this.name = e, this.creator = n, this.parentName = i, this.properties = null, this.requiredProperties = null, this.properties = new Array;
                    for (var o = 0; o < t.length; o++) {
                        var r = this.createProperty(t[o]);
                        r && this.properties.push(r)
                    }
                }

                return e.prototype.find = function (e) {
                    for (var t = 0; t < this.properties.length; t++)if (this.properties[t].name == e)return this.properties[t];
                    return null
                }, e.prototype.createProperty = function (t) {
                    var o = "string" == typeof t ? t : t.name;
                    if (o) {
                        var r = null, s = o.indexOf(e.typeSymbol);
                        s > -1 && (r = o.substring(s + 1), o = o.substring(0, s)), o = this.getPropertyName(o);
                        var a = new i(o);
                        if (r && (a.type = r), "object" === ("undefined" == typeof t ? "undefined" : n(t))) {
                            if (t.type && (a.type = t.type), t["default"] && (a.defaultValue = t["default"]), t.isRequired && this.makePropertyRequired(a.name), t.choices) {
                                var u = "function" == typeof t.choices ? t.choices : null, l = "function" != typeof t.choices ? t.choices : null;
                                a.setChoices(l, u)
                            }
                            t.onGetValue && (a.onGetValue = t.onGetValue), t.onSetValue && (a.onSetValue = t.onSetValue), t.className && (a.className = t.className), t.baseClassName && (a.baseClassName = t.baseClassName), t.classNamePart && (a.classNamePart = t.classNamePart)
                        }
                        return a
                    }
                }, e.prototype.getPropertyName = function (t) {
                    return 0 == t.length || t[0] != e.requiredSymbol ? t : (t = t.slice(1), this.makePropertyRequired(t), t)
                }, e.prototype.makePropertyRequired = function (e) {
                    this.requiredProperties || (this.requiredProperties = new Array), this.requiredProperties.push(e)
                }, e.requiredSymbol = "!", e.typeSymbol = ":", e
            }(), r = t.JsonMetadata = function () {
                function e() {
                    this.classes = {}, this.childrenClasses = {}, this.classProperties = {}, this.classRequiredProperties = {}
                }

                return e.prototype.addClass = function (e, t, n, i) {
                    void 0 === n && (n = null), void 0 === i && (i = null);
                    var r = new o(e, t, n, i);
                    if (this.classes[e] = r, i) {
                        var s = this.childrenClasses[i];
                        s || (this.childrenClasses[i] = []), this.childrenClasses[i].push(r)
                    }
                    return r
                }, e.prototype.overrideClassCreatore = function (e, t) {
                    var n = this.findClass(e);
                    n && (n.creator = t)
                }, e.prototype.getProperties = function (e) {
                    var t = this.classProperties[e];
                    return t || (t = new Array, this.fillProperties(e, t), this.classProperties[e] = t), t
                }, e.prototype.createClass = function (e) {
                    var t = this.findClass(e);
                    return t ? t.creator() : null
                }, e.prototype.getChildrenClasses = function (e, t) {
                    void 0 === t && (t = !1);
                    var n = [];
                    return this.fillChildrenClasses(e, t, n), n
                }, e.prototype.getRequiredProperties = function (e) {
                    var t = this.classRequiredProperties[e];
                    return t || (t = new Array, this.fillRequiredProperties(e, t), this.classRequiredProperties[e] = t), t
                }, e.prototype.addProperty = function (e, t) {
                    var n = this.findClass(e);
                    if (n) {
                        var i = n.createProperty(t);
                        i && (this.addPropertyToClass(n, i), this.emptyClassPropertiesHash(n))
                    }
                }, e.prototype.removeProperty = function (e, t) {
                    var n = this.findClass(e);
                    if (!n)return !1;
                    var i = n.find(t);
                    i && (this.removePropertyFromClass(n, i), this.emptyClassPropertiesHash(n))
                }, e.prototype.addPropertyToClass = function (e, t) {
                    null == e.find(t.name) && e.properties.push(t)
                }, e.prototype.removePropertyFromClass = function (e, t) {
                    var n = e.properties.indexOf(t);
                    n < 0 || (e.properties.splice(n, 1), e.requiredProperties && (n = e.requiredProperties.indexOf(t.name), n >= 0 && e.requiredProperties.splice(n, 1)))
                }, e.prototype.emptyClassPropertiesHash = function (e) {
                    this.classProperties[e.name] = null;
                    for (var t = this.getChildrenClasses(e.name), n = 0; n < t.length; n++)this.classProperties[t[n].name] = null
                }, e.prototype.fillChildrenClasses = function (e, t, n) {
                    var i = this.childrenClasses[e];
                    if (i)for (var o = 0; o < i.length; o++)t && !i[o].creator || n.push(i[o]), this.fillChildrenClasses(i[o].name, t, n)
                }, e.prototype.findClass = function (e) {
                    return this.classes[e]
                }, e.prototype.fillProperties = function (e, t) {
                    var n = this.findClass(e);
                    if (n) {
                        n.parentName && this.fillProperties(n.parentName, t);
                        for (var i = 0; i < n.properties.length; i++)this.addPropertyCore(n.properties[i], t, t.length)
                    }
                }, e.prototype.addPropertyCore = function (e, t, n) {
                    for (var i = -1, o = 0; o < n; o++)if (t[o].name == e.name) {
                        i = o;
                        break
                    }
                    i < 0 ? t.push(e) : t[i] = e
                }, e.prototype.fillRequiredProperties = function (e, t) {
                    var n = this.findClass(e);
                    n && (n.requiredProperties && Array.prototype.push.apply(t, n.requiredProperties), n.parentName && this.fillRequiredProperties(n.parentName, t))
                }, e
            }(), s = t.JsonError = function () {
                function e(e, t) {
                    this.type = e, this.message = t, this.description = "", this.at = -1
                }

                return e.prototype.getFullDescription = function () {
                    return this.message + (this.description ? "\n" + this.description : "")
                }, e
            }(), a = t.JsonUnknownPropertyError = function (t) {
                function n(e, n) {
                    t.call(this, "unknownproperty", "The property '" + e + "' in class '" + n + "' is unknown."), this.propertyName = e, this.className = n;
                    var i = p.metaData.getProperties(n);
                    if (i) {
                        this.description = "The list of available properties are: ";
                        for (var o = 0; o < i.length; o++)o > 0 && (this.description += ", "), this.description += i[o].name;
                        this.description += "."
                    }
                }

                return e(n, t), n
            }(s), u = t.JsonMissingTypeErrorBase = function (t) {
                function n(e, n, i) {
                    t.call(this, n, i), this.baseClassName = e, this.type = n, this.message = i, this.description = "The following types are available: ";
                    for (var o = p.metaData.getChildrenClasses(e, !0), r = 0; r < o.length; r++)r > 0 && (this.description += ", "), this.description += "'" + o[r].name + "'";
                    this.description += "."
                }

                return e(n, t), n
            }(s), l = t.JsonMissingTypeError = function (t) {
                function n(e, n) {
                    t.call(this, n, "missingtypeproperty", "The property type is missing in the object. Please take a look at property: '" + e + "'."), this.propertyName = e, this.baseClassName = n
                }

                return e(n, t), n
            }(u), c = t.JsonIncorrectTypeError = function (t) {
                function n(e, n) {
                    t.call(this, n, "incorrecttypeproperty", "The property type is incorrect in the object. Please take a look at property: '" + e + "'."), this.propertyName = e, this.baseClassName = n
                }

                return e(n, t), n
            }(u), h = t.JsonRequiredPropertyError = function (t) {
                function n(e, n) {
                    t.call(this, "requiredproperty", "The property '" + e + "' is required in class '" + n + "'."), this.propertyName = e, this.className = n
                }

                return e(n, t), n
            }(s), p = t.JsonObject = function () {
                function e() {
                    this.errors = new Array
                }

                return Object.defineProperty(e, "metaData", {
                    get          : function () {
                        return e.metaDataValue
                    }, enumerable: !0, configurable: !0
                }), e.prototype.toJsonObject = function (e) {
                    return this.toJsonObjectCore(e, null)
                }, e.prototype.toObject = function (t, n) {
                    if (t) {
                        var i = null;
                        if (n.getType && (i = e.metaData.getProperties(n.getType())), i)for (var o in t)if (o != e.typePropertyName)if (o != e.positionPropertyName) {
                            var r = this.findProperty(i, o);
                            r ? this.valueToObj(t[o], n, o, r) : this.addNewError(new a(o.toString(), n.getType()), t)
                        } else n[o] = t[o]
                    }
                }, e.prototype.toJsonObjectCore = function (t, n) {
                    if (!t.getType)return t;
                    var i = {};
                    null == n || n.className || (i[e.typePropertyName] = n.getObjType(t.getType()));
                    for (var o = e.metaData.getProperties(t.getType()), r = 0; r < o.length; r++)this.valueToJson(t, i, o[r]);
                    return i
                }, e.prototype.valueToJson = function (e, t, n) {
                    var i = null;
                    if (i = n.hasToUseGetValue ? n.getValue(e) : e[n.name], !n.isDefaultValue(i)) {
                        if (this.isValueArray(i)) {
                            for (var o = [], r = 0; r < i.length; r++)o.push(this.toJsonObjectCore(i[r], n));
                            i = o.length > 0 ? o : null
                        } else i = this.toJsonObjectCore(i, n);
                        n.isDefaultValue(i) || (t[n.name] = i)
                    }
                }, e.prototype.valueToObj = function (e, t, n, i) {
                    if (null != e) {
                        if (null != i && i.hasToUseSetValue)return void i.setValue(t, e, this);
                        if (this.isValueArray(e))return void this.valueToArray(e, t, n, i);
                        var o = this.createNewObj(e, i);
                        o.newObj && (this.toObject(e, o.newObj), e = o.newObj), o.error || (t[n] = e)
                    }
                }, e.prototype.isValueArray = function (e) {
                    return e.constructor.toString().indexOf("Array") > -1
                }, e.prototype.createNewObj = function (t, n) {
                    var i = {newObj: null, error: null}, o = t[e.typePropertyName];
                    return !o && null != n && n.className && (o = n.className), o = n.getClassName(o), i.newObj = o ? e.metaData.createClass(o) : null, i.error = this.checkNewObjectOnErrors(i.newObj, t, n, o), i
                }, e.prototype.checkNewObjectOnErrors = function (t, n, i, o) {
                    var r = null;
                    if (t) {
                        var s = e.metaData.getRequiredProperties(o);
                        if (s)for (var a = 0; a < s.length; a++)if (!n[s[a]]) {
                            r = new h(s[a], o);
                            break
                        }
                    } else i.baseClassName && (r = o ? new c(i.name, i.baseClassName) : new l(i.name, i.baseClassName));
                    return r && this.addNewError(r, n), r
                }, e.prototype.addNewError = function (t, n) {
                    n && n[e.positionPropertyName] && (t.at = n[e.positionPropertyName].start), this.errors.push(t)
                }, e.prototype.valueToArray = function (e, t, n, i) {
                    this.isValueArray(t[n]) || (t[n] = []);
                    for (var o = 0; o < e.length; o++) {
                        var r = this.createNewObj(e[o], i);
                        r.newObj ? (t[n].push(r.newObj), this.toObject(e[o], r.newObj)) : r.error || t[n].push(e[o])
                    }
                }, e.prototype.findProperty = function (e, t) {
                    if (!e)return null;
                    for (var n = 0; n < e.length; n++)if (e[n].name == t)return e[n];
                    return null
                }, e.typePropertyName = "type", e.positionPropertyName = "pos", e.metaDataValue = new r, e
            }()
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.ChoicesRestfull = void 0;
            var i = n(4), o = n(7), r = n(6), s = n(5), a = t.ChoicesRestfull = function (t) {
                function n() {
                    t.call(this), this.url = "", this.path = "", this.valueName = "", this.titleName = "", this.error = null
                }

                return e(n, t), n.prototype.run = function () {
                    if (this.url && this.getResultCallback) {
                        this.error = null;
                        var e      = new XMLHttpRequest;
                        e.open("GET", this.url), e.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                        var t = this;
                        e.onload = function () {
                            200 == e.status ? t.onLoad(JSON.parse(e.response)) : t.onError(e.statusText, e.responseText)
                        }, e.send()
                    }
                }, n.prototype.getType = function () {
                    return "choicesByUrl"
                }, Object.defineProperty(n.prototype, "isEmpty", {
                    get          : function () {
                        return !(this.url || this.path || this.valueName || this.titleName)
                    }, enumerable: !0, configurable: !0
                }), n.prototype.setData = function (e) {
                    this.clear(), e.url && (this.url = e.url), e.path && (this.path = e.path), e.valueName && (this.valueName = e.valueName), e.titleName && (this.titleName = e.titleName)
                }, n.prototype.clear = function () {
                    this.url = "", this.path = "", this.valueName = "", this.titleName = ""
                }, n.prototype.onLoad = function (e) {
                    var t = [];
                    if (e = this.getResultAfterPath(e), e && e.length)for (var n = 0; n < e.length; n++) {
                        var o = e[n];
                        if (o) {
                            var a = this.getValue(o), u = this.getTitle(o);
                            t.push(new i.ItemValue(a, u))
                        }
                    } else this.error = new s.CustomError(r.surveyLocalization.getString("urlGetChoicesError"));
                    this.getResultCallback(t)
                }, n.prototype.onError = function (e, t) {
                    this.error = new s.CustomError(r.surveyLocalization.getString("urlRequestError").format(e, t)), this.getResultCallback([])
                }, n.prototype.getResultAfterPath = function (e) {
                    if (!e)return e;
                    if (!this.path)return e;
                    for (var t = this.getPathes(), n = 0; n < t.length; n++)if (e = e[t[n]], !e)return null;
                    return e
                }, n.prototype.getPathes = function () {
                    var e = [];
                    return e = this.path.indexOf(";") > -1 ? this.path.split(";") : this.path.split(","), 0 == e.length && e.push(this.path), e
                }, n.prototype.getValue = function (e) {
                    if (this.valueName)return e[this.valueName];
                    var t = Object.keys(e).length;
                    return t < 1 ? null : e[Object.keys(e)[0]]
                }, n.prototype.getTitle = function (e) {
                    return this.titleName ? e[this.titleName] : null
                }, n
            }(i.Base);
            o.JsonObject.metaData.addClass("choicesByUrl", ["url", "path", "valueName", "titleName"], function () {
                return new a
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.ConditionRunner = t.ConditionNode = t.Condition = void 0;
        var i = n(10), o = (t.Condition = function () {
            function e() {
                this.opValue = "equal"
            }

            return Object.defineProperty(e, "operators", {
                get          : function () {
                    return null != e.operatorsValue ? e.operatorsValue : (e.operatorsValue = {
                        empty            : function (e, t) {
                            return !e
                        }, notempty      : function (e, t) {
                            return !!e
                        }, equal         : function (e, t) {
                            return e == t
                        }, notequal      : function (e, t) {
                            return e != t
                        }, contains      : function (e, t) {
                            return e && e.indexOf && e.indexOf(t) > -1
                        }, notcontains   : function (e, t) {
                            return !e || !e.indexOf || e.indexOf(t) == -1
                        }, greater       : function (e, t) {
                            return e > t
                        }, less          : function (e, t) {
                            return e < t
                        }, greaterorequal: function (e, t) {
                            return e >= t
                        }, lessorequal   : function (e, t) {
                            return e <= t
                        }
                    }, e.operatorsValue)
                }, enumerable: !0, configurable: !0
            }), Object.defineProperty(e.prototype, "operator", {
                get          : function () {
                    return this.opValue
                }, set       : function (t) {
                    t && (t = t.toLowerCase(), e.operators[t] && (this.opValue = t))
                }, enumerable: !0, configurable: !0
            }), e.prototype.perform = function (t, n) {
                return void 0 === t && (t = null), void 0 === n && (n = null), t || (t = this.left), n || (n = this.right), e.operators[this.operator](this.getPureValue(t), this.getPureValue(n))
            }, e.prototype.getPureValue = function (e) {
                if (!e || "string" != typeof e)return e;
                e.length > 0 && ("'" == e[0] || '"' == e[0]) && (e = e.substr(1));
                var t = e.length;
                return t > 0 && ("'" == e[t - 1] || '"' == e[t - 1]) && (e = e.substr(0, t - 1)), e
            }, e.operatorsValue = null, e
        }(), t.ConditionNode = function () {
            function e() {
                this.connectiveValue = "and", this.children = []
            }

            return Object.defineProperty(e.prototype, "connective", {
                get          : function () {
                    return this.connectiveValue
                }, set       : function (e) {
                    e && (e = e.toLowerCase(), "&" != e && "&&" != e || (e = "and"), "|" != e && "||" != e || (e = "or"), "and" != e && "or" != e || (this.connectiveValue = e))
                }, enumerable: !0, configurable: !0
            }), Object.defineProperty(e.prototype, "isEmpty", {
                get          : function () {
                    return 0 == this.children.length
                }, enumerable: !0, configurable: !0
            }), e.prototype.clear = function () {
                this.children = [], this.connective = "and"
            }, e
        }());
        t.ConditionRunner = function () {
            function e(e) {
                this.root = new o, this.expression = e
            }

            return Object.defineProperty(e.prototype, "expression", {
                get          : function () {
                    return this.expressionValue
                }, set       : function (e) {
                    this.expression != e && (this.expressionValue = e, (new i.ConditionsParser).parse(this.expressionValue, this.root))
                }, enumerable: !0, configurable: !0
            }), e.prototype.run = function (e) {
                return this.values = e, this.runNode(this.root)
            }, e.prototype.runNode = function (e) {
                for (var t = "and" == e.connective, n = 0; n < e.children.length; n++) {
                    var i = this.runNodeCondition(e.children[n]);
                    if (!i && t)return !1;
                    if (i && !t)return !0
                }
                return t
            }, e.prototype.runNodeCondition = function (e) {
                return !!e && (e.children ? this.runNode(e) : !!e.left && this.runCondition(e))
            }, e.prototype.runCondition = function (e) {
                var t = e.left, n = this.getValueName(t);
                if (n) {
                    if (!(n in this.values))return !1;
                    t = this.values[n]
                }
                var i = e.right;
                if (n = this.getValueName(i)) {
                    if (!(n in this.values))return !1;
                    i = this.values[n]
                }
                return e.perform(t, i)
            }, e.prototype.getValueName = function (e) {
                return e ? "string" != typeof e ? null : e.length < 3 || "{" != e[0] || "}" != e[e.length - 1] ? null : e.substr(1, e.length - 2) : null
            }, e
        }()
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.ConditionsParser = void 0;
        var i              = n(9);
        t.ConditionsParser = function () {
            function e() {
            }

            return e.prototype.parse = function (e, t) {
                this.text = e, this.root = t, this.root.clear(), this.at = 0, this.length = this.text.length;
                var n = this.parseText();
                return n
            }, e.prototype.toString = function (e) {
                return this.root = e, this.nodeToString(e)
            }, e.prototype.toStringCore = function (e) {
                return e ? e.children ? this.nodeToString(e) : e.left ? this.conditionToString(e) : "" : ""
            }, e.prototype.nodeToString = function (e) {
                if (e.isEmpty)return "";
                for (var t = "", n = 0; n < e.children.length; n++) {
                    var i = this.toStringCore(e.children[n]);
                    i && (t && (t += " " + e.connective + " "), t += i)
                }
                return e != this.root && e.children.length > 1 && (t = "(" + t + ")"), t
            }, e.prototype.conditionToString = function (e) {
                if (!e.right || !e.operator)return "";
                var t = e.left;
                t && !this.isNumeric(t) && (t = "'" + t + "'");
                var n = t + " " + this.operationToString(e.operator);
                if (this.isNoRightOperation(e.operator))return n;
                var i = e.right;
                return i && !this.isNumeric(i) && (i = "'" + i + "'"), n + " " + i
            }, e.prototype.operationToString = function (e) {
                return "equal" == e ? "=" : "notequal" == e ? "!=" : "greater" == e ? ">" : "less" == e ? "<" : "greaterorequal" == e ? ">=" : "lessorequal" == e ? "<=" : e
            }, e.prototype.isNumeric = function (e) {
                var t = parseFloat(e);
                return !isNaN(t) && isFinite(t)
            }, e.prototype.parseText = function () {
                this.node = this.root, this.expressionNodes = [], this.expressionNodes.push(this.node);
                var e = this.readConditions();
                return e && this.at >= this.length
            }, e.prototype.readConditions = function () {
                var e = this.readCondition();
                if (!e)return e;
                var t = this.readConnective();
                return !t || (this.addConnective(t), this.readConditions())
            }, e.prototype.readCondition = function () {
                if (!this.readExpression())return !1;
                var e = this.readString();
                if (!e)return !1;
                var t = this.readOperator();
                if (!t)return !1;
                var n = new i.Condition;
                if (n.left = e, n.operator = t, !this.isNoRightOperation(t)) {
                    var o = this.readString();
                    if (!o)return !1;
                    n.right = o
                }
                return this.addCondition(n), !0
            }, e.prototype.readExpression = function () {
                if (this.skip(), this.at >= this.length || "(" != this.ch)return !0;
                this.at++, this.pushExpression();
                var e = this.readConditions();
                return e && (this.skip(), e = ")" == this.ch, this.at++, this.popExpression()), e
            }, Object.defineProperty(e.prototype, "ch", {
                get          : function () {
                    return this.text.charAt(this.at)
                }, enumerable: !0, configurable: !0
            }), e.prototype.skip = function () {
                for (; this.at < this.length && this.isSpace(this.ch);)this.at++
            }, e.prototype.isSpace = function (e) {
                return " " == e || "\n" == e || "\t" == e || "\r" == e
            }, e.prototype.isQuotes = function (e) {
                return "'" == e || '"' == e
            }, e.prototype.isOperatorChar = function (e) {
                return ">" == e || "<" == e || "=" == e || "!" == e
            }, e.prototype.isBrackets = function (e) {
                return "(" == e || ")" == e
            }, e.prototype.readString = function () {
                if (this.skip(), this.at >= this.length)return null;
                var e = this.at, t = this.isQuotes(this.ch);
                t && this.at++;
                for (var n = this.isOperatorChar(this.ch); this.at < this.length && (t || !this.isSpace(this.ch));) {
                    if (this.isQuotes(this.ch)) {
                        t && this.at++;
                        break
                    }
                    if (!t) {
                        if (n != this.isOperatorChar(this.ch))break;
                        if (this.isBrackets(this.ch))break
                    }
                    this.at++
                }
                if (this.at <= e)return null;
                var i = this.text.substr(e, this.at - e);
                if (i && i.length > 1 && this.isQuotes(i[0])) {
                    var o = i.length - 1;
                    this.isQuotes(i[i.length - 1]) && o--, i = i.substr(1, o)
                }
                return i
            }, e.prototype.isNoRightOperation = function (e) {
                return "empty" == e || "notempty" == e
            }, e.prototype.readOperator = function () {
                var e = this.readString();
                return e ? (e = e.toLowerCase(), ">" == e && (e = "greater"), "<" == e && (e = "less"), ">=" != e && "=>" != e || (e = "greaterorequal"), "<=" != e && "=<" != e || (e = "lessorequal"), "=" != e && "==" != e || (e = "equal"), "<>" != e && "!=" != e || (e = "notequal"), "contain" == e && (e = "contains"), "notcontain" == e && (e = "notcontains"), e) : null
            }, e.prototype.readConnective = function () {
                var e = this.readString();
                return e ? (e = e.toLowerCase(), "&" != e && "&&" != e || (e = "and"), "|" != e && "||" != e || (e = "or"), "and" != e && "or" != e && (e = null), e) : null
            }, e.prototype.pushExpression = function () {
                var e = new i.ConditionNode;
                this.expressionNodes.push(e), this.node = e
            }, e.prototype.popExpression = function () {
                var e = this.expressionNodes.pop();
                this.node = this.expressionNodes[this.expressionNodes.length - 1], this.node.children.push(e)
            }, e.prototype.addCondition = function (e) {
                this.node.children.push(e)
            }, e.prototype.addConnective = function (e) {
                if (this.node.children.length < 2)this.node.connective = e; else if (this.node.connective != e) {
                    var t = this.node.connective, n = this.node.children;
                    this.node.clear(), this.node.connective = e;
                    var o = new i.ConditionNode;
                    o.connective = t, o.children = n, this.node.children.push(o);
                    var r = new i.ConditionNode;
                    this.node.children.push(r), this.node = r
                }
            }, e
        }()
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionMatrixDropdownModelBase = t.MatrixDropdownRowModelBase = t.MatrixDropdownCell = t.MatrixDropdownColumn = void 0;
            var i = n(7), o = n(12), r = n(4), s = n(6), a = n(15), u = n(16), l = t.MatrixDropdownColumn = function (t) {
                function n(e, n) {
                    void 0 === n && (n = null), t.call(this), this.name = e, this.choicesValue = [], this.isRequired = !1, this.hasOther = !1, this.minWidth = "", this.cellType = "default", this.colCountValue = -1
                }

                return e(n, t), n.prototype.getType = function () {
                    return "matrixdropdowncolumn"
                }, Object.defineProperty(n.prototype, "title", {
                    get          : function () {
                        return this.titleValue ? this.titleValue : this.name
                    }, set       : function (e) {
                        this.titleValue = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "choices", {
                    get          : function () {
                        return this.choicesValue
                    }, set       : function (e) {
                        r.ItemValue.setData(this.choicesValue, e)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "colCount", {
                    get          : function () {
                        return this.colCountValue
                    }, set       : function (e) {
                        e < -1 || e > 4 || (this.colCountValue = e)
                    }, enumerable: !0, configurable: !0
                }), n
            }(r.Base), c = t.MatrixDropdownCell = function () {
                function e(e, t, n) {
                    this.column = e, this.row = t, this.questionValue = n.createQuestion(this.row, this.column), this.questionValue.setData(t)
                }

                return Object.defineProperty(e.prototype, "question", {
                    get          : function () {
                        return this.questionValue
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(e.prototype, "value", {
                    get          : function () {
                        return this.question.value
                    }, set       : function (e) {
                        this.question.value = e
                    }, enumerable: !0, configurable: !0
                }), e
            }(), h = (t.MatrixDropdownRowModelBase = function () {
                function e(e, t) {
                    this.rowValues = {}, this.rowComments = {}, this.isSettingValue = !1, this.cells = [], this.data = e, this.value = t, this.buildCells()
                }

                return Object.defineProperty(e.prototype, "rowName", {
                    get          : function () {
                        return null
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(e.prototype, "value", {
                    get          : function () {
                        return this.rowValues
                    }, set       : function (e) {
                        if (this.isSettingValue = !0, this.rowValues = {}, null != e)for (var t in e)this.rowValues[t] = e[t];
                        for (var n = 0; n < this.cells.length; n++)this.cells[n].question.onSurveyValueChanged(this.getValue(this.cells[n].column.name));
                        this.isSettingValue = !1
                    }, enumerable: !0, configurable: !0
                }), e.prototype.getValue = function (e) {
                    return this.rowValues[e]
                }, e.prototype.setValue = function (e, t) {
                    this.isSettingValue || ("" === t && (t = null), null != t ? this.rowValues[e] = t : delete this.rowValues[e], this.data.onRowChanged(this, this.value))
                }, e.prototype.getComment = function (e) {
                    return this.rowComments[e]
                }, e.prototype.setComment = function (e, t) {
                    this.rowComments[e] = t
                }, Object.defineProperty(e.prototype, "isEmpty", {
                    get          : function () {
                        var e = this.value;
                        if (!e)return !0;
                        for (var t in e)return !1;
                        return !0
                    }, enumerable: !0, configurable: !0
                }), e.prototype.buildCells = function () {
                    for (var e = this.data.columns, t = 0; t < e.length; t++) {
                        var n = e[t];
                        this.cells.push(this.createCell(n))
                    }
                }, e.prototype.createCell = function (e) {
                    return new c(e, this, this.data)
                }, e
            }(), t.QuestionMatrixDropdownModelBase = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, this.columnsValue = [], this.choicesValue = [], this.isRowChanging = !1, this.cellTypeValue = "dropdown", this.columnColCountValue = 0, this.columnMinWidth = "", this.horizontalScroll = !1
                }

                return e(n, t), n.prototype.getType = function () {
                    return "matrixdropdownbase"
                }, Object.defineProperty(n.prototype, "columns", {
                    get          : function () {
                        return this.columnsValue
                    }, set       : function (e) {
                        this.columnsValue = e, this.fireCallback(this.columnsChangedCallback)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "cellType", {
                    get          : function () {
                        return this.cellTypeValue
                    }, set       : function (e) {
                        this.cellType != e && (this.cellTypeValue = e, this.fireCallback(this.updateCellsCallbak))
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "columnColCount", {
                    get          : function () {
                        return this.columnColCountValue
                    }, set       : function (e) {
                        e < 0 || e > 4 || (this.columnColCountValue = e, this.fireCallback(this.updateCellsCallbak))
                    }, enumerable: !0, configurable: !0
                }), n.prototype.getColumnTitle = function (e) {
                    var t = e.title;
                    if (e.isRequired && this.survey) {
                        var n = this.survey.requiredText;
                        n && (n += " "), t = n + t
                    }
                    return t
                }, n.prototype.getColumnWidth = function (e) {
                    return e.minWidth ? e.minWidth : this.columnMinWidth
                }, Object.defineProperty(n.prototype, "choices", {
                    get          : function () {
                        return this.choicesValue
                    }, set       : function (e) {
                        r.ItemValue.setData(this.choicesValue, e)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "optionsCaption", {
                    get          : function () {
                        return this.optionsCaptionValue ? this.optionsCaptionValue : s.surveyLocalization.getString("optionsCaption")
                    }, set       : function (e) {
                        this.optionsCaptionValue = e
                    }, enumerable: !0, configurable: !0
                }), n.prototype.addColumn = function (e, t) {
                    void 0 === t && (t = null);
                    var n = new l(e, t);
                    return this.columnsValue.push(n), n
                }, Object.defineProperty(n.prototype, "visibleRows", {
                    get          : function () {
                        return this.generatedVisibleRows = this.generateRows(), this.generatedVisibleRows
                    }, enumerable: !0, configurable: !0
                }), n.prototype.generateRows = function () {
                    return null
                }, n.prototype.createMatrixRow = function (e, t, n) {
                    return null
                }, n.prototype.createNewValue = function (e) {
                    return e ? e : {}
                }, n.prototype.getRowValue = function (e, t, n) {
                    void 0 === n && (n = !1);
                    var i = t[e.rowName] ? t[e.rowName] : null;
                    return !i && n && (i = {}, t[e.rowName] = i), i
                }, n.prototype.onValueChanged = function () {
                    if (!this.isRowChanging && this.generatedVisibleRows && 0 != this.generatedVisibleRows.length) {
                        this.isRowChanging = !0;
                        for (var e = this.createNewValue(this.value), t = 0; t < this.generatedVisibleRows.length; t++) {
                            var n                              = this.generatedVisibleRows[t];
                            this.generatedVisibleRows[t].value = this.getRowValue(n, e)
                        }
                        this.isRowChanging = !1
                    }
                }, n.prototype.hasErrors = function (e) {
                    void 0 === e && (e = !0);
                    var n = this.hasErrorInColumns(e);
                    return t.prototype.hasErrors.call(this, e) || n
                }, n.prototype.hasErrorInColumns = function (e) {
                    if (!this.generatedVisibleRows)return !1;
                    for (var t = !1, n = 0; n < this.columns.length; n++)for (var i = 0; i < this.generatedVisibleRows.length; i++) {
                        var o = this.generatedVisibleRows[i].cells;
                        t     = o && o[n] && o[n].question && o[n].question.hasErrors(e) || t
                    }
                    return t
                }, n.prototype.createQuestion = function (e, t) {
                    var n = this.createQuestionCore(e, t);
                    return n.name = t.name, n.isRequired = t.isRequired, n.hasOther = t.hasOther, t.hasOther && n instanceof a.QuestionSelectBase && (n.storeOthersAsComment = !1), n
                }, n.prototype.createQuestionCore = function (e, t) {
                    var n = "default" == t.cellType ? this.cellType : t.cellType, i = this.getQuestionName(e, t);
                    return "checkbox" == n ? this.createCheckbox(i, t) : "radiogroup" == n ? this.createRadiogroup(i, t) : "text" == n ? this.createText(i, t) : "comment" == n ? this.createComment(i, t) : this.createDropdown(i, t)
                }, n.prototype.getQuestionName = function (e, t) {
                    return e.rowName + "_" + t.name
                }, n.prototype.getColumnChoices = function (e) {
                    return e.choices && e.choices.length > 0 ? e.choices : this.choices
                }, n.prototype.getColumnOptionsCaption = function (e) {
                    return e.optionsCaption ? e.optionsCaption : this.optionsCaption
                }, n.prototype.createDropdown = function (e, t) {
                    var n = this.createCellQuestion("dropdown", e);
                    return n.choices = this.getColumnChoices(t), n.optionsCaption = this.getColumnOptionsCaption(t), n
                }, n.prototype.createCheckbox = function (e, t) {
                    var n = this.createCellQuestion("checkbox", e);
                    return n.choices = this.getColumnChoices(t), n.colCount = t.colCount > -1 ? t.colCount : this.columnColCount, n
                }, n.prototype.createRadiogroup = function (e, t) {
                    var n = this.createCellQuestion("radiogroup", e);
                    return n.choices = this.getColumnChoices(t), n.colCount = t.colCount > -1 ? t.colCount : this.columnColCount, n
                }, n.prototype.createText = function (e, t) {
                    return this.createCellQuestion("text", e)
                }, n.prototype.createComment = function (e, t) {
                    return this.createCellQuestion("comment", e)
                }, n.prototype.createCellQuestion = function (e, t) {
                    return u.QuestionFactory.Instance.createQuestion(e, t)
                }, n.prototype.deleteRowValue = function (e, t) {
                    return delete e[t.rowName], 0 == Object.keys(e).length ? null : e
                }, n.prototype.onRowChanged = function (e, t) {
                    var n = this.createNewValue(this.value), i = this.getRowValue(e, n, !0);
                    for (var o in i)delete i[o];
                    if (t) {
                        t = JSON.parse(JSON.stringify(t));
                        for (var o in t)i[o] = t[o]
                    }
                    0 == Object.keys(i).length && (n = this.deleteRowValue(n, e)), this.isRowChanging = !0, this.setNewValue(n), this.isRowChanging = !1
                }, n
            }(o.Question));
            i.JsonObject.metaData.addClass("matrixdropdowncolumn", ["name", {
                name: "title", onGetValue: function (e) {
                    return e.titleValue
                }
            }, {
                name         : "choices:itemvalues", onGetValue: function (e) {
                    return r.ItemValue.getData(e.choices)
                }, onSetValue: function (e, t) {
                    e.choices = t
                }
            }, "optionsCaption", {
                name     : "cellType",
                "default": "default",
                choices  : ["default", "dropdown", "checkbox", "radiogroup", "text", "comment"]
            }, {
                name     : "colCount",
                "default": -1,
                choices  : [-1, 0, 1, 2, 3, 4]
            }, "isRequired:boolean", "hasOther:boolean", "minWidth"], function () {
                return new l("")
            }), i.JsonObject.metaData.addClass("matrixdropdownbase", [{
                name     : "columns:matrixdropdowncolumns",
                className: "matrixdropdowncolumn"
            }, "horizontalScroll:boolean", {
                name         : "choices:itemvalues", onGetValue: function (e) {
                    return r.ItemValue.getData(e.choices)
                }, onSetValue: function (e, t) {
                    e.choices = t
                }
            }, {
                name: "optionsCaption", onGetValue: function (e) {
                    return e.optionsCaptionValue
                }
            }, {
                name     : "cellType",
                "default": "dropdown",
                choices  : ["dropdown", "checkbox", "radiogroup", "text", "comment"]
            }, {name: "columnColCount", "default": 0, choices: [0, 1, 2, 3, 4]}, "columnMinWidth"], function () {
                return new h("")
            }, "question")
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.Question = void 0;
            var i      = n(7), o = n(13), r = n(6), s = n(5), a = n(2), u = n(14);
            t.Question = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, this.titleValue = null, this.isRequiredValue = !1, this.hasCommentValue = !1, this.hasOtherValue = !1, this.commentTextValue = "", this.errors = [], this.validators = new Array, this.isValueChangedInSurvey = !1
                }

                return e(n, t), Object.defineProperty(n.prototype, "hasTitle", {
                    get          : function () {
                        return !0
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "title", {
                    get          : function () {
                        return this.titleValue ? this.titleValue : this.name
                    }, set       : function (e) {
                        this.titleValue = e, this.fireCallback(this.titleChangedCallback)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "processedTitle", {
                    get          : function () {
                        return null != this.survey ? this.survey.processText(this.title) : this.title
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "fullTitle", {
                    get          : function () {
                        if (this.survey && this.survey.questionTitleTemplate) {
                            if (!this.textPreProcessor) {
                                var e = this;
                                this.textPreProcessor = new u.TextPreProcessor, this.textPreProcessor.onHasValue = function (t) {
                                    return e.canProcessedTextValues(t.toLowerCase())
                                }, this.textPreProcessor.onProcess = function (t) {
                                    return e.getProcessedTextValue(t)
                                }
                            }
                            return this.textPreProcessor.process(this.survey.questionTitleTemplate)
                        }
                        var t = this.requiredText;
                        t && (t += " ");
                        var n = this.no;
                        return n && (n += ". "), n + t + this.processedTitle
                    }, enumerable: !0, configurable: !0
                }), n.prototype.canProcessedTextValues = function (e) {
                    return "no" == e || "title" == e || "require" == e
                }, n.prototype.getProcessedTextValue = function (e) {
                    return "no" == e ? this.no : "title" == e ? this.processedTitle : "require" == e ? this.requiredText : null
                }, n.prototype.supportComment = function () {
                    return !1
                }, n.prototype.supportOther = function () {
                    return !1
                }, Object.defineProperty(n.prototype, "isRequired", {
                    get          : function () {
                        return this.isRequiredValue
                    }, set       : function (e) {
                        this.isRequired != e && (this.isRequiredValue = e, this.fireCallback(this.titleChangedCallback))
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "hasComment", {
                    get          : function () {
                        return this.hasCommentValue
                    }, set       : function (e) {
                        this.supportComment() && (this.hasCommentValue = e, this.hasComment && (this.hasOther = !1))
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "commentText", {
                    get          : function () {
                        return this.commentTextValue ? this.commentTextValue : r.surveyLocalization.getString("otherItemText")
                    }, set       : function (e) {
                        this.commentTextValue = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "hasOther", {
                    get          : function () {
                        return this.hasOtherValue
                    }, set       : function (e) {
                        this.supportOther() && this.hasOther != e && (this.hasOtherValue = e, this.hasOther && (this.hasComment = !1), this.hasOtherChanged())
                    }, enumerable: !0, configurable: !0
                }), n.prototype.hasOtherChanged = function () {
                }, Object.defineProperty(n.prototype, "no", {
                    get          : function () {
                        if (this.visibleIndex < 0)return "";
                        var e = 1, t = !0, n = "";
                        return this.survey && this.survey.questionStartIndex && (n = this.survey.questionStartIndex, parseInt(n) ? e = parseInt(n) : 1 == n.length && (t = !1)), t ? (this.visibleIndex + e).toString() : String.fromCharCode(n.charCodeAt(0) + this.visibleIndex)
                    }, enumerable: !0, configurable: !0
                }), n.prototype.onSetData = function () {
                    t.prototype.onSetData.call(this), this.onSurveyValueChanged(this.value)
                }, Object.defineProperty(n.prototype, "value", {
                    get          : function () {
                        return this.valueFromData(this.getValueCore())
                    }, set       : function (e) {
                        this.setNewValue(e), this.fireCallback(this.valueChangedCallback)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "comment", {
                    get          : function () {
                        return this.getComment()
                    }, set       : function (e) {
                        this.comment != e && (this.setComment(e), this.fireCallback(this.commentChangedCallback))
                    }, enumerable: !0, configurable: !0
                }), n.prototype.getComment = function () {
                    return null != this.data ? this.data.getComment(this.name) : this.questionComment
                }, n.prototype.setComment = function (e) {
                    this.setNewComment(e)
                }, n.prototype.isEmpty = function () {
                    return null == this.value
                }, n.prototype.hasErrors = function (e) {
                    return void 0 === e && (e = !0), this.checkForErrors(e), this.errors.length > 0
                }, Object.defineProperty(n.prototype, "requiredText", {
                    get          : function () {
                        return null != this.survey && this.isRequired ? this.survey.requiredText : ""
                    }, enumerable: !0, configurable: !0
                }), n.prototype.addError = function (e) {
                    this.errors.push(e), this.fireCallback(this.errorsChangedCallback)
                }, n.prototype.checkForErrors = function (e) {
                    var t = this.errors ? this.errors.length : 0;
                    if (this.errors = [], this.onCheckForErrors(this.errors), 0 == this.errors.length && this.value) {
                        var n = this.runValidators();
                        n && this.errors.push(n)
                    }
                    if (this.survey && 0 == this.errors.length) {
                        var n = this.survey.validateQuestion(this.name);
                        n && this.errors.push(n)
                    }
                    e && (t != this.errors.length || t > 0) && this.fireCallback(this.errorsChangedCallback)
                }, n.prototype.onCheckForErrors = function (e) {
                    this.hasRequiredError() && this.errors.push(new s.AnswerRequiredError)
                }, n.prototype.hasRequiredError = function () {
                    return this.isRequired && this.isEmpty()
                }, n.prototype.runValidators = function () {
                    return (new a.ValidatorRunner).run(this)
                }, n.prototype.setNewValue = function (e) {
                    this.setNewValueInData(e), this.onValueChanged()
                }, n.prototype.setNewValueInData = function (e) {
                    this.isValueChangedInSurvey || (e = this.valueToData(e), this.setValueCore(e))
                }, n.prototype.getValueCore = function () {
                    return null != this.data ? this.data.getValue(this.name) : this.questionValue
                }, n.prototype.setValueCore = function (e) {
                    null != this.data ? this.data.setValue(this.name, e) : this.questionValue = e
                }, n.prototype.valueFromData = function (e) {
                    return e
                }, n.prototype.valueToData = function (e) {
                    return e
                }, n.prototype.onValueChanged = function () {
                }, n.prototype.setNewComment = function (e) {
                    null != this.data ? this.data.setComment(this.name, e) : this.questionComment = e
                }, n.prototype.onSurveyValueChanged = function (e) {
                    this.isValueChangedInSurvey = !0, this.value = this.valueFromData(e), this.fireCallback(this.commentChangedCallback), this.isValueChangedInSurvey = !1
                }, n.prototype.getValidatorTitle = function () {
                    return null
                }, n
            }(o.QuestionBase);
            i.JsonObject.metaData.addClass("question", [{
                name: "title:text", onGetValue: function (e) {
                    return e.titleValue
                }
            }, {
                name: "commentText", onGetValue: function (e) {
                    return e.commentTextValue
                }
            }, "isRequired:boolean", {
                name         : "validators:validators",
                baseClassName: "surveyvalidator",
                classNamePart: "validator"
            }], null, "questionbase")
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionBase = void 0;
            var i          = n(4), o = n(7), r = n(9);
            t.QuestionBase = function (t) {
                function n(e) {
                    t.call(this), this.name = e, this.conditionRunner = null, this.visibleIf = "", this.visibleValue = !0, this.startWithNewLine = !0, this.visibleIndexValue = -1, this.width = "", this.renderWidthValue = "", this.rightIndentValue = 0, this.indent = 0, this.idValue = n.getQuestionId(), this.onCreating()
                }

                return e(n, t), n.getQuestionId = function () {
                    return "sq_" + n.questionCounter++
                }, Object.defineProperty(n.prototype, "visible", {
                    get          : function () {
                        return this.visibleValue
                    }, set       : function (e) {
                        e != this.visible && (this.visibleValue = e, this.fireCallback(this.visibilityChangedCallback), this.fireCallback(this.rowVisibilityChangedCallback), this.survey && this.survey.questionVisibilityChanged(this, this.visible))
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "visibleIndex", {
                    get          : function () {
                        return this.visibleIndexValue
                    }, enumerable: !0, configurable: !0
                }), n.prototype.hasErrors = function (e) {
                    return void 0 === e && (e = !0), !1
                }, Object.defineProperty(n.prototype, "hasTitle", {
                    get          : function () {
                        return !1
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "hasComment", {
                    get          : function () {
                        return !1
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "id", {
                    get          : function () {
                        return this.idValue
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "renderWidth", {
                    get          : function () {
                        return this.renderWidthValue
                    }, set       : function (e) {
                        e != this.renderWidth && (this.renderWidthValue = e, this.fireCallback(this.renderWidthChangedCallback))
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "rightIndent", {
                    get          : function () {
                        return this.rightIndentValue
                    }, set       : function (e) {
                        e != this.rightIndent && (this.rightIndentValue = e, this.fireCallback(this.renderWidthChangedCallback))
                    }, enumerable: !0, configurable: !0
                }), n.prototype.focus = function () {
                    i.SurveyElement.ScrollElementToTop && this.fireCallback(this.focusCallback)
                }, n.prototype.setData = function (e) {
                    this.data = e, this.survey = e && e.questionAdded ? e : null, this.onSetData()
                }, n.prototype.fireCallback = function (e) {
                    e && e()
                }, n.prototype.onSetData = function () {
                }, n.prototype.onCreating = function () {
                }, n.prototype.runCondition = function (e) {
                    this.visibleIf && (this.conditionRunner || (this.conditionRunner = new r.ConditionRunner(this.visibleIf)), this.conditionRunner.expression = this.visibleIf, this.visible = this.conditionRunner.run(e))
                }, n.prototype.onSurveyValueChanged = function (e) {
                }, n.prototype.onSurveyLoad = function () {
                }, n.prototype.setVisibleIndex = function (e) {
                    this.visibleIndexValue != e && (this.visibleIndexValue = e, this.fireCallback(this.visibleIndexChangedCallback))
                }, n.prototype.supportGoNextPageAutomatic = function () {
                    return !1
                }, n.questionCounter = 100, n
            }(i.Base);
            o.JsonObject.metaData.addClass("questionbase", ["!name", {
                name     : "visible:boolean",
                "default": !0
            }, "visibleIf:text", {name: "width"}, {
                name     : "startWithNewLine:boolean",
                "default": !0
            }, {name: "indent:number", "default": 0, choices: [0, 1, 2, 3]}])
        }).call(t, n(3))
    }, function (e, t) {
        "use strict";
        t.__esModule = !0;
        var n        = t.TextPreProcessorItem = function () {
            function e() {
            }

            return e
        }();
        t.TextPreProcessor = function () {
            function e() {
            }

            return e.prototype.process = function (e) {
                if (!e)return e;
                if (!this.onProcess)return e;
                for (var t = this.getItems(e), n = t.length - 1; n >= 0; n--) {
                    var i = t[n], o = this.getName(e.substring(i.start + 1, i.end));
                    if (this.canProcessName(o) && (!this.onHasValue || this.onHasValue(o))) {
                        var r = this.onProcess(o);
                        null == r && (r = ""), e = e.substr(0, i.start) + r + e.substr(i.end + 1)
                    }
                }
                return e
            }, e.prototype.getItems = function (e) {
                for (var t = [], i = e.length, o = -1, r = "", s = 0; s < i; s++)if (r = e[s], "{" == r && (o = s), "}" == r) {
                    if (o > -1) {
                        var a = new n;
                        a.start = o, a.end = s, t.push(a)
                    }
                    o = -1
                }
                return t
            }, e.prototype.getName = function (e) {
                if (e)return e.trim()
            }, e.prototype.canProcessName = function (e) {
                if (!e)return !1;
                for (var t = 0; t < e.length; t++) {
                    var n = e[t];
                    if (" " == n || "-" == n || "&" == n)return !1
                }
                return !0
            }, e
        }()
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionCheckboxBase = t.QuestionSelectBase = void 0;
            var i = n(7), o = n(12), r = n(4), s = n(6), a = n(5), u = n(8), l = t.QuestionSelectBase = function (t) {
                function n(e) {
                    t.call(this, e), this.visibleChoicesCache = null, this.otherItem = new r.ItemValue("other", s.surveyLocalization.getString("otherItemText")), this.choicesFromUrl = null, this.cachedValueForUrlRequestion = null, this.choicesValues = new Array, this.otherErrorText = null, this.storeOthersAsComment = !0, this.choicesOrderValue = "none", this.isSettingComment = !1, this.choicesByUrl = this.createRestfull();
                    var n                               = this;
                    this.choicesByUrl.getResultCallback = function (e) {
                        n.onLoadChoicesFromUrl(e)
                    }
                }

                return e(n, t), Object.defineProperty(n.prototype, "isOtherSelected", {
                    get          : function () {
                        return this.getStoreOthersAsComment() ? this.getHasOther(this.value) : this.getHasOther(this.cachedValue)
                    }, enumerable: !0, configurable: !0
                }), n.prototype.getHasOther = function (e) {
                    return e == this.otherItem.value
                }, n.prototype.createRestfull = function () {
                    return new u.ChoicesRestfull
                }, n.prototype.getComment = function () {
                    return this.getStoreOthersAsComment() ? t.prototype.getComment.call(this) : this.commentValue
                }, n.prototype.setComment = function (e) {
                    this.getStoreOthersAsComment() ? t.prototype.setComment.call(this, e) : this.isSettingComment || e == this.commentValue || (this.isSettingComment = !0, this.commentValue = e, this.isOtherSelected && this.setNewValueInData(this.cachedValue), this.isSettingComment = !1)
                }, n.prototype.setNewValue = function (e) {
                    e && (this.cachedValueForUrlRequestion = e), t.prototype.setNewValue.call(this, e)
                }, n.prototype.valueFromData = function (e) {
                    return this.getStoreOthersAsComment() ? t.prototype.valueFromData.call(this, e) : (this.cachedValue = this.valueFromDataCore(e), this.cachedValue)
                }, n.prototype.valueToData = function (e) {
                    return this.getStoreOthersAsComment() ? t.prototype.valueToData.call(this, e) : (this.cachedValue = e, this.valueToDataCore(e))
                }, n.prototype.valueFromDataCore = function (e) {
                    return this.hasUnknownValue(e) ? e == this.otherItem.value ? e : (this.comment = e, this.otherItem.value) : e
                }, n.prototype.valueToDataCore = function (e) {
                    return e == this.otherItem.value && this.getComment() && (e = this.getComment()), e
                }, n.prototype.hasUnknownValue = function (e) {
                    if (!e)return !1;
                    for (var t = this.activeChoices, n = 0; n < t.length; n++)if (t[n].value == e)return !1;
                    return !0
                }, Object.defineProperty(n.prototype, "choices", {
                    get          : function () {
                        return this.choicesValues
                    }, set       : function (e) {
                        r.ItemValue.setData(this.choicesValues, e), this.onVisibleChoicesChanged()
                    }, enumerable: !0, configurable: !0
                }), n.prototype.hasOtherChanged = function () {
                    this.onVisibleChoicesChanged()
                }, Object.defineProperty(n.prototype, "choicesOrder", {
                    get          : function () {
                        return this.choicesOrderValue
                    }, set       : function (e) {
                        e != this.choicesOrderValue && (this.choicesOrderValue = e, this.onVisibleChoicesChanged())
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "otherText", {
                    get          : function () {
                        return this.otherItem.text
                    }, set       : function (e) {
                        this.otherItem.text = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "visibleChoices", {
                    get          : function () {
                        return this.hasOther || "none" != this.choicesOrder ? (this.visibleChoicesCache || (this.visibleChoicesCache = this.sortVisibleChoices(this.activeChoices.slice()),
                        this.hasOther && this.visibleChoicesCache.push(this.otherItem)), this.visibleChoicesCache) : this.activeChoices
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "activeChoices", {
                    get          : function () {
                        return this.choicesFromUrl ? this.choicesFromUrl : this.choices
                    }, enumerable: !0, configurable: !0
                }), n.prototype.supportComment = function () {
                    return !0
                }, n.prototype.supportOther = function () {
                    return !0
                }, n.prototype.onCheckForErrors = function (e) {
                    if (t.prototype.onCheckForErrors.call(this, e), this.isOtherSelected && !this.comment) {
                        var n = this.otherErrorText;
                        n || (n = s.surveyLocalization.getString("otherRequiredError")), e.push(new a.CustomError(n))
                    }
                }, n.prototype.getStoreOthersAsComment = function () {
                    return this.storeOthersAsComment && (null == this.survey || this.survey.storeOthersAsComment)
                }, n.prototype.onSurveyLoad = function () {
                    this.choicesByUrl && this.choicesByUrl.run()
                }, n.prototype.onLoadChoicesFromUrl = function (e) {
                    var t = this.errors.length;
                    this.errors = [], this.choicesByUrl && this.choicesByUrl.error && this.errors.push(this.choicesByUrl.error), (t > 0 || this.errors.length > 0) && this.fireCallback(this.errorsChangedCallback);
                    var n = null;
                    e && e.length > 0 && (n = new Array, r.ItemValue.setData(n, e)), this.choicesFromUrl = n, this.onVisibleChoicesChanged(), this.cachedValueForUrlRequestion && (this.value = this.cachedValueForUrlRequestion)
                }, n.prototype.onVisibleChoicesChanged = function () {
                    this.visibleChoicesCache = null, this.fireCallback(this.choicesChangedCallback)
                }, n.prototype.sortVisibleChoices = function (e) {
                    var t = this.choicesOrder.toLowerCase();
                    return "asc" == t ? this.sortArray(e, 1) : "desc" == t ? this.sortArray(e, -1) : "random" == t ? this.randomizeArray(e) : e
                }, n.prototype.sortArray = function (e, t) {
                    return e.sort(function (e, n) {
                        return e.text < n.text ? -1 * t : e.text > n.text ? 1 * t : 0
                    })
                }, n.prototype.randomizeArray = function (e) {
                    for (var t = e.length - 1; t > 0; t--) {
                        var n = Math.floor(Math.random() * (t + 1)), i = e[t];
                        e[t] = e[n], e[n] = i
                    }
                    return e
                }, n
            }(o.Question);
            t.QuestionCheckboxBase = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, this.colCountValue = 1
                }

                return e(n, t), Object.defineProperty(n.prototype, "colCount", {
                    get          : function () {
                        return this.colCountValue
                    }, set       : function (e) {
                        e < 0 || e > 4 || (this.colCountValue = e, this.fireCallback(this.colCountChangedCallback))
                    }, enumerable: !0, configurable: !0
                }), n
            }(l);
            i.JsonObject.metaData.addClass("selectbase", ["hasComment:boolean", "hasOther:boolean", {
                name      : "choices:itemvalues",
                onGetValue: function (e) {
                    return r.ItemValue.getData(e.choices)
                },
                onSetValue: function (e, t) {
                    e.choices = t
                }
            }, {
                name     : "choicesOrder",
                "default": "none",
                choices  : ["none", "asc", "desc", "random"]
            }, {
                name         : "choicesByUrl:restfull", className: "ChoicesRestfull", onGetValue: function (e) {
                    return e.choicesByUrl.isEmpty ? null : e.choicesByUrl
                }, onSetValue: function (e, t) {
                    e.choicesByUrl.setData(t)
                }
            }, {
                name     : "otherText",
                "default": s.surveyLocalization.getString("otherItemText")
            }, "otherErrorText", {
                name     : "storeOthersAsComment:boolean",
                "default": !0
            }], null, "question"), i.JsonObject.metaData.addClass("checkboxbase", [{
                name     : "colCount:number",
                "default": 1,
                choices  : [0, 1, 2, 3, 4]
            }], null, "selectbase")
        }).call(t, n(3))
    }, function (e, t) {
        "use strict";
        t.__esModule      = !0;
        t.QuestionFactory = function () {
            function e() {
                this.creatorHash = {}
            }

            return e.prototype.registerQuestion = function (e, t) {
                this.creatorHash[e] = t
            }, e.prototype.getAllTypes = function () {
                var e = new Array;
                for (var t in this.creatorHash)e.push(t);
                return e.sort()
            }, e.prototype.createQuestion = function (e, t) {
                var n = this.creatorHash[e];
                return null == n ? null : n(t)
            }, e.Instance = new e, e.DefaultChoices = ["one", "two|second value", "three|third value"], e
        }()
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionMatrixDropdownModel = t.MatrixDropdownRowModel = void 0;
            var i = n(11), o = n(7), r = n(4), s = n(16), a = t.MatrixDropdownRowModel = function (t) {
                function n(e, n, i, o) {
                    t.call(this, i, o), this.name = e, this.text = n
                }

                return e(n, t), Object.defineProperty(n.prototype, "rowName", {
                    get          : function () {
                        return this.name
                    }, enumerable: !0, configurable: !0
                }), n
            }(i.MatrixDropdownRowModelBase), u = t.QuestionMatrixDropdownModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, this.rowsValue = []
                }

                return e(n, t), n.prototype.getType = function () {
                    return "matrixdropdown"
                }, Object.defineProperty(n.prototype, "rows", {
                    get          : function () {
                        return this.rowsValue
                    }, set       : function (e) {
                        r.ItemValue.setData(this.rowsValue, e)
                    }, enumerable: !0, configurable: !0
                }), n.prototype.generateRows = function () {
                    var e = new Array;
                    if (!this.rows || 0 === this.rows.length)return e;
                    var t = this.value;
                    t || (t = {});
                    for (var n = 0; n < this.rows.length; n++)this.rows[n].value && e.push(this.createMatrixRow(this.rows[n].value, this.rows[n].text, t[this.rows[n].value]));
                    return e
                }, n.prototype.createMatrixRow = function (e, t, n) {
                    return new a(e, t, this, n)
                }, n
            }(i.QuestionMatrixDropdownModelBase);
            o.JsonObject.metaData.addClass("matrixdropdown", [{
                name         : "rows:itemvalues", onGetValue: function (e) {
                    return r.ItemValue.getData(e.rows)
                }, onSetValue: function (e, t) {
                    e.rows = t
                }
            }], function () {
                return new u("")
            }, "matrixdropdownbase"), s.QuestionFactory.Instance.registerQuestion("matrixdropdown", function (e) {
                var t = new u(e);
                return t.choices = [1, 2, 3, 4, 5], t.rows = ["Row 1", "Row 2"], t.addColumn("Column 1"), t.addColumn("Column 2"), t.addColumn("Column 3"), t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionMatrixDynamicModel = t.MatrixDynamicRowModel = void 0;
            var i = n(11), o = n(7), r = n(16), s = n(6), a = n(5), u = t.MatrixDynamicRowModel = function (t) {
                function n(e, n, i) {
                    t.call(this, n, i), this.index = e
                }

                return e(n, t), Object.defineProperty(n.prototype, "rowName", {
                    get          : function () {
                        return "row" + this.index
                    }, enumerable: !0, configurable: !0
                }), n
            }(i.MatrixDropdownRowModelBase), l = t.QuestionMatrixDynamicModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, this.rowCounter = 0, this.rowCountValue = 2, this.addRowTextValue = null, this.removeRowTextValue = null, this.minRowCount = 0
                }

                return e(n, t), n.prototype.getType = function () {
                    return "matrixdynamic"
                }, Object.defineProperty(n.prototype, "rowCount", {
                    get          : function () {
                        return this.rowCountValue
                    }, set       : function (e) {
                        if (!(e < 0 || e > n.MaxRowCount)) {
                            if (this.rowCountValue = e, this.value && this.value.length > e) {
                                var t = this.value;
                                t.splice(e), this.value = t
                            }
                            this.fireCallback(this.rowCountChangedCallback)
                        }
                    }, enumerable: !0, configurable: !0
                }), n.prototype.addRow = function () {
                    this.generatedVisibleRows && this.generatedVisibleRows.push(this.createMatrixRow(null)), this.rowCount++
                }, n.prototype.removeRow = function (e) {
                    if (!(e < 0 || e >= this.rowCount)) {
                        if (this.generatedVisibleRows && e < this.generatedVisibleRows.length && this.generatedVisibleRows.splice(e, 1), this.value) {
                            var t = this.createNewValue(this.value);
                            t.splice(e, 1), t = this.deleteRowValue(t, null), this.value = t
                        }
                        this.rowCount--
                    }
                }, Object.defineProperty(n.prototype, "addRowText", {
                    get          : function () {
                        return this.addRowTextValue ? this.addRowTextValue : s.surveyLocalization.getString("addRow")
                    }, set       : function (e) {
                        this.addRowTextValue = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "removeRowText", {
                    get          : function () {
                        return this.removeRowTextValue ? this.removeRowTextValue : s.surveyLocalization.getString("removeRow")
                    }, set       : function (e) {
                        this.removeRowTextValue = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "cachedVisibleRows", {
                    get          : function () {
                        return this.generatedVisibleRows && this.generatedVisibleRows.length == this.rowCount ? this.generatedVisibleRows : this.visibleRows
                    }, enumerable: !0, configurable: !0
                }), n.prototype.onCheckForErrors = function (e) {
                    t.prototype.onCheckForErrors.call(this, e), this.hasErrorInRows() && e.push(new a.CustomError(s.surveyLocalization.getString("minRowCountError").format(this.minRowCount)))
                }, n.prototype.hasErrorInRows = function () {
                    if (this.minRowCount <= 0 || !this.generatedVisibleRows)return !1;
                    for (var e = 0, t = 0; t < this.generatedVisibleRows.length; t++) {
                        var n = this.generatedVisibleRows[t];
                        n.isEmpty || e++
                    }
                    return e < this.minRowCount
                }, n.prototype.generateRows = function () {
                    var e = new Array;
                    if (0 === this.rowCount)return e;
                    for (var t = this.createNewValue(this.value), n = 0; n < this.rowCount; n++)e.push(this.createMatrixRow(this.getRowValueByIndex(t, n)));
                    return e
                }, n.prototype.createMatrixRow = function (e) {
                    return new u((this.rowCounter++), this, e)
                }, n.prototype.createNewValue = function (e) {
                    var t = e;
                    t || (t = []);
                    t.length > this.rowCount && t.splice(this.rowCount - 1);
                    for (var n = t.length; n < this.rowCount; n++)t.push({});
                    return t
                }, n.prototype.deleteRowValue = function (e, t) {
                    for (var n = !0, i = 0; i < e.length; i++)if (Object.keys(e[i]).length > 0) {
                        n = !1;
                        break
                    }
                    return n ? null : e
                }, n.prototype.getRowValueByIndex = function (e, t) {
                    return t >= 0 && t < e.length ? e[t] : null
                }, n.prototype.getRowValue = function (e, t, n) {
                    return void 0 === n && (n = !1), this.getRowValueByIndex(t, this.generatedVisibleRows.indexOf(e))
                }, n.MaxRowCount = 100, n
            }(i.QuestionMatrixDropdownModelBase);
            o.JsonObject.metaData.addClass("matrixdynamic", [{
                name     : "rowCount:number",
                "default": 2
            }, {name: "minRowCount:number", "default": 0}, {
                name: "addRowText", onGetValue: function (e) {
                    return e.addRowTextValue
                }
            }, {
                name: "removeRowText", onGetValue: function (e) {
                    return e.removeRowTextValue
                }
            }], function () {
                return new l("")
            }, "matrixdropdownbase"), r.QuestionFactory.Instance.registerQuestion("matrixdynamic", function (e) {
                var t = new l(e);
                return t.choices = [1, 2, 3, 4, 5], t.addColumn("Column 1"), t.addColumn("Column 2"), t.addColumn("Column 3"), t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionMatrixModel = t.MatrixRowModel = void 0;
            var i = n(4), o = n(12), r = n(7), s = n(6), a = n(5), u = n(16), l = t.MatrixRowModel = function (t) {
                function n(e, n, i, o, r) {
                    t.call(this), this.name = e, this.text = n, this.fullName = i, this.data = o, this.rowValue = r
                }

                return e(n, t), Object.defineProperty(n.prototype, "value", {
                    get          : function () {
                        return this.rowValue
                    }, set       : function (e) {
                        this.rowValue = e, this.data && this.data.onMatrixRowChanged(this), this.onValueChanged()
                    }, enumerable: !0, configurable: !0
                }), n.prototype.onValueChanged = function () {
                }, n
            }(i.Base), c = t.QuestionMatrixModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, this.columnsValue = [], this.rowsValue = [], this.isRowChanging = !1, this.isAllRowRequired = !1
                }

                return e(n, t), n.prototype.getType = function () {
                    return "matrix"
                }, Object.defineProperty(n.prototype, "hasRows", {
                    get          : function () {
                        return this.rowsValue.length > 0
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "columns", {
                    get          : function () {
                        return this.columnsValue
                    }, set       : function (e) {
                        i.ItemValue.setData(this.columnsValue, e)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "rows", {
                    get          : function () {
                        return this.rowsValue
                    }, set       : function (e) {
                        i.ItemValue.setData(this.rowsValue, e)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "visibleRows", {
                    get          : function () {
                        var e = new Array, t = this.value;
                        t || (t = {});
                        for (var n = 0; n < this.rows.length; n++)this.rows[n].value && e.push(this.createMatrixRow(this.rows[n].value, this.rows[n].text, this.name + "_" + this.rows[n].value.toString(), t[this.rows[n].value]));
                        return 0 == e.length && e.push(this.createMatrixRow(null, "", this.name, t)), this.generatedVisibleRows = e, e
                    }, enumerable: !0, configurable: !0
                }), n.prototype.onCheckForErrors = function (e) {
                    t.prototype.onCheckForErrors.call(this, e), this.hasErrorInRows() && this.errors.push(new a.CustomError(s.surveyLocalization.getString("requiredInAllRowsError")))
                }, n.prototype.hasErrorInRows = function () {
                    if (!this.isAllRowRequired)return !1;
                    var e = this.generatedVisibleRows;
                    if (e || (e = this.visibleRows), !e)return !1;
                    for (var t = 0; t < e.length; t++) {
                        var n = e[t].value;
                        if (!n)return !0
                    }
                    return !1
                }, n.prototype.createMatrixRow = function (e, t, n, i) {
                    return new l(e, t, n, this, i)
                }, n.prototype.onValueChanged = function () {
                    if (!this.isRowChanging && this.generatedVisibleRows && 0 != this.generatedVisibleRows.length) {
                        this.isRowChanging = !0;
                        var e              = this.value;
                        if (e || (e = {}), 0 == this.rows.length)this.generatedVisibleRows[0].value = e; else for (var t = 0; t < this.generatedVisibleRows.length; t++) {
                            var n                              = this.generatedVisibleRows[t], i = e[n.name] ? e[n.name] : null;
                            this.generatedVisibleRows[t].value = i
                        }
                        this.isRowChanging = !1
                    }
                }, n.prototype.onMatrixRowChanged = function (e) {
                    if (!this.isRowChanging) {
                        if (this.isRowChanging = !0, this.hasRows) {
                            var t = this.value;
                            t || (t = {}), t[e.name] = e.value, this.setNewValue(t)
                        } else this.setNewValue(e.value);
                        this.isRowChanging = !1
                    }
                }, n
            }(o.Question);
            r.JsonObject.metaData.addClass("matrix", [{
                name         : "columns:itemvalues", onGetValue: function (e) {
                    return i.ItemValue.getData(e.columns)
                }, onSetValue: function (e, t) {
                    e.columns = t
                }
            }, {
                name         : "rows:itemvalues", onGetValue: function (e) {
                    return i.ItemValue.getData(e.rows)
                }, onSetValue: function (e, t) {
                    e.rows = t
                }
            }, "isAllRowRequired:boolean"], function () {
                return new c("")
            }, "question"), u.QuestionFactory.Instance.registerQuestion("matrix", function (e) {
                var t = new c(e);
                return t.rows = ["Row 1", "Row 2"], t.columns = ["Column 1", "Column 2", "Column 3"], t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionMultipleTextModel = t.MultipleTextItemModel = void 0;
            var i = n(4), o = n(2), r = n(12), s = n(7), a = n(16), u = t.MultipleTextItemModel = function (t) {
                function n(e, n) {
                    void 0 === e && (e = null), void 0 === n && (n = null), t.call(this), this.name = e, this.validators = new Array, this.title = n
                }

                return e(n, t), n.prototype.getType = function () {
                    return "multipletextitem"
                }, n.prototype.setData = function (e) {
                    this.data = e
                }, Object.defineProperty(n.prototype, "title", {
                    get          : function () {
                        return this.titleValue ? this.titleValue : this.name
                    }, set       : function (e) {
                        this.titleValue = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "value", {
                    get          : function () {
                        return this.data ? this.data.getMultipleTextValue(this.name) : null
                    }, set       : function (e) {
                        null != this.data && this.data.setMultipleTextValue(this.name, e)
                    }, enumerable: !0, configurable: !0
                }), n.prototype.onValueChanged = function (e) {
                }, n.prototype.getValidatorTitle = function () {
                    return this.title
                }, n
            }(i.Base), l = t.QuestionMultipleTextModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, this.colCountValue = 1, this.itemSize = 25, this.itemsValues = new Array, this.isMultipleItemValueChanging = !1;
                    var n           = this;
                    this.items.push = function (e) {
                        e.setData(n);
                        var t = Array.prototype.push.call(this, e);
                        return n.fireCallback(n.colCountChangedCallback), t
                    }
                }

                return e(n, t), n.prototype.getType = function () {
                    return "multipletext"
                }, Object.defineProperty(n.prototype, "items", {
                    get          : function () {
                        return this.itemsValues
                    }, set       : function (e) {
                        this.itemsValues = e, this.fireCallback(this.colCountChangedCallback)
                    }, enumerable: !0, configurable: !0
                }), n.prototype.AddItem = function (e, t) {
                    void 0 === t && (t = null);
                    var n = this.createTextItem(e, t);
                    return this.items.push(n), n
                }, Object.defineProperty(n.prototype, "colCount", {
                    get          : function () {
                        return this.colCountValue
                    }, set       : function (e) {
                        e < 1 || e > 4 || (this.colCountValue = e, this.fireCallback(this.colCountChangedCallback))
                    }, enumerable: !0, configurable: !0
                }), n.prototype.getRows = function () {
                    for (var e = this.colCount, t = this.items, n = [], i = 0, o = 0; o < t.length; o++)0 == i && n.push([]), n[n.length - 1].push(t[o]), i++, i >= e && (i = 0);
                    return n
                }, n.prototype.onValueChanged = function () {
                    t.prototype.onValueChanged.call(this), this.onItemValueChanged()
                }, n.prototype.createTextItem = function (e, t) {
                    return new u(e, t)
                }, n.prototype.onItemValueChanged = function () {
                    if (!this.isMultipleItemValueChanging)for (var e = 0; e < this.items.length; e++) {
                        var t = null;
                        this.value && this.items[e].name in this.value && (t = this.value[this.items[e].name]), this.items[e].onValueChanged(t)
                    }
                }, n.prototype.runValidators = function () {
                    var e = t.prototype.runValidators.call(this);
                    if (null != e)return e;
                    for (var n = 0; n < this.items.length; n++)if (e = (new o.ValidatorRunner).run(this.items[n]), null != e)return e;
                    return null
                }, n.prototype.getMultipleTextValue = function (e) {
                    return this.value ? this.value[e] : null
                }, n.prototype.setMultipleTextValue = function (e, t) {
                    this.isMultipleItemValueChanging = !0;
                    var n                            = this.value;
                    n || (n = {}), n[e] = t, this.setNewValue(n), this.isMultipleItemValueChanging = !1
                }, n
            }(r.Question);
            s.JsonObject.metaData.addClass("multipletextitem", ["name", {
                name: "title", onGetValue: function (e) {
                    return e.titleValue
                }
            }, {
                name         : "validators:validators",
                baseClassName: "surveyvalidator",
                classNamePart: "validator"
            }], function () {
                return new u("")
            }), s.JsonObject.metaData.addClass("multipletext", [{
                name     : "!items:textitems",
                className: "multipletextitem"
            }, {name: "itemSize:number", "default": 25}, {
                name     : "colCount:number",
                "default": 1,
                choices  : [1, 2, 3, 4]
            }], function () {
                return new l("")
            }, "question"), a.QuestionFactory.Instance.registerQuestion("multipletext", function (e) {
                var t = new l(e);
                return t.AddItem("text1"), t.AddItem("text2"), t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.PageModel = t.QuestionRowModel = void 0;
            var i = n(7), o = n(4), r = n(9), s = n(16), a = t.QuestionRowModel = function () {
                function e(e, t) {
                    this.page = e, this.question = t, this.visibleValue = !1, this.questions = [];
                    var n                                      = this;
                    this.question.rowVisibilityChangedCallback = function () {
                        n.onRowVisibilityChanged()
                    }
                }

                return Object.defineProperty(e.prototype, "visible", {
                    get          : function () {
                        return this.visibleValue
                    }, set       : function (e) {
                        e != this.visible && (this.visibleValue = e, this.onVisibleChanged())
                    }, enumerable: !0, configurable: !0
                }), e.prototype.updateVisible = function () {
                    this.visible = this.calcVisible(), this.setWidth()
                }, e.prototype.addQuestion = function (e) {
                    this.questions.push(e), this.updateVisible()
                }, e.prototype.onVisibleChanged = function () {
                    this.visibilityChangedCallback && this.visibilityChangedCallback()
                }, e.prototype.setWidth = function () {
                    var e = this.getVisibleCount();
                    if (0 != e)for (var t = 0, n = 0; n < this.questions.length; n++)this.isQuestionVisible(this.questions[n]) && (this.questions[n].renderWidth = this.question.width ? this.question.width : Math.floor(100 / e) + "%", this.questions[n].rightIndent = t < e - 1 ? 1 : 0, t++)
                }, e.prototype.onRowVisibilityChanged = function () {
                    this.page.onRowVisibilityChanged(this)
                }, e.prototype.getVisibleCount = function () {
                    for (var e = 0, t = 0; t < this.questions.length; t++)this.isQuestionVisible(this.questions[t]) && e++;
                    return e
                }, e.prototype.isQuestionVisible = function (e) {
                    return this.page.isQuestionVisible(e)
                }, e.prototype.calcVisible = function () {
                    return this.getVisibleCount() > 0
                }, e
            }(), u = t.PageModel = function (t) {
                function n(e) {
                    void 0 === e && (e = ""), t.call(this), this.name = e, this.rowValues = null, this.conditionRunner = null, this.questions = new Array, this.data = null, this.visibleIf = "", this.title = "", this.visibleIndex = -1, this.numValue = -1, this.visibleValue = !0, this.idValue = n.getPageId();
                    var i               = this;
                    this.questions.push = function (e) {
                        return null != i.data && e.setData(i.data), Array.prototype.push.call(this, e)
                    }
                }

                return e(n, t), n.getPageId = function () {
                    return "sp_" + n.pageCounter++
                }, Object.defineProperty(n.prototype, "id", {
                    get          : function () {
                        return this.idValue
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "rows", {
                    get          : function () {
                        return this.rowValues = this.buildRows(), this.rowValues
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "isActive", {
                    get          : function () {
                        return !this.data || this.data.currentPage == this
                    }, enumerable: !0, configurable: !0
                }), n.prototype.isQuestionVisible = function (e) {
                    return e.visible || this.isDesignMode
                }, n.prototype.createRow = function (e) {
                    return new a(this, e)
                }, Object.defineProperty(n.prototype, "isDesignMode", {
                    get          : function () {
                        return this.data && this.data.isDesignMode
                    }, enumerable: !0, configurable: !0
                }), n.prototype.buildRows = function () {
                    for (var e = new Array, t = -1, n = 0; n < this.questions.length; n++) {
                        var i = this.questions[n];
                        e.push(this.createRow(i)), i.startWithNewLine ? (t = n, e[n].addQuestion(i)) : (t < 0 && (t = n), e[t].addQuestion(i))
                    }
                    for (var n = 0; n < e.length; n++)e[n].setWidth();
                    return e
                }, n.prototype.onRowVisibilityChanged = function (e) {
                    if (this.isActive && this.rowValues)for (var t = this.rowValues.indexOf(e), n = t; n >= 0; n--)if (this.rowValues[n].questions.indexOf(e.question) > -1) {
                        this.rowValues[n].updateVisible();
                        break
                    }
                }, Object.defineProperty(n.prototype, "processedTitle", {
                    get          : function () {
                        return null != this.data ? this.data.processText(this.title) : this.title
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "num", {
                    get          : function () {
                        return this.numValue
                    }, set       : function (e) {
                        this.numValue != e && (this.numValue = e, this.onNumChanged(e))
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "visible", {
                    get          : function () {
                        return this.visibleValue
                    }, set       : function (e) {
                        e !== this.visible && (this.visibleValue = e, null != this.data && this.data.pageVisibilityChanged(this, this.visible))
                    }, enumerable: !0, configurable: !0
                }), n.prototype.getType = function () {
                    return "page"
                }, Object.defineProperty(n.prototype, "isVisible", {
                    get          : function () {
                        return this.getIsPageVisible(null)
                    }, enumerable: !0, configurable: !0
                }), n.prototype.getIsPageVisible = function (e) {
                    if (!this.visible)return !1;
                    for (var t = 0; t < this.questions.length; t++)if (this.questions[t] != e && this.questions[t].visible)return !0;
                    return !1
                }, n.prototype.addQuestion = function (e, t) {
                    void 0 === t && (t = -1), null != e && (t < 0 || t >= this.questions.length ? this.questions.push(e) : this.questions.splice(t, 0, e), null != this.data && (e.setData(this.data), this.data.questionAdded(e, t)))
                }, n.prototype.addNewQuestion = function (e, t) {
                    var n = s.QuestionFactory.Instance.createQuestion(e, t);
                    return this.addQuestion(n), n
                }, n.prototype.removeQuestion = function (e) {
                    var t = this.questions.indexOf(e);
                    t < 0 || (this.questions.splice(t, 1), null != this.data && this.data.questionRemoved(e))
                }, n.prototype.scrollToFirstQuestion = function () {
                    for (var e = 0; e < this.questions.length; e++)if (this.questions[e].visible) {
                        this.questions[e].focus();
                        break
                    }
                }, n.prototype.scrollToTop = function () {
                    o.SurveyElement.ScrollElementToTop(o.SurveyPageId)
                }, n.prototype.hasErrors = function (e, t) {
                    void 0 === e && (e = !0), void 0 === t && (t = !1);
                    for (var n = !1, i = null, o = 0; o < this.questions.length; o++)this.questions[o].visible && this.questions[o].hasErrors(e) && (t && null == i && (i = this.questions[o]), n = !0);
                    return i && i.focus(), n
                }, n.prototype.addQuestionsToList = function (e, t) {
                    if (void 0 === t && (t = !1), !t || this.visible)for (var n = 0; n < this.questions.length; n++)t && !this.questions[n].visible || e.push(this.questions[n])
                }, n.prototype.runCondition = function (e) {
                    this.visibleIf && (this.conditionRunner || (this.conditionRunner = new r.ConditionRunner(this.visibleIf)), this.conditionRunner.expression = this.visibleIf, this.visible = this.conditionRunner.run(e))
                }, n.prototype.onNumChanged = function (e) {
                }, n.pageCounter = 100, n
            }(o.Base);
            i.JsonObject.metaData.addClass("page", ["name", {
                name         : "questions",
                baseClassName: "question"
            }, {name: "visible:boolean", "default": !0}, "visibleIf", "title"], function () {
                return new u
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionCheckboxModel = void 0;
            var i = n(7), o = n(16), r = n(15), s = t.QuestionCheckboxModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e
                }

                return e(n, t), n.prototype.getHasOther = function (e) {
                    return !!e && e.indexOf(this.otherItem.value) >= 0
                }, n.prototype.valueFromDataCore = function (e) {
                    if (!e || !e.length)return e;
                    for (var t = 0; t < e.length; t++) {
                        if (e[t] == this.otherItem.value)return e;
                        if (this.hasUnknownValue(e[t])) {
                            this.comment = e[t];
                            var n        = e.slice();
                            return n[t] = this.otherItem.value, n
                        }
                    }
                    return e
                }, n.prototype.valueToDataCore = function (e) {
                    if (!e || !e.length)return e;
                    for (var t = 0; t < e.length; t++)if (e[t] == this.otherItem.value && this.getComment()) {
                        var n = e.slice();
                        return n[t] = this.getComment(), n
                    }
                    return e
                }, n.prototype.getType = function () {
                    return "checkbox"
                }, n
            }(r.QuestionCheckboxBase);
            i.JsonObject.metaData.addClass("checkbox", [], function () {
                return new s("")
            }, "checkboxbase"), o.QuestionFactory.Instance.registerQuestion("checkbox", function (e) {
                var t = new s(e);
                return t.choices = o.QuestionFactory.DefaultChoices, t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionCommentModel = void 0;
            var i = n(12), o = n(7), r = n(16), s = t.QuestionCommentModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, this.rows = 4, this.cols = 50
                }

                return e(n, t), n.prototype.getType = function () {
                    return "comment"
                }, n.prototype.isEmpty = function () {
                    return t.prototype.isEmpty.call(this) || "" == this.value
                }, n
            }(i.Question);
            o.JsonObject.metaData.addClass("comment", [{name: "cols:number", "default": 50}, {
                name     : "rows:number",
                "default": 4
            }], function () {
                return new s("")
            }, "question"), r.QuestionFactory.Instance.registerQuestion("comment", function (e) {
                return new s(e)
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionDropdownModel = void 0;
            var i = n(7), o = n(16), r = n(15), s = n(6), a = t.QuestionDropdownModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e
                }

                return e(n, t), Object.defineProperty(n.prototype, "optionsCaption", {
                    get          : function () {
                        return this.optionsCaptionValue ? this.optionsCaptionValue : s.surveyLocalization.getString("optionsCaption")
                    }, set       : function (e) {
                        this.optionsCaptionValue = e
                    }, enumerable: !0, configurable: !0
                }), n.prototype.getType = function () {
                    return "dropdown"
                }, n.prototype.supportGoNextPageAutomatic = function () {
                    return !0
                }, n
            }(r.QuestionSelectBase);
            i.JsonObject.metaData.addClass("dropdown", [{
                name: "optionsCaption", onGetValue: function (e) {
                    return e.optionsCaptionValue
                }
            }], function () {
                return new a("")
            }, "selectbase"), o.QuestionFactory.Instance.registerQuestion("dropdown", function (e) {
                var t = new a(e);
                return t.choices = o.QuestionFactory.DefaultChoices, t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionFileModel = void 0;
            var i = n(12), o = n(7), r = n(16), s = n(5), a = n(6), u = t.QuestionFileModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, this.showPreviewValue = !1, this.isUploading = !1
                }

                return e(n, t), n.prototype.getType = function () {
                    return "file"
                }, Object.defineProperty(n.prototype, "showPreview", {
                    get          : function () {
                        return this.showPreviewValue
                    }, set       : function (e) {
                        this.showPreviewValue = e
                    }, enumerable: !0, configurable: !0
                }), n.prototype.loadFile = function (e) {
                    var t = this;
                    this.survey && !this.survey.uploadFile(this.name, e, this.storeDataAsText, function (e) {
                        t.isUploading = "uploading" == e
                    }) || this.setFileValue(e)
                }, n.prototype.setFileValue = function (e) {
                    if (FileReader && (this.showPreview || this.storeDataAsText) && !this.checkFileForErrors(e)) {
                        var t = new FileReader, n = this;
                        t.onload = function (i) {
                            n.showPreview && (n.previewValue = n.isFileImage(e) ? t.result : null, n.fireCallback(n.previewValueLoadedCallback)), n.storeDataAsText && (n.value = t.result)
                        }, t.readAsDataURL(e)
                    }
                }, n.prototype.onCheckForErrors = function (e) {
                    t.prototype.onCheckForErrors.call(this, e), this.isUploading && this.errors.push(new s.CustomError(a.surveyLocalization.getString("uploadingFile")))
                }, n.prototype.checkFileForErrors = function (e) {
                    var t = this.errors ? this.errors.length : 0;
                    return this.errors = [], this.maxSize > 0 && e.size > this.maxSize && this.errors.push(new s.ExceedSizeError(this.maxSize)), (t != this.errors.length || this.errors.length > 0) && this.fireCallback(this.errorsChangedCallback), this.errors.length > 0
                }, n.prototype.isFileImage = function (e) {
                    if (e && e.type) {
                        var t = e.type.toLowerCase();
                        return 0 == t.indexOf("image")
                    }
                }, n
            }(i.Question);
            o.JsonObject.metaData.addClass("file", ["showPreview:boolean", "imageHeight", "imageWidth", "storeDataAsText:boolean", "maxSize:number"], function () {
                return new u("")
            }, "question"), r.QuestionFactory.Instance.registerQuestion("file", function (e) {
                return new u(e)
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionHtmlModel = void 0;
            var i = n(13), o = n(7), r = n(16), s = t.QuestionHtmlModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e
                }

                return e(n, t), n.prototype.getType = function () {
                    return "html"
                }, Object.defineProperty(n.prototype, "html", {
                    get          : function () {
                        return this.htmlValue
                    }, set       : function (e) {
                        this.htmlValue = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "processedHtml", {
                    get          : function () {
                        return this.survey ? this.survey.processHtml(this.html) : this.html
                    }, enumerable: !0, configurable: !0
                }), n
            }(i.QuestionBase);
            o.JsonObject.metaData.addClass("html", ["html:html"], function () {
                return new s("")
            }, "questionbase"), r.QuestionFactory.Instance.registerQuestion("html", function (e) {
                return new s(e)
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionRadiogroupModel = void 0;
            var i = n(7), o = n(16), r = n(15), s = t.QuestionRadiogroupModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e
                }

                return e(n, t), n.prototype.getType = function () {
                    return "radiogroup"
                }, n.prototype.supportGoNextPageAutomatic = function () {
                    return !0
                }, n
            }(r.QuestionCheckboxBase);
            i.JsonObject.metaData.addClass("radiogroup", [], function () {
                return new s("")
            }, "checkboxbase"), o.QuestionFactory.Instance.registerQuestion("radiogroup", function (e) {
                var t = new s(e);
                return t.choices = o.QuestionFactory.DefaultChoices, t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionRatingModel = void 0;
            var i = n(4), o = n(12), r = n(7), s = n(16), a = t.QuestionRatingModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, this.rates = [], this.mininumRateDescription = null, this.maximumRateDescription = null
                }

                return e(n, t), Object.defineProperty(n.prototype, "rateValues", {
                    get          : function () {
                        return this.rates
                    }, set       : function (e) {
                        i.ItemValue.setData(this.rates, e), this.fireCallback(this.rateValuesChangedCallback)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "visibleRateValues", {
                    get          : function () {
                        return this.rateValues.length > 0 ? this.rateValues : n.defaultRateValues
                    }, enumerable: !0, configurable: !0
                }), n.prototype.getType = function () {
                    return "rating"
                }, n.prototype.supportComment = function () {
                    return !0
                }, n.prototype.supportOther = function () {
                    return !0
                }, n.prototype.supportGoNextPageAutomatic = function () {
                    return !0
                }, n.defaultRateValues = [], n
            }(o.Question);
            i.ItemValue.setData(a.defaultRateValues, [1, 2, 3, 4, 5]), r.JsonObject.metaData.addClass("rating", ["hasComment:boolean", {
                name      : "rateValues:itemvalues",
                onGetValue: function (e) {
                    return i.ItemValue.getData(e.rateValues)
                },
                onSetValue: function (e, t) {
                    e.rateValues = t
                }
            }, "mininumRateDescription", "maximumRateDescription"], function () {
                return new a("")
            }, "question"), s.QuestionFactory.Instance.registerQuestion("rating", function (e) {
                return new a(e)
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionTextModel = void 0;
            var i = n(16), o = n(7), r = n(12), s = t.QuestionTextModel = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, this.size = 25, this.inputType = "text"
                }

                return e(n, t), n.prototype.getType = function () {
                    return "text"
                }, n.prototype.isEmpty = function () {
                    return t.prototype.isEmpty.call(this) || "" == this.value
                }, n.prototype.supportGoNextPageAutomatic = function () {
                    return !0
                }, n.prototype.setNewValue = function (e) {
                    e = this.correctValueType(e), t.prototype.setNewValue.call(this, e)
                }, n.prototype.correctValueType = function (e) {
                    return e && ("number" == this.inputType || "range" == this.inputType) ? this.isNumber(e) ? parseFloat(e) : "" : e
                }, n.prototype.isNumber = function (e) {
                    return !isNaN(parseFloat(e)) && isFinite(e)
                }, n
            }(r.Question);
            o.JsonObject.metaData.addClass("text", [{
                name     : "inputType",
                "default": "text",
                choices  : ["color", "date", "datetime", "datetime-local", "email", "month", "password", "range", "tel", "text", "time", "url", "week"]
            }, {name: "size:number", "default": 25}], function () {
                return new s("")
            }, "question"), i.QuestionFactory.Instance.registerQuestion("text", function (e) {
                return new s(e)
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.SurveyModel = void 0;
            var i         = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                return typeof e
            } : function (e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, o          = n(7), r = n(4), s = n(21), a = n(14), u = n(31), l = n(6), c = n(5);
            t.SurveyModel = function (t) {
                function n(e) {
                    void 0 === e && (e = null), t.call(this), this.surveyId = null, this.surveyPostId = null, this.clientId = null, this.cookieName = null, this.sendResultOnPageNext = !1, this.commentPrefix = "-Comment", this.title = "", this.showNavigationButtons = !0, this.showTitle = !0, this.showPageTitles = !0, this.completedHtml = "", this.requiredText = "*", this.questionStartIndex = "", this.questionTitleTemplate = "", this.showProgressBar = "off", this.storeOthersAsComment = !0, this.goNextPageAutomatic = !1, this.pages = new Array, this.triggers = new Array, this.clearInvisibleValues = !1, this.currentPageValue = null, this.valuesHash = {}, this.variablesHash = {}, this.showPageNumbersValue = !1, this.showQuestionNumbersValue = "on", this.questionTitleLocationValue = "top", this.localeValue = "", this.isCompleted = !1, this.isLoading = !1, this.processedTextValues = {}, this.isValidatingOnServerValue = !1, this.onComplete = new r.Event, this.onCurrentPageChanged = new r.Event, this.onValueChanged = new r.Event, this.onVisibleChanged = new r.Event, this.onPageVisibleChanged = new r.Event, this.onQuestionAdded = new r.Event, this.onQuestionRemoved = new r.Event, this.onValidateQuestion = new r.Event, this.onProcessHtml = new r.Event, this.onSendResult = new r.Event, this.onGetResult = new r.Event, this.onUploadFile = new r.Event, this.jsonErrors = null, this.mode = "normal";
                    var n = this;
                    this.textPreProcessor = new a.TextPreProcessor, this.textPreProcessor.onHasValue = function (e) {
                        return n.processedTextValues[e.toLowerCase()]
                    }, this.textPreProcessor.onProcess = function (e) {
                        return n.getProcessedTextValue(e)
                    }, this.pages.push = function (e) {
                        return e.data = n, Array.prototype.push.call(this, e)
                    }, this.triggers.push = function (e) {
                        return e.setOwner(n), Array.prototype.push.call(this, e)
                    }, this.updateProcessedTextValues(),
                        this.onBeforeCreating(), e && (this.setJsonObject(e), this.surveyId && this.loadSurveyFromService(this.surveyId)), this.onCreating()
                }

                return e(n, t), n.prototype.getType = function () {
                    return "survey"
                }, Object.defineProperty(n.prototype, "locale", {
                    get          : function () {
                        return this.localeValue
                    }, set       : function (e) {
                        this.localeValue = e, l.surveyLocalization.currentLocale = e
                    }, enumerable: !0, configurable: !0
                }), n.prototype.getLocString = function (e) {
                    return l.surveyLocalization.getString(e)
                }, Object.defineProperty(n.prototype, "emptySurveyText", {
                    get          : function () {
                        return this.getLocString("emptySurvey")
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "pagePrevText", {
                    get          : function () {
                        return this.pagePrevTextValue ? this.pagePrevTextValue : this.getLocString("pagePrevText")
                    }, set       : function (e) {
                        this.pagePrevTextValue = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "pageNextText", {
                    get          : function () {
                        return this.pageNextTextValue ? this.pageNextTextValue : this.getLocString("pageNextText")
                    }, set       : function (e) {
                        this.pageNextTextValue = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "completeText", {
                    get          : function () {
                        return this.completeTextValue ? this.completeTextValue : this.getLocString("completeText")
                    }, set       : function (e) {
                        this.completeTextValue = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "showPageNumbers", {
                    get          : function () {
                        return this.showPageNumbersValue
                    }, set       : function (e) {
                        e !== this.showPageNumbers && (this.showPageNumbersValue = e, this.updateVisibleIndexes())
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "showQuestionNumbers", {
                    get          : function () {
                        return this.showQuestionNumbersValue
                    }, set       : function (e) {
                        e !== this.showQuestionNumbers && (this.showQuestionNumbersValue = e, this.updateVisibleIndexes())
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "questionTitleLocation", {
                    get          : function () {
                        return this.questionTitleLocationValue
                    }, set       : function (e) {
                        e !== this.questionTitleLocationValue && (this.questionTitleLocationValue = e)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "data", {
                    get          : function () {
                        var e = {};
                        for (var t in this.valuesHash)e[t] = this.valuesHash[t];
                        return e
                    }, set       : function (e) {
                        if (this.valuesHash = {}, e)for (var t in e)this.valuesHash[t] = e[t], this.checkTriggers(t, e[t], !1);
                        this.notifyAllQuestionsOnValueChanged(), this.runConditions()
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "comments", {
                    get          : function () {
                        var e = {};
                        for (var t in this.valuesHash)t.indexOf(this.commentPrefix) > 0 && (e[t] = this.valuesHash[t]);
                        return e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "visiblePages", {
                    get          : function () {
                        if (this.isDesignMode)return this.pages;
                        for (var e = new Array, t = 0; t < this.pages.length; t++)this.pages[t].isVisible && e.push(this.pages[t]);
                        return e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "isEmpty", {
                    get          : function () {
                        return 0 == this.pages.length
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "PageCount", {
                    get          : function () {
                        return this.pages.length
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "visiblePageCount", {
                    get          : function () {
                        return this.visiblePages.length
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "currentPage", {
                    get          : function () {
                        var e = this.visiblePages;
                        return null != this.currentPageValue && e.indexOf(this.currentPageValue) < 0 && (this.currentPage = null), null == this.currentPageValue && e.length > 0 && (this.currentPage = e[0]), this.currentPageValue
                    }, set       : function (e) {
                        var t = this.visiblePages;
                        if (!(null != e && t.indexOf(e) < 0) && e != this.currentPageValue) {
                            var n = this.currentPageValue;
                            this.currentPageValue = e, this.currentPageChanged(e, n), this.currentPageValue && this.currentPageValue.scrollToTop()
                        }
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "state", {
                    get          : function () {
                        return this.isLoading ? "loading" : this.isCompleted ? "completed" : this.currentPage ? "running" : "empty"
                    }, enumerable: !0, configurable: !0
                }), n.prototype.clear = function () {
                    this.data = null, this.variablesHash = {}, this.isCompleted = !1, this.visiblePageCount > 0 && (this.currentPage = this.visiblePages[0])
                }, n.prototype.mergeValues = function (e, t) {
                    if (t && e)for (var n in e) {
                        var o = e[n];
                        o && "object" === ("undefined" == typeof o ? "undefined" : i(o)) ? (t[n] || (t[n] = {}), this.mergeValues(o, t[n])) : t[n] = o
                    }
                }, n.prototype.currentPageChanged = function (e, t) {
                    this.onCurrentPageChanged.fire(this, {oldCurrentPage: t, newCurrentPage: e})
                }, n.prototype.getProgress = function () {
                    if (null == this.currentPage)return 0;
                    var e = this.visiblePages.indexOf(this.currentPage) + 1;
                    return Math.ceil(100 * e / this.visiblePageCount)
                }, Object.defineProperty(n.prototype, "isDesignMode", {
                    get          : function () {
                        return "designer" == this.mode
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "hasCookie", {
                    get          : function () {
                        if (!this.cookieName)return !1;
                        var e = document.cookie;
                        return e && e.indexOf(this.cookieName + "=true") > -1
                    }, enumerable: !0, configurable: !0
                }), n.prototype.setCookie = function () {
                    this.cookieName && (document.cookie = this.cookieName + "=true; expires=Fri, 31 Dec 9999 0:0:0 GMT")
                }, n.prototype.deleteCookie = function () {
                    this.cookieName && (document.cookie = this.cookieName + "=;")
                }, n.prototype.nextPage = function () {
                    return !this.isLastPage && (!this.isCurrentPageHasErrors && (!this.doServerValidation() && (this.doNextPage(), !0)))
                }, Object.defineProperty(n.prototype, "isCurrentPageHasErrors", {
                    get          : function () {
                        return null == this.currentPage || this.currentPage.hasErrors(!0, !0)
                    }, enumerable: !0, configurable: !0
                }), n.prototype.prevPage = function () {
                    if (this.isFirstPage)return !1;
                    var e            = this.visiblePages, t = e.indexOf(this.currentPage);
                    this.currentPage = e[t - 1]
                }, n.prototype.completeLastPage = function () {
                    return !this.isCurrentPageHasErrors && (!this.doServerValidation() && (this.doComplete(), !0))
                }, Object.defineProperty(n.prototype, "isFirstPage", {
                    get          : function () {
                        return null == this.currentPage || 0 == this.visiblePages.indexOf(this.currentPage)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "isLastPage", {
                    get          : function () {
                        if (null == this.currentPage)return !0;
                        var e = this.visiblePages;
                        return e.indexOf(this.currentPage) == e.length - 1
                    }, enumerable: !0, configurable: !0
                }), n.prototype.doComplete = function () {
                    this.clearInvisibleValues && this.clearInvisibleQuestionValues(), this.setCookie(), this.setCompleted(), this.onComplete.fire(this, null), this.surveyPostId && this.sendResult()
                }, Object.defineProperty(n.prototype, "isValidatingOnServer", {
                    get          : function () {
                        return this.isValidatingOnServerValue
                    }, enumerable: !0, configurable: !0
                }), n.prototype.setIsValidatingOnServer = function (e) {
                    e != this.isValidatingOnServer && (this.isValidatingOnServerValue = e, this.onIsValidatingOnServerChanged())
                }, n.prototype.onIsValidatingOnServerChanged = function () {
                }, n.prototype.doServerValidation = function () {
                    if (!this.onServerValidateQuestions)return !1;
                    for (var e = this, t = {
                        data: {}, errors: {}, survey: this, complete: function () {
                            e.completeServerValidation(t)
                        }
                    }, n       = 0; n < this.currentPage.questions.length; n++) {
                        var i = this.currentPage.questions[n];
                        if (i.visible) {
                            var o = this.getValue(i.name);
                            o && (t.data[i.name] = o)
                        }
                    }
                    return this.setIsValidatingOnServer(!0), this.onServerValidateQuestions(this, t), !0
                }, n.prototype.completeServerValidation = function (e) {
                    if (this.setIsValidatingOnServer(!1), e || e.survey) {
                        var t = e.survey, n = !1;
                        if (e.errors)for (var i in e.errors) {
                            var o = t.getQuestionByName(i);
                            o && o.errors && (n = !0, o.addError(new c.CustomError(e.errors[i])))
                        }
                        n || (t.isLastPage ? t.doComplete() : t.doNextPage())
                    }
                }, n.prototype.doNextPage = function () {
                    this.checkOnPageTriggers(), this.sendResultOnPageNext && this.clientId && this.sendResult(this.surveyPostId, this.clientId, !0);
                    var e            = this.visiblePages, t = e.indexOf(this.currentPage);
                    this.currentPage = e[t + 1]
                }, n.prototype.setCompleted = function () {
                    this.isCompleted = !0
                }, Object.defineProperty(n.prototype, "processedCompletedHtml", {
                    get          : function () {
                        return this.completedHtml ? this.processHtml(this.completedHtml) : "<h3>" + this.getLocString("completingSurvey") + "</h3>"
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "processedLoadingHtml", {
                    get          : function () {
                        return "<h3>" + this.getLocString("loadingSurvey") + "</h3>"
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "progressText", {
                    get          : function () {
                        if (null == this.currentPage)return "";
                        var e = this.visiblePages, t = e.indexOf(this.currentPage) + 1;
                        return this.getLocString("progressText").format(t, e.length)
                    }, enumerable: !0, configurable: !0
                }), n.prototype.uploadFile = function (e, t, n, i) {
                    var o = !0;
                    return this.onUploadFile.fire(this, {
                        name  : e,
                        file  : t,
                        accept: o
                    }), !!o && (!n && this.surveyPostId && this.uploadFileCore(e, t, i), !0)
                }, n.prototype.uploadFileCore = function (e, t, n) {
                    var i = this;
                    n && n("uploading"), (new u.dxSurveyService).sendFile(this.surveyPostId, t, function (t, o) {
                        n && n(t ? "success" : "error"), t && i.setValue(e, o)
                    })
                }, n.prototype.getPage = function (e) {
                    return this.pages[e]
                }, n.prototype.addPage = function (e) {
                    null != e && (this.pages.push(e), this.updateVisibleIndexes())
                }, n.prototype.addNewPage = function (e) {
                    var t = this.createNewPage(e);
                    return this.addPage(t), t
                }, n.prototype.removePage = function (e) {
                    var t = this.pages.indexOf(e);
                    t < 0 || (this.pages.splice(t, 1), this.currentPageValue == e && (this.currentPage = this.pages.length > 0 ? this.pages[0] : null), this.updateVisibleIndexes())
                }, n.prototype.getQuestionByName = function (e, t) {
                    void 0 === t && (t = !1);
                    var n = this.getAllQuestions();
                    t && (e = e.toLowerCase());
                    for (var i = 0; i < n.length; i++) {
                        var o = n[i].name;
                        if (t && (o = o.toLowerCase()), o == e)return n[i]
                    }
                    return null
                }, n.prototype.getQuestionsByNames = function (e, t) {
                    void 0 === t && (t = !1);
                    var n = [];
                    if (!e)return n;
                    for (var i = 0; i < e.length; i++)if (e[i]) {
                        var o = this.getQuestionByName(e[i], t);
                        o && n.push(o)
                    }
                    return n
                }, n.prototype.getPageByQuestion = function (e) {
                    for (var t = 0; t < this.pages.length; t++) {
                        var n = this.pages[t];
                        if (n.questions.indexOf(e) > -1)return n
                    }
                    return null
                }, n.prototype.getPageByName = function (e) {
                    for (var t = 0; t < this.pages.length; t++)if (this.pages[t].name == e)return this.pages[t];
                    return null
                }, n.prototype.getPagesByNames = function (e) {
                    var t = [];
                    if (!e)return t;
                    for (var n = 0; n < e.length; n++)if (e[n]) {
                        var i = this.getPageByName(e[n]);
                        i && t.push(i)
                    }
                    return t
                }, n.prototype.getAllQuestions = function (e) {
                    void 0 === e && (e = !1);
                    for (var t = new Array, n = 0; n < this.pages.length; n++)this.pages[n].addQuestionsToList(t, e);
                    return t
                }, n.prototype.createNewPage = function (e) {
                    return new s.PageModel(e)
                }, n.prototype.notifyQuestionOnValueChanged = function (e, t) {
                    for (var n = this.getAllQuestions(), i = null, o = 0; o < n.length; o++)n[o].name == e && (i = n[o], this.doSurveyValueChanged(i, t));
                    this.onValueChanged.fire(this, {name: e, question: i, value: t})
                }, n.prototype.notifyAllQuestionsOnValueChanged = function () {
                    for (var e = this.getAllQuestions(), t = 0; t < e.length; t++)this.doSurveyValueChanged(e[t], this.getValue(e[t].name))
                }, n.prototype.doSurveyValueChanged = function (e, t) {
                    e.onSurveyValueChanged(t)
                }, n.prototype.checkOnPageTriggers = function () {
                    for (var e = this.getCurrentPageQuestions(), t = 0; t < e.length; t++) {
                        var n = e[t], i = this.getValue(n.name);
                        this.checkTriggers(n.name, i, !0)
                    }
                }, n.prototype.getCurrentPageQuestions = function () {
                    var e = [], t = this.currentPage;
                    if (!t)return e;
                    for (var n = 0; n < t.questions.length; n++) {
                        var i = t.questions[n];
                        i.visible && i.name && e.push(i)
                    }
                    return e
                }, n.prototype.checkTriggers = function (e, t, n) {
                    for (var i = 0; i < this.triggers.length; i++) {
                        var o = this.triggers[i];
                        o.name == e && o.isOnNextPage == n && o.check(t)
                    }
                }, n.prototype.doQuestionsOnLoad = function () {
                    for (var e = this.getAllQuestions(!1), t = 0; t < e.length; t++)e[t].onSurveyLoad()
                }, n.prototype.runConditions = function () {
                    this.runConditionsForList(this.getAllQuestions(!1)), this.runConditionsForList(this.pages)
                }, n.prototype.runConditionsForList = function (e) {
                    for (var t = 0; t < e.length; t++)e[t].runCondition(this.valuesHash)
                }, n.prototype.sendResult = function (e, t, n) {
                    if (void 0 === e && (e = null), void 0 === t && (t = null), void 0 === n && (n = !1), !e && this.surveyPostId && (e = this.surveyPostId), e) {
                        t && (this.clientId = t);
                        var i = this;
                        (new u.dxSurveyService).sendResult(e, this.data, function (e, t) {
                            i.onSendResult.fire(i, {success: e, response: t})
                        }, this.clientId, n)
                    }
                }, n.prototype.getResult = function (e, t) {
                    var n = this;
                    (new u.dxSurveyService).getResult(e, t, function (e, t, i, o) {
                        n.onGetResult.fire(n, {success: e, data: t, dataList: i, response: o})
                    })
                }, n.prototype.loadSurveyFromService = function (e) {
                    void 0 === e && (e = null), e && (this.surveyId = e);
                    var t = this;
                    this.isLoading = !0, this.onLoadingSurveyFromService(), (new u.dxSurveyService).loadSurvey(this.surveyId, function (e, n, i) {
                        t.isLoading = !1, e && n && (t.setJsonObject(n), t.notifyAllQuestionsOnValueChanged(), t.onLoadSurveyFromService())
                    })
                }, n.prototype.onLoadingSurveyFromService = function () {
                }, n.prototype.onLoadSurveyFromService = function () {
                }, n.prototype.checkPageVisibility = function (e, t) {
                    var n = this.getPageByQuestion(e);
                    if (n) {
                        var i = n.isVisible;
                        (i != n.getIsPageVisible(e) || t) && this.pageVisibilityChanged(n, i)
                    }
                }, n.prototype.updateVisibleIndexes = function () {
                    if (this.updatePageVisibleIndexes(this.showPageNumbers), "onPage" == this.showQuestionNumbers)for (var e = this.visiblePages, t = 0; t < e.length; t++)this.updateQuestionVisibleIndexes(e[t].questions, !0); else this.updateQuestionVisibleIndexes(this.getAllQuestions(!1), "on" == this.showQuestionNumbers)
                }, n.prototype.updatePageVisibleIndexes = function (e) {
                    for (var t = 0, n = 0; n < this.pages.length; n++)this.pages[n].visibleIndex = this.pages[n].visible ? t++ : -1, this.pages[n].num = e && this.pages[n].visible ? this.pages[n].visibleIndex + 1 : -1
                }, n.prototype.updateQuestionVisibleIndexes = function (e, t) {
                    for (var n = 0, i = 0; i < e.length; i++)e[i].setVisibleIndex(t && e[i].visible && e[i].hasTitle ? n++ : -1)
                }, n.prototype.setJsonObject = function (e) {
                    if (e) {
                        this.jsonErrors = null;
                        var t           = new o.JsonObject;
                        t.toObject(e, this), t.errors.length > 0 && (this.jsonErrors = t.errors), this.updateProcessedTextValues(), this.hasCookie && this.doComplete(), this.doQuestionsOnLoad(), this.runConditions(), this.updateVisibleIndexes()
                    }
                }, n.prototype.onBeforeCreating = function () {
                }, n.prototype.onCreating = function () {
                }, n.prototype.updateProcessedTextValues = function () {
                    this.processedTextValues = {};
                    var e                    = this;
                    this.processedTextValues.pageno = function (t) {
                        return null != e.currentPage ? e.visiblePages.indexOf(e.currentPage) + 1 : 0
                    }, this.processedTextValues.pagecount = function (t) {
                        return e.visiblePageCount
                    };
                    for (var t = this.getAllQuestions(), n = 0; n < t.length; n++)this.addQuestionToProcessedTextValues(t[n])
                }, n.prototype.addQuestionToProcessedTextValues = function (e) {
                    this.processedTextValues[e.name.toLowerCase()] = "question"
                }, n.prototype.getProcessedTextValue = function (e) {
                    var e = e.toLowerCase(), t = this.processedTextValues[e];
                    if (!t)return null;
                    if ("question" == t) {
                        var n = this.getQuestionByName(e, !0);
                        return null != n ? this.getValue(n.name) : null
                    }
                    return "value" == t ? this.getValue(e) : "variable" == t ? this.getVariable(e) : t(e)
                }, n.prototype.clearInvisibleQuestionValues = function () {
                    for (var e = this.getAllQuestions(), t = 0; t < e.length; t++)e[t].visible || this.setValue(e[t].name, null)
                }, n.prototype.getVariable = function (e) {
                    return e ? this.variablesHash[e] : null
                }, n.prototype.setVariable = function (e, t) {
                    e && (this.variablesHash[e] = t, this.processedTextValues[e.toLowerCase()] = "variable")
                }, n.prototype.getUnbindValue = function (e) {
                    return e && e instanceof Object ? JSON.parse(JSON.stringify(e)) : e
                }, n.prototype.getValue = function (e) {
                    if (!e || 0 == e.length)return null;
                    var t = this.valuesHash[e];
                    return this.getUnbindValue(t)
                }, n.prototype.setValue = function (e, t) {
                    this.isValueEqual(e, t) || ("" == t || null == t ? delete this.valuesHash[e] : (t = this.getUnbindValue(t), this.valuesHash[e] = t, this.processedTextValues[e.toLowerCase()] = "value"), this.notifyQuestionOnValueChanged(e, t), this.checkTriggers(e, t, !1), this.runConditions(), this.tryGoNextPageAutomatic(e))
                }, n.prototype.isValueEqual = function (e, t) {
                    "" == t && (t = null);
                    var n = this.getValue(e);
                    return null === t || null === n ? t === n : this.isTwoValueEquals(t, n)
                }, n.prototype.isTwoValueEquals = function (e, t) {
                    if (e === t)return !0;
                    if (!(e instanceof Object && t instanceof Object))return !1;
                    for (var n in e)if (e.hasOwnProperty(n)) {
                        if (!t.hasOwnProperty(n))return !1;
                        if (e[n] !== t[n]) {
                            if ("object" !== i(e[n]))return !1;
                            if (!this.isTwoValueEquals(e[n], t[n]))return !1
                        }
                    }
                    for (n in t)if (t.hasOwnProperty(n) && !e.hasOwnProperty(n))return !1;
                    return !0
                }, n.prototype.tryGoNextPageAutomatic = function (e) {
                    if (this.goNextPageAutomatic && this.currentPage) {
                        var t = this.getQuestionByName(e);
                        if (!t || t.supportGoNextPageAutomatic()) {
                            for (var n = this.getCurrentPageQuestions(), i = 0; i < n.length; i++)if (!this.getValue(n[i].name))return;
                            this.currentPage.hasErrors(!1, !1) || (this.isLastPage ? this.doComplete() : this.nextPage())
                        }
                    }
                }, n.prototype.getComment = function (e) {
                    var t = this.data[e + this.commentPrefix];
                    return null == t && (t = ""), t
                }, n.prototype.setComment = function (e, t) {
                    e += this.commentPrefix, "" == t || null == t ? delete this.valuesHash[e] : (this.valuesHash[e] = t, this.tryGoNextPageAutomatic(e))
                }, n.prototype.questionVisibilityChanged = function (e, t) {
                    this.updateVisibleIndexes(), this.onVisibleChanged.fire(this, {
                        question: e,
                        name    : e.name,
                        visible : t
                    }), this.checkPageVisibility(e, !t)
                }, n.prototype.pageVisibilityChanged = function (e, t) {
                    this.updateVisibleIndexes(), this.onPageVisibleChanged.fire(this, {page: e, visible: t})
                }, n.prototype.questionAdded = function (e, t) {
                    this.updateVisibleIndexes(), this.addQuestionToProcessedTextValues(e), this.onQuestionAdded.fire(this, {
                        question: e,
                        name    : e.name,
                        index   : t
                    })
                }, n.prototype.questionRemoved = function (e) {
                    this.updateVisibleIndexes(), this.onQuestionRemoved.fire(this, {question: e, name: e.name})
                }, n.prototype.validateQuestion = function (e) {
                    if (this.onValidateQuestion.isEmpty)return null;
                    var t = {name: e, value: this.getValue(e), error: null};
                    return this.onValidateQuestion.fire(this, t), t.error ? new c.CustomError(t.error) : null
                }, n.prototype.processHtml = function (e) {
                    var t = {html: e};
                    return this.onProcessHtml.fire(this, t), this.processText(t.html)
                }, n.prototype.processText = function (e) {
                    return this.textPreProcessor.process(e)
                }, n.prototype.getObjects = function (e, t) {
                    var n = [];
                    return Array.prototype.push.apply(n, this.getPagesByNames(e)), Array.prototype.push.apply(n, this.getQuestionsByNames(t)), n
                }, n.prototype.setTriggerValue = function (e, t, n) {
                    e && (n ? this.setVariable(e, t) : this.setValue(e, t))
                },n
            }(r.Base);
            o.JsonObject.metaData.addClass("survey", [{
                name: "locale", choices: function () {
                    return l.surveyLocalization.getLocales()
                }
            }, "title", "completedHtml:html", {name: "pages", className: "page"}, {
                name         : "questions",
                baseClassName: "question",
                onGetValue   : function (e) {
                    return null
                },
                onSetValue   : function (e, t, n) {
                    var i = e.addNewPage("");
                    n.toObject({questions: t}, i)
                }
            }, {
                name         : "triggers:triggers",
                baseClassName: "surveytrigger",
                classNamePart: "trigger"
            }, "surveyId", "surveyPostId", "cookieName", "sendResultOnPageNext:boolean", {
                name     : "showNavigationButtons:boolean",
                "default": !0
            }, {name: "showTitle:boolean", "default": !0}, {
                name     : "showPageTitles:boolean",
                "default": !0
            }, "showPageNumbers:boolean", {
                name     : "showQuestionNumbers",
                "default": "on",
                choices  : ["on", "onPage", "off"]
            }, {name: "questionTitleLocation", "default": "top", choices: ["top", "bottom"]}, {
                name     : "showProgressBar",
                "default": "off",
                choices  : ["off", "top", "bottom"]
            }, {
                name     : "storeOthersAsComment:boolean",
                "default": !0
            }, "goNextPageAutomatic:boolean", "clearInvisibleValues:boolean", {
                name      : "pagePrevText",
                onGetValue: function (e) {
                    return e.pagePrevTextValue
                }
            }, {
                name: "pageNextText", onGetValue: function (e) {
                    return e.pageNextTextValue
                }
            }, {
                name: "completeText", onGetValue: function (e) {
                    return e.completeTextValue
                }
            }, {name: "requiredText", "default": "*"}, "questionStartIndex", "questionTitleTemplate"])
        }).call(t, n(3))
    }, function (e, t) {
        "use strict";
        t.__esModule      = !0;
        t.dxSurveyService = function () {
            function e() {
            }

            return e.prototype.loadSurvey = function (t, n) {
                var i = new XMLHttpRequest;
                i.open("GET", e.serviceUrl + "/getSurvey?surveyId=" + t), i.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), i.onload = function () {
                    var e = JSON.parse(i.response);
                    n(200 == i.status, e, i.response)
                }, i.send()
            }, e.prototype.sendResult = function (t, n, i, o, r) {
                void 0 === o && (o = null), void 0 === r && (r = !1);
                var s = new XMLHttpRequest;
                s.open("POST", e.serviceUrl + "/post/"), s.setRequestHeader("Content-Type", "application/json; charset=utf-8");
                var a = {postId: t, surveyResult: JSON.stringify(n)};
                o && (a.clientId = o), r && (a.isPartialCompleted = !0);
                var u = JSON.stringify(a);
                s.onload = s.onerror = function () {
                    i && i(200 == s.status, s.response)
                }, s.send(u)
            }, e.prototype.sendFile = function (t, n, i) {
                var o = new XMLHttpRequest;
                o.onload = o.onerror = function () {
                    i && i(200 == o.status, JSON.parse(o.response))
                }, o.open("POST", e.serviceUrl + "/upload/", !0);
                var r = new FormData;
                r.append("file", n), r.append("postId", t), o.send(r)
            }, e.prototype.getResult = function (t, n, i) {
                var o = new XMLHttpRequest, r = "resultId=" + t + "&name=" + n;
                o.open("GET", e.serviceUrl + "/getResult?" + r), o.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                o.onload = function () {
                    var e = null, t = null;
                    if (200 == o.status) {
                        e = JSON.parse(o.response), t = [];
                        for (var n in e.QuestionResult) {
                            var r = {name: n, value: e.QuestionResult[n]};
                            t.push(r)
                        }
                    }
                    i(200 == o.status, e, t, o.response)
                }, o.send()
            }, e.prototype.isCompleted = function (t, n, i) {
                var o = new XMLHttpRequest, r = "resultId=" + t + "&clientId=" + n;
                o.open("GET", e.serviceUrl + "/isCompleted?" + r), o.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                o.onload = function () {
                    var e = null;
                    200 == o.status && (e = JSON.parse(o.response)), i(200 == o.status, e, o.response)
                }, o.send()
            }, e.serviceUrl = "https://dxsurveyapi.azurewebsites.net/api/Survey", e
        }()
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.SurveyTriggerSetValue = t.SurveyTriggerComplete = t.SurveyTriggerVisible = t.SurveyTrigger = t.Trigger = void 0;
            var i = n(4), o = n(7), r = t.Trigger = function (t) {
                function n() {
                    t.call(this), this.opValue = "equal"
                }

                return e(n, t), Object.defineProperty(n, "operators", {
                    get          : function () {
                        return null != n.operatorsValue ? n.operatorsValue : (n.operatorsValue = {
                            empty            : function (e, t) {
                                return !e
                            }, notempty      : function (e, t) {
                                return !!e
                            }, equal         : function (e, t) {
                                return e == t
                            }, notequal      : function (e, t) {
                                return e != t
                            }, contains      : function (e, t) {
                                return e && e.indexOf && e.indexOf(t) > -1
                            }, notcontains   : function (e, t) {
                                return !e || !e.indexOf || e.indexOf(t) == -1
                            }, greater       : function (e, t) {
                                return e > t
                            }, less          : function (e, t) {
                                return e < t
                            }, greaterorequal: function (e, t) {
                                return e >= t
                            }, lessorequal   : function (e, t) {
                                return e <= t
                            }
                        }, n.operatorsValue)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "operator", {
                    get          : function () {
                        return this.opValue
                    }, set       : function (e) {
                        e && (e = e.toLowerCase(), n.operators[e] && (this.opValue = e))
                    }, enumerable: !0, configurable: !0
                }), n.prototype.check = function (e) {
                    n.operators[this.operator](e, this.value) ? this.onSuccess() : this.onFailure()
                }, n.prototype.onSuccess = function () {
                }, n.prototype.onFailure = function () {
                }, n.operatorsValue = null, n
            }(i.Base), s = t.SurveyTrigger = function (t) {
                function n() {
                    t.call(this), this.owner = null
                }

                return e(n, t), n.prototype.setOwner = function (e) {
                    this.owner = e
                }, Object.defineProperty(n.prototype, "isOnNextPage", {
                    get          : function () {
                        return !1
                    }, enumerable: !0, configurable: !0
                }), n
            }(r), a = t.SurveyTriggerVisible = function (t) {
                function n() {
                    t.call(this), this.pages = [], this.questions = []
                }

                return e(n, t), n.prototype.getType = function () {
                    return "visibletrigger"
                }, n.prototype.onSuccess = function () {
                    this.onTrigger(this.onItemSuccess)
                }, n.prototype.onFailure = function () {
                    this.onTrigger(this.onItemFailure)
                }, n.prototype.onTrigger = function (e) {
                    if (this.owner)for (var t = this.owner.getObjects(this.pages, this.questions), n = 0; n < t.length; n++)e(t[n])
                }, n.prototype.onItemSuccess = function (e) {
                    e.visible = !0
                }, n.prototype.onItemFailure = function (e) {
                    e.visible = !1
                }, n
            }(s), u = t.SurveyTriggerComplete = function (t) {
                function n() {
                    t.call(this)
                }

                return e(n, t), n.prototype.getType = function () {
                    return "completetrigger"
                }, Object.defineProperty(n.prototype, "isOnNextPage", {
                    get          : function () {
                        return !0
                    }, enumerable: !0, configurable: !0
                }), n.prototype.onSuccess = function () {
                    this.owner && this.owner.doComplete()
                }, n
            }(s), l = t.SurveyTriggerSetValue = function (t) {
                function n() {
                    t.call(this)
                }

                return e(n, t), n.prototype.getType = function () {
                    return "setvaluetrigger"
                }, n.prototype.onSuccess = function () {
                    this.setToName && this.owner && this.owner.setTriggerValue(this.setToName, this.setValue, this.isVariable)
                }, n
            }(s);
            o.JsonObject.metaData.addClass("trigger", ["operator", "!value"]), o.JsonObject.metaData.addClass("surveytrigger", ["!name"], null, "trigger"), o.JsonObject.metaData.addClass("visibletrigger", ["pages", "questions"], function () {
                return new a
            }, "surveytrigger"), o.JsonObject.metaData.addClass("completetrigger", [], function () {
                return new u
            }, "surveytrigger"), o.JsonObject.metaData.addClass("setvaluetrigger", ["!setToName", "setValue", "isVariable:boolean"], function () {
                return new l
            }, "surveytrigger")
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.SurveyWindowModel = void 0;
            var i               = n(4), o = n(30);
            t.SurveyWindowModel = function (t) {
                function n(e) {
                    t.call(this), this.surveyValue = this.createSurvey(e), this.surveyValue.showTitle = !1, this.windowElement = document.createElement("div")
                }

                return e(n, t), n.prototype.getType = function () {
                    return "window"
                }, Object.defineProperty(n.prototype, "survey", {
                    get          : function () {
                        return this.surveyValue
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "isShowing", {
                    get          : function () {
                        return this.isShowingValue
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "isExpanded", {
                    get          : function () {
                        return this.isExpandedValue
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "title", {
                    get          : function () {
                        return this.titleValue ? this.titleValue : this.survey.title
                    }, set       : function (e) {
                        this.titleValue = e
                    }, enumerable: !0, configurable: !0
                }), n.prototype.expand = function () {
                    this.expandcollapse(!0)
                }, n.prototype.collapse = function () {
                    this.expandcollapse(!1)
                }, n.prototype.createSurvey = function (e) {
                    return new o.SurveyModel(e)
                }, n.prototype.expandcollapse = function (e) {
                    this.isExpandedValue = e
                }, n.surveyElementName = "windowSurveyJS", n
            }(i.Base)
        }).call(t, n(3))
    }, function (e, t) {
        "use strict";
        t.__esModule = !0;
        var n        = t.surveyCss = {
            currentType: "", getCss: function () {
                var e = this.currentType ? this[this.currentType] : i;
                return e || (e = i), e
            }
        }, i = t.defaultStandardCss = {
            root            : "sv_main",
            header          : "",
            body            : "sv_body",
            footer          : "sv_nav",
            navigationButton: "",
            navigation      : {complete: "", prev: "", next: ""},
            progress        : "sv_progress",
            progressBar     : "",
            pageTitle       : "sv_p_title",
            row             : "sv_row",
            question        : {root: "sv_q", title: "sv_q_title", comment: "", indent: 20},
            error           : {root: "sv_q_erbox", icon: "", item: ""},
            checkbox        : {root: "sv_qcbc", item: "sv_q_checkbox", other: "sv_q_other"},
            comment         : "",
            dropdown        : "",
            matrix          : {root: "sv_q_matrix"},
            matrixdropdown  : {root: "sv_q_matrix"},
            matrixdynamic   : {root: "table", button: ""},
            multipletext    : {root: "", itemTitle: "", itemValue: ""},
            radiogroup      : {root: "sv_qcbc", item: "sv_q_radiogroup", other: "sv_q_other"},
            rating          : {root: "sv_q_rating", item: "sv_q_rating_item"},
            text            : "",
            window          : {
                root  : "sv_window",
                body  : "sv_window_content",
                header: {root: "sv_window_title", title: "", button: "", buttonExpanded: "", buttonCollapsed: ""}
            }
        };
        n.standard = i
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            function i(e) {
                if (e && e.__esModule)return e;
                var t = {};
                if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e, t
            }

            t.__esModule = !0, t.Survey = void 0;
            var o    = n(36), r = i(o), s = n(30), a = n(4), u = n(37), l = n(34), c = n(38);
            t.Survey = function (t) {
                function n(e, n, i) {
                    if (void 0 === e && (e = null), void 0 === n && (n = null), void 0 === i && (i = null), t.call(this, e), this.onRendered = new a.Event, this.isFirstRender = !0, i && (this.css = i), n && (this.renderedElement = n), "undefined" == typeof r)throw new Error("knockoutjs library is not loaded.");
                    this.render(n)
                }

                return e(n, t), Object.defineProperty(n, "cssType", {
                    get          : function () {
                        return l.surveyCss.currentType
                    }, set       : function (e) {
                        l.surveyCss.currentType = e
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "cssNavigationComplete", {
                    get          : function () {
                        return this.getNavigationCss(this.css.navigationButton, this.css.navigation.complete)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "cssNavigationPrev", {
                    get          : function () {
                        return this.getNavigationCss(this.css.navigationButton, this.css.navigation.prev)
                    }, enumerable: !0, configurable: !0
                }), Object.defineProperty(n.prototype, "cssNavigationNext", {
                    get          : function () {
                        return this.getNavigationCss(this.css.navigationButton, this.css.navigation.next)
                    }, enumerable: !0, configurable: !0
                }), n.prototype.getNavigationCss = function (e, t) {
                    var n = "";
                    return e && (n = e), t && (n += " " + t), n
                }, Object.defineProperty(n.prototype, "css", {
                    get          : function () {
                        return l.surveyCss.getCss()
                    }, set       : function (e) {
                        this.mergeValues(e, this.css)
                    }, enumerable: !0, configurable: !0
                }), n.prototype.render = function (e) {
                    void 0 === e && (e = null);
                    var t = this;
                    e && "string" == typeof e && (e = document.getElementById(e)), e && (this.renderedElement = e), e = this.renderedElement, e && (e.innerHTML = this.getTemplate(), t.applyBinding(), t.onRendered.fire(t, {}))
                }, n.prototype.loadSurveyFromService = function (e, n) {
                    void 0 === e && (e = null), void 0 === n && (n = null), n && (this.renderedElement = n), t.prototype.loadSurveyFromService.call(this, e)
                }, n.prototype.setCompleted = function () {
                    t.prototype.setCompleted.call(this), this.updateKoCurrentPage()
                }, n.prototype.createNewPage = function (e) {
                    return new u.Page(e)
                }, n.prototype.getTemplate = function () {
                    return c.koTemplate.html
                }, n.prototype.onBeforeCreating = function () {
                    var e = this;
                    this.dummyObservable = r.observable(0), this.koCurrentPage = r.computed(function () {
                        return e.dummyObservable(), e.currentPage
                    }), this.koIsFirstPage = r.computed(function () {
                        return e.dummyObservable(), e.isFirstPage
                    }), this.koIsLastPage = r.computed(function () {
                        return e.dummyObservable(), e.isLastPage
                    }), this.koProgressText = r.computed(function () {
                        return e.dummyObservable(), e.progressText
                    }), this.koProgress = r.computed(function () {
                        return e.dummyObservable(), e.getProgress()
                    }), this.koState = r.computed(function () {
                        return e.dummyObservable(), e.state
                    })
                }, n.prototype.currentPageChanged = function (e, n) {
                    this.updateKoCurrentPage(), t.prototype.currentPageChanged.call(this, e, n)
                }, n.prototype.pageVisibilityChanged = function (e, n) {
                    t.prototype.pageVisibilityChanged.call(this, e, n), this.updateKoCurrentPage()
                }, n.prototype.onLoadSurveyFromService = function () {
                    this.render()
                }, n.prototype.onLoadingSurveyFromService = function () {
                    this.render()
                }, n.prototype.applyBinding = function () {
                    this.renderedElement && (this.updateKoCurrentPage(), r.cleanNode(this.renderedElement), this.isFirstRender || this.updateCurrentPageQuestions(), this.isFirstRender = !1, r.applyBindings(this, this.renderedElement))
                }, n.prototype.updateKoCurrentPage = function () {
                    this.dummyObservable(this.dummyObservable() + 1)
                }, n.prototype.updateCurrentPageQuestions = function () {
                    for (var e = this.currentPage ? this.currentPage.questions : [], t = 0; t < e.length; t++) {
                        var n = e[t];
                        n.visible && n.updateQuestion()
                    }
                }, n
            }(s.SurveyModel)
        }).call(t, n(3))
    }, function (t, n) {
        t.exports = e
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            function i(e) {
                if (e && e.__esModule)return e;
                var t = {};
                if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e, t
            }

            t.__esModule = !0, t.Page = t.QuestionRow = void 0;
            var o = n(36), r = i(o), s = n(21), a = n(7), u = t.QuestionRow = function (t) {
                function n(e, n) {
                    t.call(this, e, n), this.page = e, this.question = n, this.koVisible = r.observable(this.visible)
                }

                return e(n, t), n.prototype.onVisibleChanged = function () {
                    this.koVisible(this.visible)
                }, n.prototype.koAfterRender = function (e, t) {
                    for (var n = 0; n < e.length; n++) {
                        var i = e[n], o = i.nodeName;
                        "#text" == o && (i.data = "")
                    }
                }, n
            }(s.QuestionRowModel), l = t.Page = function (t) {
                function n(e) {
                    void 0 === e && (e = ""), t.call(this, e), this.koNo = r.observable(""), this.onCreating()
                }

                return e(n, t), n.prototype.createRow = function (e) {
                    return new u(this, e)
                }, n.prototype.onCreating = function () {
                }, n.prototype.onNumChanged = function (e) {
                    this.koNo(e > 0 ? e + ". " : "")
                }, n
            }(s.PageModel);
            a.JsonObject.metaData.overrideClassCreatore("page", function () {
                return new l
            })
        }).call(t, n(3))
    }, function (e, t) {
        "use strict";
        t.__esModule = !0;
        var n        = t.koTemplate = {html: ""};
        n.html = '<script type="text/html" id="survey-comment">  <input data-bind="value:$data.question.koComment, visible:$data.visible, css: $root.css.question.comment" /></script><div data-bind="css: $root.css.root">    <div data-bind="visible: (title.length > 0) && showTitle && koState() != \'completed\', css: $root.css.header">        <h3 data-bind="text:title"></h3>    </div>    <!-- ko if: koState() == "running" -->    <div data-bind="css: $root.css.body">        <div data-bind="visible: showProgressBar ==\'top\', template: { name: \'survey-progress\', data: $data }"></div>        <div id="sq_page" data-bind="template: { name: \'survey-page\', data: koCurrentPage }"></div>        <div style="margin-top:10px" data-bind="visible: showProgressBar ==\'bottom\', template: { name: \'survey-progress\', data: $data }"></div>    </div>    <div data-bind="visible: showNavigationButtons && !isDesignMode, css: $root.css.footer">        <input type="button" data-bind="value: pagePrevText, click: prevPage, visible: !koIsFirstPage(), css: $root.cssNavigationPrev" />        <input type="button" data-bind="value: pageNextText, click: nextPage, visible: !koIsLastPage(), css: $root.cssNavigationNext" />        <input type="button" data-bind="value: completeText, click: completeLastPage, visible: koIsLastPage(), css: $root.cssNavigationComplete" />    </div>    <!-- /ko -->    <!-- ko if: koState() == "completed" -->    <div data-bind="html: processedCompletedHtml"></div>    <!-- /ko -->    <!-- ko if: koState() == "loading" -->    <div data-bind="html: processedLoadingHtml"></div>    <!-- /ko -->    <!-- ko if: koState() == "empty" -->    <div data-bind="text:emptySurveyText, css: $root.css.body"></div>    <!-- /ko --></div><script type="text/html" id="survey-page">    <h4 data-bind="visible: (title.length > 0) && data.showPageTitles, text: koNo() + processedTitle, css: $root.css.pageTitle"></h4>    <!-- ko foreach: { data: rows, as: \'row\'} -->    <div data-bind="visible: row.koVisible, css: $root.css.row">        <!-- ko foreach: { data: row.questions, as: \'question\' , afterRender: row.koAfterRender } -->            <!-- ko template: { name: \'survey-question\', data: question } --><!-- /ko -->        <!-- /ko -->    </div>    <!-- /ko --></script><script type="text/html" id="survey-progress">    <div style="width:60%;" data-bind="css: $root.css.progress">        <div data-bind="css: $root.css.progressBar, style:{width: koProgress() + \'%\'}"             role="progressbar" aria-valuemin="0"             aria-valuemax="100">            <span data-bind="text:koProgressText"></span>        </div>    </div></script><script type="text/html" id="survey-question-checkbox">    <form data-bind="css: $root.css.checkbox.root">        <!-- ko foreach: { data: question.koVisibleChoices, as: \'item\', afterRender: question.koAfterRender}  -->        <div data-bind="style:{width: question.koWidth, \'margin-right\': question.colCount == 0 ? \'5px\': \'0px\'}, css: $root.css.checkbox.item">            <label data-bind="css: $root.css.checkbox.item">                <input type="checkbox" data-bind="attr: {name: question.name, value: item.value}, checked: question.koValue" />                <span data-bind="text: item.text"></span>            </label>            <div data-bind="visible: question.hasOther && ($index() == question.koVisibleChoices().length-1)">                <div data-bind="template: { name: \'survey-comment\', data: {\'question\': question, \'visible\': question.koOtherVisible } }, css: $root.css.checkbox.other"></div>            </div>        </div>        <!-- /ko -->    </form></script><script type="text/html" id="survey-question-comment">    <textarea type="text" data-bind="attr: {cols: question.cols, rows: question.rows}, value:question.koValue, css: $root.css.comment" /></script><script type="text/html" id="survey-question-dropdown">    <select data-bind="options: question.koVisibleChoices, optionsText: \'text\', optionsValue: \'value\', value: question.koValue, optionsCaption: question.optionsCaption, css: $root.css.dropdown"></select>    <div data-bind="visible: question.hasOther">        <div data-bind="template: { name: \'survey-comment\', data: {\'question\': question, \'visible\': question.koOtherVisible } }"></div>    </div></script><script type="text/html" id="survey-question-errors">    <div role="alert" data-bind="visible: koErrors().length > 0, foreach: { data: koErrors, as: \'error\'}, css: $root.css.error.root">        <div>            <span aria-hidden="true" data-bind="css: $root.css.error.icon"></span>            <span data-bind="text:error.getText(), css: $root.css.error.item"></span>        </div>    </div></script><script type="text/html" id="survey-question-file">    <input type="file" data-bind="event: {change: dochange}">    <div>        <img data-bind="attr: { src: question.koData, height: question.imageHeight, width: question.imageWidth }, visible: question.koHasValue">    </div></script><script type="text/html" id="survey-question-html">    <div data-bind="html: question.processedHtml"></div></script><script type="text/html" id="survey-question-matrix">    <table data-bind="css: $root.css.matrix.root">        <thead>            <tr>                <th data-bind="visible: question.hasRows"></th>                <!-- ko foreach: question.columns -->                <th data-bind="text:$data.text"></th>                <!-- /ko -->            </tr>        </thead>        <tbody>            <!-- ko foreach: { data: question.visibleRows, as: \'row\' } -->            <tr>                <td data-bind="visible: question.hasRows, text:row.text"></td>                <!-- ko foreach: question.columns -->                <td>                    <input type="radio" data-bind="attr: {name: row.fullName, value: $data.value}, checked: row.koValue"/>                </td>                <!-- /ko -->            </tr>            <!-- /ko -->        </tbody>    </table></script><script type="text/html" id="survey-question-matrixdropdown">    <div data-bind="style: {overflowX: question.horizontalScroll? \'scroll\': \'\'}">        <table data-bind="css: $root.css.matrixdropdown.root">            <thead>                <tr>                    <th></th>                    <!-- ko foreach: question.columns -->                    <th data-bind="text: question.getColumnTitle($data), style: { minWidth: question.getColumnWidth($data) }"></th>                    <!-- /ko -->                </tr>            </thead>            <tbody>                <!-- ko foreach: { data: question.visibleRows, as: \'row\' } -->                <tr>                    <td data-bind="text:row.text"></td>                    <!-- ko foreach: row.cells-->                    <td>                        <!-- ko template: { name: \'survey-question-errors\', data: $data.question } -->                        <!-- /ko -->                        <!-- ko template: { name: \'survey-question-\' + $data.question.getType(), data: $data.question, as: \'question\' } -->                        <!-- /ko -->                    </td>                    <!-- /ko -->                </tr>                <!-- /ko -->            </tbody>        </table>    </div></script><script type="text/html" id="survey-question-matrixdynamic">    <div data-bind="style: {overflowX: question.horizontalScroll? \'scroll\': \'\'}">        <table data-bind="css: $root.css.matrixdynamic.root">            <thead>                <tr>                    <!-- ko foreach: question.columns -->                    <th data-bind="text: question.getColumnTitle($data), style: { minWidth: question.getColumnWidth($data) }"></th>                    <!-- /ko -->                    <th></th>                </tr>            </thead>            <tbody>                <!-- ko foreach: { data: question.koRows, as: \'row\' } -->                <tr>                    <!-- ko foreach: row.cells-->                    <td>                        <!-- ko template: { name: \'survey-question-errors\', data: $data.question } -->                        <!-- /ko -->                        <!-- ko template: { name: \'survey-question-\' + $data.question.getType(), data: $data.question, as: \'question\' } -->                        <!-- /ko -->                    </td>                    <!-- /ko -->                    <td><input type="button" data-bind="click:question.koRemoveRowClick, css: $root.css.matrixdynamic.button, value: question.removeRowText" /></td>                </tr>                <!-- /ko -->            </tbody>        </table>    </div>    <input type="button" data-bind="click:question.koAddRowClick, css: $root.css.matrixdynamic.button, value: question.addRowText" /></script><script type="text/html" id="survey-question-multipletext">    <table data-bind="css: $root.css.multipletext.root, foreach: { data:  question.koRows, as: \'row\' }">        <tr data-bind="foreach: { data: row, as: \'item\' }">            <td data-bind="text: item.title, css: $root.css.multipletext.itemTitle"></td>            <td><input type="text" style="float:left" data-bind="attr: {size: question.itemSize}, value: item.koValue, css: $root.css.multipletext.itemValue" /></td>        </tr>    </table></script><script type="text/html" id="survey-question-radiogroup">    <form data-bind="css: $root.css.radiogroup.root">        <!-- ko foreach: { data: question.koVisibleChoices, as: \'item\', afterRender: question.koAfterRender}  -->        <div  data-bind="style:{width: question.koWidth, \'margin-right\': question.colCount == 0 ? \'5px\': \'0px\'}, css: $root.css.radiogroup.item">            <label data-bind="css: $root.css.radiogroup.item">                <input type="radio" data-bind="attr: {name: question.name, value: item.value}, checked: question.koValue" />                <span data-bind="text: item.text"></span>            </label>            <div data-bind="visible: question.hasOther && ($index() == question.koVisibleChoices().length-1)">                <div data-bind="template: { name: \'survey-comment\', data: {\'question\': question, \'visible\': question.koOtherVisible}}, css: $root.css.radiogroup.other"></div>            </div>        </div>        <!-- /ko -->    </form></script><script type="text/html" id="survey-question-rating">    <div data-bind="css: $root.css.rating.root">        <!-- ko foreach: question.koVisibleRateValues -->        <label data-bind="css: question.koGetCss($data)">            <input type="radio" style="display: none;"                    data-bind="attr: {name: question.name, id: question.name + $index(), value: $data.value}, event: { change: question.koChange}" />            <span data-bind="visible: $index() == 0, text: question.mininumRateDescription"></span>            <span data-bind="text: $data.text"></span>            <span data-bind="visible: $index() == (question.koVisibleRateValues().length-1), text: question.maximumRateDescription"></span>        </label>        <!-- /ko -->    </div>    <div data-bind="visible: question.hasOther">        <div data-bind="template: { name: \'survey-comment\', data: {\'question\': question } }"></div>    </div></script><script type="text/html" id="survey-question-text">    <input data-bind="attr: {type: question.inputType, size: question.size}, value:question.koValue, css: $root.css.text"/></script><script type="text/html" id="survey-question">    <div style="vertical-align:top" data-bind="css: $root.css.question.root, style: {display: question.koVisible() ? \'inline-block\': \'none\', marginLeft: question.koMarginLeft, paddingRight: question.koPaddingRight, width: question.koRenderWidth }, attr: {id: id}">        <!-- ko if: question.hasTitle -->        <h5 data-bind="visible: $root.questionTitleLocation == \'top\', text: question.koTitle(), css: $root.css.question.title"></h5>        <!-- /ko -->        <!-- ko template: { name: \'survey-question-errors\', data: question } -->        <!-- /ko -->        <!-- ko template: { name: \'survey-question-\' + question.getType(), data: question, afterRender: question.koQuestionAfterRender } -->        <!-- /ko -->        <div data-bind="visible: question.hasComment">            <div data-bind="text:question.commentText"></div>            <div data-bind="template: { name: \'survey-comment\', data: {\'question\': question, \'visible\': true } }"></div>        </div>        <!-- ko if: question.hasTitle -->        <h5 data-bind="visible: $root.questionTitleLocation == \'bottom\', text: question.koTitle(), css: $root.css.question.title"></h5>        <!-- /ko -->    </div></script>';
    }, function (e, t, n) {
        "use strict";
        function i(e) {
            if (e && e.__esModule)return e;
            var t = {};
            if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t["default"] = e, t
        }

        t.__esModule = !0, t.QuestionImplementorBase = void 0;
        var o                     = n(36), r = i(o);
        t.QuestionImplementorBase = function () {
            function e(e) {
                this.question = e;
                var t         = this;
                e.visibilityChangedCallback = function () {
                    t.onVisibilityChanged()
                }, e.renderWidthChangedCallback = function () {
                    t.onRenderWidthChanged()
                }, this.koVisible = r.observable(this.question.visible), this.koRenderWidth = r.observable(this.question.renderWidth), this.koErrors = r.observableArray(), this.koMarginLeft = r.pureComputed(function () {
                    return t.koRenderWidth(), t.getIndentSize(t.question.indent)
                }), this.koPaddingRight = r.observable(t.getIndentSize(t.question.rightIndent)), this.question.koVisible = this.koVisible, this.question.koRenderWidth = this.koRenderWidth, this.question.koErrors = this.koErrors, this.question.koMarginLeft = this.koMarginLeft, this.question.koPaddingRight = this.koPaddingRight, this.question.updateQuestion = function () {
                    t.updateQuestion()
                }
            }

            return e.prototype.updateQuestion = function () {
            }, e.prototype.onVisibilityChanged = function () {
                this.koVisible(this.question.visible)
            }, e.prototype.onRenderWidthChanged = function () {
                this.koRenderWidth(this.question.renderWidth), this.koPaddingRight(this.getIndentSize(this.question.rightIndent))
            }, e.prototype.getIndentSize = function (e) {
                if (e < 1)return "";
                if (!this.question.data)return "";
                var t = this.question.data.css;
                return t ? e * t.question.indent + "px" : ""
            }, e
        }()
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            function i(e) {
                if (e && e.__esModule)return e;
                var t = {};
                if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e, t
            }

            t.__esModule = !0, t.QuestionImplementor = void 0;
            var o                 = n(36), r = i(o), s = n(39);
            t.QuestionImplementor = function (t) {
                function n(e) {
                    t.call(this, e), this.question = e, this.isUpdating = !1;
                    var n = this;
                    e.valueChangedCallback = function () {
                        n.onValueChanged()
                    }, e.commentChangedCallback = function () {
                        n.onCommentChanged()
                    }, e.errorsChangedCallback = function () {
                        n.onErrorsChanged()
                    }, e.titleChangedCallback = function () {
                        n.onVisibleIndexChanged()
                    }, e.visibleIndexChangedCallback = function () {
                        n.onVisibleIndexChanged()
                    }, this.koDummy = r.observable(0), this.koValue = this.createkoValue(), this.koComment = r.observable(this.question.comment), this.koTitle = r.pureComputed(function () {
                        return n.koDummy(), n.question.fullTitle
                    }), this.koErrors(this.question.errors), this.koValue.subscribe(function (e) {
                        n.updateValue(e)
                    }), this.koComment.subscribe(function (e) {
                        n.updateComment(e)
                    }), this.question.koValue = this.koValue, this.question.koComment = this.koComment, this.question.koTitle = this.koTitle, this.question.koQuestionAfterRender = this.koQuestionAfterRender
                }

                return e(n, t), n.prototype.updateQuestion = function () {
                    this.koDummy(this.koDummy() + 1)
                }, n.prototype.onValueChanged = function () {
                    this.isUpdating || this.setkoValue(this.question.value)
                }, n.prototype.onCommentChanged = function () {
                    this.isUpdating || this.koComment(this.question.comment)
                }, n.prototype.onVisibilityChanged = function () {
                    this.koVisible(this.question.visible)
                }, n.prototype.onVisibleIndexChanged = function () {
                    this.koDummy(this.koDummy() + 1)
                }, n.prototype.onErrorsChanged = function () {
                    this.koErrors(this.question.errors)
                }, n.prototype.createkoValue = function () {
                    return r.observable(this.question.value)
                }, n.prototype.setkoValue = function (e) {
                    this.koValue(e)
                }, n.prototype.updateValue = function (e) {
                    this.isUpdating = !0, this.question.value = e, this.isUpdating = !1
                }, n.prototype.updateComment = function (e) {
                    this.isUpdating = !0, this.question.comment = e, this.isUpdating = !1
                }, n.prototype.getNo = function () {
                    return this.question.visibleIndex > -1 ? this.question.visibleIndex + 1 + ". " : ""
                }, n.prototype.koQuestionAfterRender = function (e, t) {
                    var n = e[0];
                    "#text" == n.nodeName && (n.data = ""), n = e[e.length - 1], "#text" == n.nodeName && (n.data = "")
                }, n
            }(s.QuestionImplementorBase)
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            function i(e) {
                if (e && e.__esModule)return e;
                var t = {};
                if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e, t
            }

            t.__esModule = !0, t.QuestionCheckboxBaseImplementor = t.QuestionSelectBaseImplementor = void 0;
            var o = n(36), r = i(o), s = n(40), a = t.QuestionSelectBaseImplementor = function (t) {
                function n(e) {
                    t.call(this, e);
                    var n = this;
                    this.koOtherVisible = r.computed(function () {
                        return n.koValue(), n.isOtherSelected
                    }), this.koVisibleChoices = r.observableArray(n.question.visibleChoices), e.choicesChangedCallback = function () {
                        n.koVisibleChoices(n.question.visibleChoices)
                    }, this.question.koOtherVisible = this.koOtherVisible, this.question.koVisibleChoices = this.koVisibleChoices
                }

                return e(n, t), Object.defineProperty(n.prototype, "isOtherSelected", {
                    get          : function () {
                        return this.question.isOtherSelected
                    }, enumerable: !0, configurable: !0
                }), n
            }(s.QuestionImplementor);
            t.QuestionCheckboxBaseImplementor = function (t) {
                function n(e) {
                    t.call(this, e), this.koWidth = r.observable(this.colWidth), this.question.koWidth = this.koWidth, this.question.koAfterRender = this.koAfterRender;
                    var n                                 = this;
                    this.question.colCountChangedCallback = function () {
                        n.onColCountChanged()
                    }
                }

                return e(n, t), n.prototype.onColCountChanged = function () {
                    this.question.koWidth = r.observable(this.colWidth)
                }, Object.defineProperty(n.prototype, "colWidth", {
                    get          : function () {
                        var e = this.question.colCount;
                        return e > 0 ? 100 / e + "%" : ""
                    }, enumerable: !0, configurable: !0
                }), n.prototype.koAfterRender = function (e, t) {
                    var n = e[0];
                    "#text" == n.nodeName && (n.data = ""), n = e[e.length - 1], "#text" == n.nodeName && (n.data = "")
                }, n
            }(a)
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            function i(e) {
                if (e && e.__esModule)return e;
                var t = {};
                if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e, t
            }

            t.__esModule = !0, t.QuestionCheckbox = void 0;
            var o                                   = n(36), r = i(o), s = n(41), a = n(7), u = n(16), l = n(22), c = function (t) {
                function n(e) {
                    t.call(this, e)
                }

                return e(n, t), n.prototype.createkoValue = function () {
                    return this.question.value ? r.observableArray(this.question.value) : r.observableArray()
                }, n.prototype.setkoValue = function (e) {
                    e ? this.koValue([].concat(e)) : this.koValue([])
                }, n
            }(s.QuestionCheckboxBaseImplementor), h = t.QuestionCheckbox = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new c(this)
                }

                return e(n, t), n
            }(l.QuestionCheckboxModel);
            a.JsonObject.metaData.overrideClassCreatore("checkbox", function () {
                return new h("")
            }), u.QuestionFactory.Instance.registerQuestion("checkbox", function (e) {
                var t = new h(e);
                return t.choices = u.QuestionFactory.DefaultChoices, t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionComment = void 0;
            var i = n(7), o = n(16), r = n(23), s = n(40), a = t.QuestionComment = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new s.QuestionImplementor(this)
                }

                return e(n, t), n
            }(r.QuestionCommentModel);
            i.JsonObject.metaData.overrideClassCreatore("comment", function () {
                return new a("")
            }), o.QuestionFactory.Instance.registerQuestion("comment", function (e) {
                return new a(e)
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionDropdown = void 0;
            var i = n(24), o = n(7), r = n(16), s = n(41), a = t.QuestionDropdown = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new s.QuestionSelectBaseImplementor(this)
                }

                return e(n, t), n
            }(i.QuestionDropdownModel);
            o.JsonObject.metaData.overrideClassCreatore("dropdown", function () {
                return new a("")
            }), r.QuestionFactory.Instance.registerQuestion("dropdown", function (e) {
                var t = new a(e);
                return t.choices = r.QuestionFactory.DefaultChoices, t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            function i(e) {
                if (e && e.__esModule)return e;
                var t = {};
                if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e, t
            }

            t.__esModule = !0, t.QuestionFile = t.QuestionFileImplementor = void 0;
            var o = n(36), r = i(o), s = n(7), a = n(16), u = n(25), l = n(40), c = t.QuestionFileImplementor = function (t) {
                function n(e) {
                    t.call(this, e);
                    var n = this;
                    this.koDataUpdater = r.observable(0), this.koData = r.computed(function () {
                        return n.koDataUpdater(), n.question.previewValue
                    }), this.koHasValue = r.observable(!1), this.question.koData = this.koData, this.question.koHasValue = this.koHasValue, this.question.previewValueLoadedCallback = function () {
                        n.onLoadPreview()
                    }, this.question.dochange = function (e, t) {
                        var i = t.target || t.srcElement;
                        n.onChange(i)
                    }
                }

                return e(n, t), n.prototype.onChange = function (e) {
                    window.FileReader && (!e || !e.files || e.files.length < 1 || this.question.loadFile(e.files[0]))
                }, n.prototype.onLoadPreview = function () {
                    this.koDataUpdater(this.koDataUpdater() + 1), this.koHasValue(!0)
                }, n
            }(l.QuestionImplementor), h = t.QuestionFile = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new c(this)
                }

                return e(n, t), n
            }(u.QuestionFileModel);
            s.JsonObject.metaData.overrideClassCreatore("file", function () {
                return new h("")
            }), a.QuestionFactory.Instance.registerQuestion("file", function (e) {
                return new h(e)
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionHtml = void 0;
            var i = n(7), o = n(16), r = n(39), s = n(26), a = t.QuestionHtml = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new r.QuestionImplementorBase(this)
                }

                return e(n, t), n
            }(s.QuestionHtmlModel);
            i.JsonObject.metaData.overrideClassCreatore("html", function () {
                return new a("")
            }), o.QuestionFactory.Instance.registerQuestion("html", function (e) {
                return new a(e)
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            function i(e) {
                if (e && e.__esModule)return e;
                var t = {};
                if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e, t
            }

            t.__esModule = !0, t.QuestionMatrix = t.MatrixRow = void 0;
            var o = n(36), r = i(o), s = n(19), a = n(40), u = n(7), l = n(16), c = t.MatrixRow = function (t) {
                function n(e, n, i, o, s) {
                    t.call(this, e, n, i, o, s), this.name = e, this.text = n, this.fullName = i, this.isValueUpdating = !1, this.koValue = r.observable(this.value);
                    var a = this;
                    this.koValue.subscribe(function (e) {
                        a.isValueUpdating, a.value = e
                    })
                }

                return e(n, t), n.prototype.onValueChanged = function () {
                    this.isValueUpdating = !0, this.koValue(this.value), this.isValueUpdating = !1
                }, n
            }(s.MatrixRowModel), h = t.QuestionMatrix = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new a.QuestionImplementor(this)
                }

                return e(n, t), n.prototype.createMatrixRow = function (e, t, n, i) {
                    return new c(e, t, n, this, i)
                }, n
            }(s.QuestionMatrixModel);
            u.JsonObject.metaData.overrideClassCreatore("matrix", function () {
                return new h("")
            }), l.QuestionFactory.Instance.registerQuestion("matrix", function (e) {
                var t = new h(e);
                return t.rows = ["Row 1", "Row 2"], t.columns = ["Column 1", "Column 2", "Column 3"], t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionMatrixDropdown = void 0;
            var i = n(17), o = n(7), r = n(16), s = n(40), a = t.QuestionMatrixDropdown = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new s.QuestionImplementor(this)
                }

                return e(n, t), n
            }(i.QuestionMatrixDropdownModel);
            o.JsonObject.metaData.overrideClassCreatore("matrixdropdown", function () {
                return new a("")
            }), r.QuestionFactory.Instance.registerQuestion("matrixdropdown", function (e) {
                var t = new a(e);
                return t.choices = [1, 2, 3, 4, 5], t.rows = ["Row 1", "Row 2"], t.addColumn("Column 1"), t.addColumn("Column 2"), t.addColumn("Column 3"), t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            function i(e) {
                if (e && e.__esModule)return e;
                var t = {};
                if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e, t
            }

            t.__esModule = !0, t.QuestionMatrixDynamic = t.QuestionMatrixDynamicImplementor = void 0;
            var o = n(36), r = i(o), s = n(7), a = n(16), u = n(40), l = n(18), c = t.QuestionMatrixDynamicImplementor = function (t) {
                function n(e) {
                    t.call(this, e), this.koRecalc = r.observable(0), this.koRows = r.pureComputed(function () {
                        return this.koRecalc(), this.question.cachedVisibleRows
                    }, this), this.koOverflowX = r.pureComputed(function () {
                        return this.question.horizontalScroll ? "scroll" : "none"
                    }, this), this.question.koRows = this.koRows;
                    var n = this;
                    this.koAddRowClick = function () {
                        n.addRow()
                    }, this.koRemoveRowClick = function (e) {
                        n.removeRow(e)
                    }, this.question.koAddRowClick = this.koAddRowClick, this.question.koRemoveRowClick = this.koRemoveRowClick, this.question.koOverflowX = this.koOverflowX, this.question.rowCountChangedCallback = function () {
                        n.onRowCountChanged()
                    }, this.question.columnsChangedCallback = function () {
                        n.onColumnChanged()
                    }, this.question.updateCellsCallbak = function () {
                        n.onUpdateCells()
                    }
                }

                return e(n, t), n.prototype.onUpdateCells = function () {
                    var e = this.question.generatedVisibleRows, t = this.question.columns;
                    e && e.length > 0 && t && t.length > 0 && this.onColumnChanged()
                }, n.prototype.onColumnChanged = function () {
                    this.question.visibleRows;
                    this.onRowCountChanged()
                }, n.prototype.onRowCountChanged = function () {
                    this.koRecalc(this.koRecalc() + 1)
                }, n.prototype.addRow = function () {
                    this.question.addRow()
                }, n.prototype.removeRow = function (e) {
                    var t = this.question.cachedVisibleRows, n = t.indexOf(e);
                    n > -1 && this.question.removeRow(n)
                }, n
            }(u.QuestionImplementor), h = t.QuestionMatrixDynamic = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new c(this)
                }

                return e(n, t), n
            }(l.QuestionMatrixDynamicModel);
            s.JsonObject.metaData.overrideClassCreatore("matrixdynamic", function () {
                return new h("")
            }), a.QuestionFactory.Instance.registerQuestion("matrixdynamic", function (e) {
                var t = new h(e);
                return t.choices = [1, 2, 3, 4, 5], t.rowCount = 2, t.addColumn("Column 1"), t.addColumn("Column 2"), t.addColumn("Column 3"), t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            function i(e) {
                if (e && e.__esModule)return e;
                var t = {};
                if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e, t
            }

            t.__esModule = !0, t.QuestionMultipleText = t.QuestionMultipleTextImplementor = t.MultipleTextItem = void 0;
            var o = n(36), r = i(o), s = n(20), a = n(40), u = n(7), l = n(16), c = t.MultipleTextItem = function (t) {
                function n(e, n) {
                    void 0 === e && (e = null), void 0 === n && (n = null), t.call(this, e, n), this.name = e, this.isKOValueUpdating = !1, this.koValue = r.observable(this.value);
                    var i = this;
                    this.koValue.subscribe(function (e) {
                        i.isKOValueUpdating || (i.value = e)
                    })
                }

                return e(n, t), n.prototype.onValueChanged = function (e) {
                    this.isKOValueUpdating = !0, this.koValue(e), this.isKOValueUpdating = !1
                }, n
            }(s.MultipleTextItemModel), h = t.QuestionMultipleTextImplementor = function (t) {
                function n(e) {
                    t.call(this, e), this.koRows = r.observableArray(this.question.getRows()), this.question.koRows = this.koRows, this.onColCountChanged();
                    var n                                 = this;
                    this.question.colCountChangedCallback = function () {
                        n.onColCountChanged()
                    }
                }

                return e(n, t), n.prototype.onColCountChanged = function () {
                    this.koRows(this.question.getRows())
                }, n
            }(a.QuestionImplementor), p = t.QuestionMultipleText = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new h(this)
                }

                return e(n, t), n.prototype.createTextItem = function (e, t) {
                    return new c(e, t)
                }, n
            }(s.QuestionMultipleTextModel);
            u.JsonObject.metaData.overrideClassCreatore("multipletextitem", function () {
                return new c("")
            }), u.JsonObject.metaData.overrideClassCreatore("multipletext", function () {
                return new p("")
            }), l.QuestionFactory.Instance.registerQuestion("multipletext", function (e) {
                var t = new p(e);
                return t.AddItem("text1"), t.AddItem("text2"), t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionRadiogroup = void 0;
            var i = n(27), o = n(7), r = n(16), s = n(41), a = t.QuestionRadiogroup = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new s.QuestionCheckboxBaseImplementor(this)
                }

                return e(n, t), n
            }(i.QuestionRadiogroupModel);
            o.JsonObject.metaData.overrideClassCreatore("radiogroup", function () {
                return new a("")
            }), r.QuestionFactory.Instance.registerQuestion("radiogroup", function (e) {
                var t = new a(e);
                return t.choices = r.QuestionFactory.DefaultChoices, t
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            function i(e) {
                if (e && e.__esModule)return e;
                var t = {};
                if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e, t
            }

            t.__esModule = !0, t.QuestionRating = void 0;
            var o                       = n(36), r = i(o), s = n(40), a = n(28), u = n(7), l = n(16), c = function (t) {
                function n(e) {
                    t.call(this, e), this.koVisibleRateValues = r.observableArray(this.getValues()), this.question.koVisibleRateValues = this.koVisibleRateValues;
                    var n = this;
                    this.koChange = function (e) {
                        n.koValue(e.itemValue)
                    }, this.question.koChange = this.koChange, this.question.rateValuesChangedCallback = function () {
                        n.onRateValuesChanged()
                    }, this.question.koGetCss = function (e) {
                        var t = n.question.itemCss;
                        return n.question.koValue() == e.value ? t + " active" : t
                    }
                }

                return e(n, t), n.prototype.onRateValuesChanged = function () {
                    this.koVisibleRateValues(this.getValues())
                }, n.prototype.getValues = function () {
                    return this.question.visibleRateValues
                }, n
            }(s.QuestionImplementor), h = t.QuestionRating = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new c(this)
                }

                return e(n, t), n.prototype.onSetData = function () {
                    this.itemCss = this.data.css.rating.item
                }, n
            }(a.QuestionRatingModel);
            u.JsonObject.metaData.overrideClassCreatore("rating", function () {
                return new h("")
            }), l.QuestionFactory.Instance.registerQuestion("rating", function (e) {
                return new h(e)
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            t.__esModule = !0, t.QuestionText = t.QuestionTextImplementor = void 0;
            var i = n(29), o = n(7), r = n(16), s = n(40), a = t.QuestionTextImplementor = function (t) {
                function n(e) {
                    t.call(this, e), this.question = e
                }

                return e(n, t), n.prototype.updateValue = function (e) {
                    t.prototype.updateValue.call(this, e), e !== this.question.value && this.koValue(this.question.value)
                }, n
            }(s.QuestionImplementor), u = t.QuestionText = function (t) {
                function n(e) {
                    t.call(this, e), this.name = e, new a(this)
                }

                return e(n, t), n
            }(i.QuestionTextModel);
            o.JsonObject.metaData.overrideClassCreatore("text", function () {
                return new u("")
            }), r.QuestionFactory.Instance.registerQuestion("text", function (e) {
                return new u(e)
            })
        }).call(t, n(3))
    }, function (e, t, n) {
        (function (e) {
            "use strict";
            function i(e) {
                if (e && e.__esModule)return e;
                var t = {};
                if (null != e)for (var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e, t
            }

            t.__esModule = !0, t.SurveyWindow = void 0;
            var o          = n(36), r = i(o), s = n(33), a = n(35), u = n(55);
            t.SurveyWindow = function (t) {
                function n(e) {
                    t.call(this, e), this.koExpanded = r.observable(!1), this.koExpandedCss = r.observable(this.getButtonCss());
                    var n = this;
                    this.doExpand = function () {
                        n.changeExpanded()
                    }, this.survey.onComplete.add(function (e) {
                        n.onComplete(), n.koExpandedCss(n.getButtonCss())
                    })
                }

                return e(n, t), n.prototype.createSurvey = function (e) {
                    return new a.Survey(e)
                }, n.prototype.expandcollapse = function (e) {
                    t.prototype.expandcollapse.call(this, e), this.koExpanded(this.isExpandedValue)
                }, Object.defineProperty(n.prototype, "template", {
                    get          : function () {
                        return this.templateValue ? this.templateValue : this.getDefaultTemplate()
                    }, set       : function (e) {
                        this.templateValue = e
                    }, enumerable: !0, configurable: !0
                }), n.prototype.show = function () {
                    this.windowElement.innerHTML = this.template, r.cleanNode(this.windowElement), r.applyBindings(this, this.windowElement), document.body.appendChild(this.windowElement), this.survey.render(n.surveyElementName), this.isShowingValue = !0
                }, n.prototype.getDefaultTemplate = function () {
                    return u.koTemplate.html
                }, n.prototype.hide = function () {
                    document.body.removeChild(this.windowElement), this.windowElement.innerHTML = "", this.isShowingValue = !1
                }, Object.defineProperty(n.prototype, "css", {
                    get          : function () {
                        return this.survey.css
                    }, enumerable: !0, configurable: !0
                }), n.prototype.changeExpanded = function () {
                    this.expandcollapse(!this.isExpanded)
                }, n.prototype.onComplete = function () {
                    this.hide()
                }, n.prototype.getButtonCss = function () {
                    return this.koExpanded() ? this.css.window.header.buttonCollapsed : this.css.window.header.buttonExpanded
                }, n
            }(s.SurveyWindowModel)
        }).call(t, n(3))
    }, function (e, t) {
        "use strict";
        t.__esModule = !0;
        var n        = t.koTemplate = {html: ""};
        n.html = '<div style="position: fixed; bottom: 3px; right: 10px;" data-bind="css: $root.css.window.root">    <div data-bind="css: $root.css.window.header.root">        <a href="#" data-bind="click:doExpand" style="width:100%">            <span style="padding-right:10px" data-bind="text:title, css: $root.css.window.header.title"></span>            <span aria-hidden="true" data-bind="css: koExpandedCss"></span>        </a>    </div>    <div data-bind="visible:koExpanded, css: $root.css.window.body">        <div id="windowSurveyJS"></div>    </div></div>'
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.SurveyTemplateText = void 0;
        var i                = n(38);
        t.SurveyTemplateText = function () {
            function e() {
            }

            return e.prototype.replaceText = function (e, t, n) {
                void 0 === n && (n = null), t = this.getId(t, n);
                var i = this.text.indexOf(t);
                if (!(i < 0 || (i = this.text.indexOf(">", i), i < 0))) {
                    var o = i + 1, r = "</script>";
                    i = this.text.indexOf(r, o), i < 0 || (this.text = this.text.substr(0, o) + e + this.text.substr(i))
                }
            }, e.prototype.getId = function (e, t) {
                var n = 'id="survey-' + e;
                return t && (n += "-" + t), n + '"'
            }, Object.defineProperty(e.prototype, "text", {
                get          : function () {
                    return i.koTemplate.html
                }, set       : function (e) {
                    i.koTemplate.html = e
                }, enumerable: !0, configurable: !0
            }), e
        }()
    }, function (e, t, n) {
        "use strict";
        n(58), n(59), n(60), n(61), n(62), n(63), n(64), n(65)
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.danishSurveyStrings = void 0;
        var i = n(6), o = t.danishSurveyStrings = {
            pagePrevText      : "Tilbage",
            pageNextText      : "Videre",
            completeText      : "Færdig",
            progressText      : "Side {0} af {1}",
            emptySurvey       : "Der er ingen synlige spørgsmål.",
            completingSurvey  : "Mange tak for din besvarelse!",
            loadingSurvey     : "Spørgeskemaet hentes fra serveren...",
            otherItemText     : "Valgfrit svar...",
            optionsCaption    : "Vælg...",
            requiredError     : "Besvar venligst spørgsmålet.",
            numericError      : "Angiv et tal.",
            textMinLength     : "Angiv mindst {0} tegn.",
            minSelectError    : "Vælg venligst mindst  {0} svarmulighed(er).",
            maxSelectError    : "Vælg venligst færre {0} svarmuligheder(er).",
            numericMinMax     : "'{0}' skal være lig med eller større end {1} og lig med eller mindre end {2}",
            numericMin        : "'{0}' skal være lig med eller større end {1}",
            numericMax        : "'{0}' skal være lig med eller mindre end {1}",
            invalidEmail      : "Angiv venligst en gyldig e-mail adresse.",
            exceedMaxSize     : "Filstørrelsen må ikke overstige {0}.",
            otherRequiredError: "Angiv en værdi for dit valgfrie svar."
        };
        i.surveyLocalization.locales.da = o
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.dutchSurveyStrings = void 0;
        var i = n(6), o = t.dutchSurveyStrings = {
            pagePrevText      : "Vorige",
            pageNextText      : "Volgende",
            completeText      : "Afsluiten",
            otherItemText     : "Andere",
            progressText      : "Pagina {0} van {1}",
            emptySurvey       : "Er is geen zichtbare pagina of vraag in deze vragenlijst",
            completingSurvey  : "Bedankt om deze vragenlijst in te vullen",
            loadingSurvey     : "De vragenlijst is aan het laden...",
            optionsCaption    : "Kies...",
            requiredError     : "Gelieve een antwoord in te vullen",
            numericError      : "Het antwoord moet een getal zijn",
            textMinLength     : "Gelieve minsten {0} karakters in te vullen.",
            minSelectError    : "Gelieve minimum {0} antwoorden te selecteren.",
            maxSelectError    : "Gelieve niet meer dan {0} antwoorden te selecteren.",
            numericMinMax     : "Uw antwoord '{0}' moet groter of gelijk zijn aan {1} en kleiner of gelijk aan {2}",
            numericMin        : "Uw antwoord '{0}' moet groter of gelijk zijn aan {1}",
            numericMax        : "Uw antwoord '{0}' moet groter of gelijk zijn aan {1}",
            invalidEmail      : "Gelieve een geldig e-mailadres in te vullen.",
            exceedMaxSize     : "De grootte van het bestand mag niet groter zijn dan {0}.",
            otherRequiredError: "Gelieve het veld 'Andere' in te vullen"
        };
        i.surveyLocalization.locales.nl = o
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.finnishSurveyStrings = void 0;
        var i = n(6), o = t.finnishSurveyStrings = {
            pagePrevText      : "Edellinen",
            pageNextText      : "Seuraava",
            completeText      : "Valmis",
            otherItemText     : "Muu (kuvaile)",
            progressText      : "Sivu {0}/{1}",
            emptySurvey       : "Tässä kyselyssä ei ole yhtäkään näkyvillä olevaa sivua tai kysymystä.",
            completingSurvey  : "Kiitos kyselyyn vastaamisesta!",
            loadingSurvey     : "Kyselyä ladataan palvelimelta...",
            optionsCaption    : "Valitse...",
            requiredError     : "Vastaa kysymykseen, kiitos.",
            numericError      : "Arvon tulee olla numeerinen.",
            textMinLength     : "Ole hyvä ja syötä vähintään {0} merkkiä.",
            minSelectError    : "Ole hyvä ja valitse vähintään {0} vaihtoehtoa.",
            maxSelectError    : "Ole hyvä ja valitse enintään {0} vaihtoehtoa.",
            numericMinMax     : "'{0}' täytyy olla enemmän tai yhtä suuri kuin {1} ja vähemmän tai yhtä suuri kuin {2}",
            numericMin        : "'{0}' täytyy olla enemmän tai yhtä suuri kuin {1}",
            numericMax        : "'{0}' täytyy olla vähemmän tai yhtä suuri kuin {1}",
            invalidEmail      : "Syötä validi sähköpostiosoite.",
            otherRequiredError: 'Ole hyvä ja syötä "Muu (kuvaile)"'
        };
        i.surveyLocalization.locales.fi = o
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.frenchSurveyStrings = void 0;
        var i = n(6), o = t.frenchSurveyStrings = {
            pagePrevText      : "Précédent",
            pageNextText      : "Suivant",
            completeText      : "Terminer",
            otherItemText     : "Autre (préciser)",
            progressText      : "Page {0} sur {1}",
            emptySurvey       : "Il n'y a ni page visible ni question visible dans ce questionnaire",
            completingSurvey  : "Merci d'avoir répondu au questionnaire!",
            loadingSurvey     : "Le questionnaire est en cours de chargement...",
            optionsCaption    : "Choisissez...",
            requiredError     : "La réponse à cette question est obligatoire.",
            numericError      : "La réponse doit être un nombre.",
            textMinLength     : "Merci d'entrer au moins {0} symboles.",
            minSelectError    : "Merci de sélectionner au moins {0}réponses.",
            maxSelectError    : "Merci de sélectionner au plus {0}réponses.",
            numericMinMax     : "Votre réponse '{0}' doit êtresupérieure ou égale à {1} et inférieure ouégale à {2}",
            numericMin        : "Votre réponse '{0}' doit êtresupérieure ou égale à {1}",
            numericMax        : "Votre réponse '{0}' doit êtreinférieure ou égale à {1}",
            invalidEmail      : "Merci d'entrer une adresse mail valide.",
            exceedMaxSize     : "La taille du fichier ne doit pas excéder {0}.",
            otherRequiredError: "Merci de préciser le champ 'Autre'."
        };
        i.surveyLocalization.locales.fr = o
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.germanSurveyStrings = void 0;
        var i = n(6), o = t.germanSurveyStrings = {
            pagePrevText      : "Zurück",
            pageNextText      : "Weiter",
            completeText      : "Fertig",
            progressText      : "Seite {0} von {1}",
            emptySurvey       : "Es gibt keine sichtbare Frage.",
            completingSurvey  : "Vielen Dank für das Ausfüllen des Fragebogens!",
            loadingSurvey     : "Der Fragebogen wird vom Server geladen...",
            otherItemText     : "Benutzerdefinierte Antwort...",
            optionsCaption    : "Wählen...",
            requiredError     : "Bitte antworten Sie auf die Frage.",
            numericError      : "Der Wert sollte eine Zahl sein.",
            textMinLength     : "Bitte geben Sie mindestens {0} Symbole.",
            minSelectError    : "Bitte wählen Sie mindestens {0} Varianten.",
            maxSelectError    : "Bitte wählen Sie nicht mehr als {0} Varianten.",
            numericMinMax     : "'{0}' solte gleich oder größer sein als {1} und gleich oder kleiner als {2}",
            numericMin        : "'{0}' solte gleich oder größer sein als {1}",
            numericMax        : "'{0}' solte gleich oder kleiner als {1}",
            invalidEmail      : "Bitte geben Sie eine gültige Email-Adresse ein.",
            exceedMaxSize     : "Die Dateigröße soll nicht mehr als {0}.",
            otherRequiredError: "Bitte geben Sie einen Wert für Ihre benutzerdefinierte Antwort ein."
        };
        i.surveyLocalization.locales.de = o
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.polishSurveyStrings = void 0;
        var i = n(6), o = t.polishSurveyStrings = {
            pagePrevText      : "Wstecz",
            pageNextText      : "Dalej",
            completeText      : "Gotowe",
            progressText      : "Strona {0} z {1}",
            emptySurvey       : "Nie ma widocznych pytań.",
            completingSurvey  : "Dziękujemy za wypełnienie ankiety!",
            loadingSurvey     : "Trwa wczytywanie ankiety...",
            otherItemText     : "Inna odpowiedź...",
            optionsCaption    : "Wybierz...",
            requiredError     : "Proszę odpowiedzieć na to pytanie.",
            numericError      : "W tym polu można wpisać tylko liczby.",
            textMinLength     : "Proszę wpisać co najmniej {0} znaków.",
            minSelectError    : "Proszę wybrać co najmniej {0} pozycji.",
            maxSelectError    : "Proszę wybrać nie więcej niż {0} pozycji.",
            numericMinMax     : "Odpowiedź '{0}' powinna być większa lub równa {1} oraz mniejsza lub równa {2}",
            numericMin        : "Odpowiedź '{0}' powinna być większa lub równa {1}",
            numericMax        : "Odpowiedź '{0}' powinna być mniejsza lub równa {1}",
            invalidEmail      : "Proszę podać prawidłowy adres email.",
            exceedMaxSize     : "Rozmiar przesłanego pliku nie może przekraczać {0}.",
            otherRequiredError: "Proszę podać inną odpowiedź."
        };
        i.surveyLocalization.locales.pl = o
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.russianSurveyStrings = void 0;
        var i = n(6), o = t.russianSurveyStrings = {
            pagePrevText      : "Назад",
            pageNextText      : "Далее",
            completeText      : "Готово",
            progressText      : "Страница {0} из {1}",
            emptySurvey       : "Нет ни одного вопроса.",
            completingSurvey  : "Благодарим Вас за заполнение анкеты!",
            loadingSurvey     : "Загрузка с сервера...",
            otherItemText     : "Другое (пожалуйста, опишите)",
            optionsCaption    : "Выбрать...",
            requiredError     : "Пожалуйста, ответьте на вопрос.",
            numericError      : "Ответ должен быть числом.",
            textMinLength     : "Пожалуйста, введите хотя бы {0} символов.",
            minSelectError    : "Пожалуйста, выберите хотя бы {0} вариантов.",
            maxSelectError    : "Пожалуйста, выберите не более {0} вариантов.",
            numericMinMax     : "'{0}' должно быть равным или больше, чем {1}, и равным или меньше, чем {2}",
            numericMin        : "'{0}' должно быть равным или больше, чем {1}",
            numericMax        : "'{0}' должно быть равным или меньше, чем {1}",
            invalidEmail      : "Пожалуйста, введите действительный адрес электронной почты.",
            otherRequiredError: 'Пожалуйста, введите данные в поле "Другое"'
        };
        i.surveyLocalization.locales.ru = o
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.turkishSurveyStrings = void 0;
        var i = n(6), o = t.turkishSurveyStrings = {
            pagePrevText      : "Geri",
            pageNextText      : "İleri",
            completeText      : "Anketi Tamamla",
            otherItemText     : "Diğer (açıklayınız)",
            progressText      : "Sayfa {0} / {1}",
            emptySurvey       : "Ankette görüntülenecek sayfa ya da soru mevcut değil.",
            completingSurvey  : "Anketimizi tamamladığınız için teşekkür ederiz.",
            loadingSurvey     : "Anket sunucudan yükleniyor ...",
            optionsCaption    : "Seçiniz ...",
            requiredError     : "Lütfen soruya cevap veriniz",
            numericError      : "Girilen değer numerik olmalıdır",
            textMinLength     : "En az {0} sembol giriniz.",
            minRowCountError  : "Lütfen en az {0} satırı doldurun.",
            minSelectError    : "Lütfen en az {0} seçeneği seçiniz.",
            maxSelectError    : "Lütfen {0} adetten fazla seçmeyiniz.",
            numericMinMax     : "The '{0}' should be equal or more than {1} and equal or less than {2}",
            numericMin        : "'{0}' değeri {1} değerine eşit veya büyük olmalıdır",
            numericMax        : "'{0}' değeri {1} değerine eşit ya da küçük olmalıdır.",
            invalidEmail      : "Lütfen geçerli bir eposta adresi giriniz.",
            urlRequestError   : "Talebi şu hatayı döndü '{0}'. {1}",
            urlGetChoicesError: "Talep herhangi bir veri dönmedi ya da 'path' özelliği hatalı.",
            exceedMaxSize     : "Dosya boyutu {0} değerini geçemez.",
            otherRequiredError: "Lütfen diğer değerleri giriniz.",
            uploadingFile     : "Dosyanız yükleniyor. LÜtfen birkaç saniye bekleyin ve tekrar deneyin.",
            addRow            : "Satır Ekle",
            removeRow         : "Kaldır"
        };
        i.surveyLocalization.locales.tr = o
    }, function (e, t, n) {
        "use strict";
        n(67)
    }, function (e, t, n) {
        "use strict";
        t.__esModule = !0, t.defaultBootstrapCss = void 0;
        var i = n(34), o = t.defaultBootstrapCss = {
            root            : "",
            header          : "panel-heading",
            body            : "panel-body",
            footer          : "panel-footer",
            navigationButton: "",
            navigation      : {complete: "", prev: "", next: ""},
            progress        : "progress center-block",
            progressBar     : "progress-bar",
            pageTitle       : "",
            row             : "",
            question        : {root: "", title: "", comment: "form-control", indent: 20},
            error           : {
                root: "alert alert-danger",
                icon: "glyphicon glyphicon-exclamation-sign",
                item: ""
            },
            checkbox        : {root: "form-inline", item: "checkbox", other: ""},
            comment         : "form-control",
            dropdown        : "form-control",
            matrix          : {root: "table"},
            matrixdropdown  : {root: "table"},
            matrixdynamic   : {root: "table", button: "button"},
            multipletext    : {root: "table", itemTitle: "", itemValue: "form-control"},
            radiogroup      : {root: "form-inline", item: "radio", other: ""},
            rating          : {root: "btn-group", item: "btn btn-default"},
            text            : "form-control",
            window          : {
                root  : "modal-content",
                body  : "modal-body",
                header: {
                    root           : "modal-header panel-title",
                    title          : "pull-left",
                    button         : "glyphicon pull-right",
                    buttonExpanded : "glyphicon pull-right glyphicon-chevron-up",
                    buttonCollapsed: "glyphicon pull-right glyphicon-chevron-down"
                }
            }
        };
        i.surveyCss.bootstrap = o
    }])
});